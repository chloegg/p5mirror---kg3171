[
  {
    "name": "Accurate ship",
    "_id": "hNM8CJTEu",
    "updatedAt": "2022-10-10T02:37:14.723Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63349cb70e2ad766ab89585c",
          "63349cb70e2ad766ab89585b",
          "63349cb70e2ad766ab89585d"
        ],
        "fileType": "folder",
        "_id": "63349cb70e2ad766ab89585e",
        "createdAt": "2022-10-10T02:37:14.723Z",
        "updatedAt": "2022-10-10T02:37:14.723Z",
        "id": "63349cb70e2ad766ab89585e"
      },
      {
        "name": "sketch.js",
        "content": "let x = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  // These two loops are the same\n  // x = 0;\n  // while (x < width) {\n  //   ellipse(x,50,50,30);\n  //   x = x + 50;\n  // }  \n  \n  // for (let x = 0; x < width; x+=50)\n  // {\n  //   ellipse(x,50,50,30);\n  // }  \n  \n  \n  for (let x = 0; x < width; x+=50)\n  {\n     fill(random(255),random(255),random(255));\n    for (let y = 0;y < height; y+=30) {\n      \n      if (mouseIsPressed && dist(x,y,mouseX,mouseY) < 10) {\n       fill(255,0,0)\n        rect(30, 20, 55, 55);\n      } else {\n        fill(0,0,255)\n        rect(40, 30, 22, 22)\n      }\n        \n      ellipse(x,y,50,30);\n    }\n  }  \n  \n  \n  \n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "63349cb70e2ad766ab89585b",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T02:37:14.723Z",
        "updatedAt": "2022-10-10T02:37:14.723Z",
        "id": "63349cb70e2ad766ab89585b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63349cb70e2ad766ab89585c",
        "createdAt": "2022-10-10T02:37:14.723Z",
        "updatedAt": "2022-10-10T02:37:14.723Z",
        "id": "63349cb70e2ad766ab89585c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63349cb70e2ad766ab89585d",
        "createdAt": "2022-10-10T02:37:14.723Z",
        "updatedAt": "2022-10-10T02:37:14.723Z",
        "id": "63349cb70e2ad766ab89585d"
      }
    ],
    "createdAt": "2022-09-28T19:26:06.881Z",
    "id": "hNM8CJTEu"
  },
  {
    "name": "Amused guide",
    "_id": "FOleelp0Y",
    "updatedAt": "2022-10-17T02:07:52.268Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634c5f79b9350ce18770c190",
          "634c5f79b9350ce18770c18f",
          "634c5f79b9350ce18770c191"
        ],
        "fileType": "folder",
        "_id": "634c5f79b9350ce18770c192",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:52.268Z",
        "updatedAt": "2022-10-17T02:07:52.268Z",
        "id": "634c5f79b9350ce18770c192"
      },
      {
        "name": "sketch.js",
        "content": "let emojiPlay = [];\nlet speedX\nlet speedY\nlet XPos\nlet YPos\nlet result\nlet red = 0\nlet green = 255\nlet blue = 0\nlet color = 0\nlet diameter = 20\nlet barWidth = 200\nlet score = 0\nlet buttonW = 70\nlet buttonH = 30\nlet buttonColor = 0\nlet backgroundColor = 0\nlet startW = 260\nlet startH = 70\nlet startA = 0\nlet value = 0\n\n\n\n\n\n\nfunction setup() {\n  rectMode(CENTER)\n  createCanvas(600, 600);\n  fill(red, green, blue);\n  textSize(15)\n  speedX = random(2, 5)\n  speedY = random(5, 6)\n  XPos = random(50, 550)\n  YPos = random(0, 50)\n  for (let i = 0; i < 15; i++) {\n    emojiPlay.push(new emojiPos());\n  }\n}\n\nfunction draw() {\n  background(0, 0, 0, 80)\n  strokeWeight(0);\n\n  if (value == 1) {\n    scorePrint(35,45);\n    bar(barWidth);\n    ball(red,green,blue);\n    bouncing();\n    bouncingEffect();\n    changeLevel(random(0.6,0.9),random(1,1.3));\n    finalResults(5,9,11,12);\n    button(0.75)\n  } else {\n    startPage(0,0,255,0.75)\n  }\n\n  \n  \n  \n \n \n  function scorePrint(x,y) {\n    push()\n    fill(255)\n    text('SCORE : ' + score, x, y);\n    pop()\n  }\n\n  function bouncingEffect() {\n    push()\n    if (YPos > 545 - diameter / 2 && YPos < 565 - diameter && mouseX - barWidth < XPos && XPos < mouseX + barWidth) {\n      fill(color, color, color)\n      rect(mouseX, 560, 2 * barWidth - 20, 10);\n\n      fill(color, color, color, 0);\n      strokeWeight(1);\n      stroke(255);\n      rect(mouseX + 5, 545, 2 * barWidth + 10, 10);\n      ellipse(XPos, YPos + 10, diameter + 20, diameter + 20);\n      ellipse(XPos - 10, YPos - 10, diameter + 10, diameter + 10);\n      ellipse(XPos + 15, YPos - 25, diameter - 15, diameter - 15);\n    }\n    pop()\n  }\n\n  function bar(x) {\n    push()\n    fill(color, color, color)\n    strokeWeight(1);\n    stroke(255)\n    rect(mouseX, 550, 2 * x, 10)\n    pop()\n  }\n\n  function ball(x,y,z) {\n    fill(x, y, z);\n    ellipse(XPos, YPos, diameter, diameter)\n    XPos = XPos + speedX\n    YPos = YPos + speedY\n  }\n\n  function bouncing() {\n    if (XPos > width - diameter / 2 || XPos < diameter / 2) {\n      speedX = -(speedX)\n    }\n\n    if (YPos > 550 - diameter / 2 && YPos < 565 - diameter && mouseX - barWidth < XPos && XPos < mouseX + barWidth || YPos < diameter / 2) {\n      speedY = -(speedY)\n    }\n  }\n\n  function changeLevel(xLevel,yLevel) {\n    if (YPos > 550 - diameter / 2 && YPos < 565 - diameter && mouseX - barWidth < XPos && XPos < mouseX + barWidth) {\n      score++\n      barWidth = barWidth - 15\n      fill(red, green, blue);\n      red = red + 45\n      green = green - 45\n      color = 255\n\n      if (speedY < 0) {\n        speedY = speedY - yLevel\n      } else {\n        speedY = speedY + yLevel\n      }\n\n      if (speedX < 0) {\n        speedX = speedX - xLevel\n      } else {\n        speedX = speedX + xLevel\n      }\n    } else {\n      color = 0\n    }\n  }\n}\n\nfunction button(x) {\n  push()\n  strokeWeight(x)\n  stroke(255)\n  fill(0, 100, buttonColor, buttonColor)\n  rect(530, 45, buttonW, buttonH)\n  if (mouseX > 495 && mouseX < 565 && mouseY > 30 && mouseY < 60) {\n    buttonW = 78, buttonH = 35, buttonColor = 255\n  } else {\n    buttonW = 70, buttonH = 30, buttonColor = 0\n  }\n  pop()\n\n  push()\n  fill(255)\n  text('Restart', 505, 50);\n  pop()\n\n}\n\nfunction endPage() {\n  push()\n  background(0, 0, 255)\n  fill(255)\n  textSize(25)\n  textAlign(CENTER);\n  text(result, width / 2, height / 2 - 60);\n  textSize(110)\n  text(score, width / 2, height / 2 + 60);\n  pop()\n}\n\nfunction finalResults(a,b,c,d) {\n  if (score <= a) {\n    result = 'Your Score'\n    sticker = '💩'\n  }\n\n  if (score > a && score <= b) {\n    result = 'Not bad, try again'\n    sticker = '😌'\n  }\n\n  if (score > b && score <= c) {\n    result = 'Amazing !'\n    sticker = '👽'\n  }\n\n  if (score == d) {\n    result = 'YOU WIN !!!'\n    sticker = '🎉'\n  }\n\n  if (YPos > 900 || score == d) {\n    endPage();\n    for (let i = 0; i < emojiPlay.length; i++) {\n      emojiPlay[i].display();\n    }\n  }\n\n if (YPos > 900 || score == d) {\n    backgroundColor = backgroundColor + 20\n  } else {\n    backgroundColor = 0\n  }\n}\n\nfunction startPage(r,g,b,x) {\n  push()\n  fill(255)\n  strokeWeight(x)\n  stroke(255)\n  fill(r, g, b, startA)\n  rect(width / 2, height / 2, startW, startH)\n  if (mouseX > width / 2 - 130 && mouseX < width / 2 + 130 && mouseY > height / 2 - 35 && mouseY < height / 2 + 35) {\n    startW = 280, startH = 80, startA = startA + 10\n  } else {\n    startW = 260, startH = 70, startA = 0\n  }\n  pop()\n\n  push()\n  fill(255)\n  textSize(29)\n  textAlign(CENTER);\n  text('Start ☄️ Game', width / 2, height / 2 + 10)\n  pop()\n}\n\nfunction mouseClicked() {\n  if (mouseX > 495 && mouseX < 565 && mouseY > 30 && mouseY < 60) {\n    red = 0\n    green = 255\n    blue = 0\n    color = 0\n    diameter = 20\n    barWidth = 200\n    score = 0\n    counter = 0\n    speedX = random(2, 5)\n    speedY = random(5, 6)\n    XPos = random(50, 550)\n    YPos = random(0, 50)\n    buttonColor = 0\n  }\n}\n\nfunction mouseReleased() {\n  if (mouseX > width / 2 - 130 && mouseX < width / 2 + 130 && mouseY > height / 2 - 35 && mouseY < height / 2 + 35) {\n    value = 1\n  }\n}\n\nclass emojiPos {\n  constructor() {\n    this.x = random(width);\n    this.y = random(height);\n    this.diameter = random(10, 30);\n  }\n  display() {\n    push()\n    textSize(this.diameter * 2)\n    fill(0, 0, 0, backgroundColor)\n    text(sticker, this.x, this.y)\n    pop()\n    if (this.y > 800) {\n      this.y = this.y - 800\n    }\n    this.y = this.y + 3\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634c5f79b9350ce18770c18f",
        "isSelectedFile": true,
        "createdAt": "2022-10-17T02:07:52.268Z",
        "updatedAt": "2022-10-17T02:07:52.268Z",
        "id": "634c5f79b9350ce18770c18f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634c5f79b9350ce18770c190",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:52.268Z",
        "updatedAt": "2022-10-17T02:07:52.268Z",
        "id": "634c5f79b9350ce18770c190"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634c5f79b9350ce18770c191",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:52.268Z",
        "updatedAt": "2022-10-17T02:07:52.268Z",
        "id": "634c5f79b9350ce18770c191"
      }
    ],
    "createdAt": "2022-10-16T22:00:39.197Z",
    "id": "FOleelp0Y"
  },
  {
    "name": "Ash anatosaurus",
    "_id": "8HbiUo_v9",
    "updatedAt": "2022-10-17T02:07:40.129Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634ca9b7b150ac63eb0adc51",
          "634ca9b7b150ac63eb0adc50",
          "634ca9b7b150ac63eb0adc52"
        ],
        "fileType": "folder",
        "_id": "634ca9b7b150ac63eb0adc53",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:40.129Z",
        "updatedAt": "2022-10-17T02:07:40.129Z",
        "id": "634ca9b7b150ac63eb0adc53"
      },
      {
        "name": "sketch.js",
        "content": "const serial = new p5.WebSerial();\nlet portButton;\n\nlet emojiPlay = [];\nlet speedX\nlet speedY\nlet XPos\nlet YPos\nlet result\nlet red = 0\nlet green = 255\nlet blue = 0\nlet color = 0\nlet diameter = 20\nlet barWidth = 200\nlet score = 0\nlet buttonW = 70\nlet buttonH = 30\nlet buttonColor = 0\nlet backgroundColor = 0\nlet startW = 260\nlet startH = 70\nlet startA = 0\nlet barX = 10;\nlet barColor = 255;\n\nlet state = 0;\n\nfunction setup() {\n  createCanvas(600, 600);\n  // for (let i = 0; i < 15; i++) {\n  //   emojiPlay.push(new emojiPos());\n  }\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  serial.getPorts();\n\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n\n\n\nfunction draw() {\n  background(0, 0, 0, 80);\n  if (state == 0) {\n    startPage();\n  } else if (state == 1) {\n    scorePrint();\n    bouncingEffect();\n    ball(red,green,blue); \n    button();\n    bouncing();\n  } else if (state==2){\n    endPage();\n    finalResults(a,b,c,d)\n  }\n  \n   function scorePrint(x,y) {\n    push()\n    fill(255)\n    text('SCORE : ' + score, x, y);\n    pop()\n  }\n  function bouncingEffect() {\n    push()\n    if (YPos > 545 - diameter / 2 && YPos < 565 - diameter && barX - barWidth < XPos && XPos < barX + barWidth) {\n      fill(color, color, color)\n      rect(barX, 560, 2 * barWidth - 20, 10);\n      ellipse(XPos, YPos + 10, diameter + 20, diameter + 20);\n      ellipse(XPos - 10, YPos - 10, diameter + 10, diameter + 10);\n      ellipse(XPos + 15, YPos - 25, diameter - 15, diameter - 15);\n    }\n    pop()\n  }\n  function ball(x,y,z) {\n    fill(x, y, z);\n    ellipse(XPos, YPos, diameter, diameter)\n    XPos = XPos + speedX\n    YPos = YPos + speedY\n  }\n  function bouncing() {\n    if (XPos > width - diameter / 2 || XPos < diameter / 2) {\n      speedX = -(speedX)\n    }\n\n    if (YPos > 550 - diameter / 2 && YPos < 565 - diameter && mouseX - barWidth < XPos && XPos < mouseX + barWidth || YPos < diameter / 2) {\n      speedY = -(speedY)\n    }\n  }\nfunction button(x) {\n  push()\n  strokeWeight(x)\n  stroke(255)\n  fill(0, 100, buttonColor, buttonColor)\n  rect(530, 45, buttonW, buttonH)\n  if (mouseX > 495 && mouseX < 565 && mouseY > 30 && mouseY < 60) {\n    buttonW = 78, buttonH = 35, buttonColor = 255\n  } else {\n    buttonW = 70, buttonH = 30, buttonColor = 0\n  }\n  pop()\n\n  push()\n  fill(255)\n  text('Restart', 505, 50);\n  pop()\n\n}\nfunction endPage() {\n  push()\n  background(0, 0, 255)\n  fill(255)\n  textSize(25)\n  textAlign(CENTER);\n  text(result, width / 2, height / 2 - 60);\n  textSize(110)\n  text(score, width / 2, height / 2 + 60);\n  pop()\n}\n  function finalResults(a,b,c,d) {\n    if (score <= a) {\n    result = 'Your Score'\n  }\n     if (score > a && score <= b) {\n    result = 'Not bad, try again'\n     }\n    if (score > b && score <= c) {\n    result = 'Amazing !'\n    }\n    if (score == d) {\n    result = 'YOU WIN !!!'\n    }\n    if (YPos > 900 || score == d) {\n    endPage();\n    for (let i = 0; i < emojiPlay.length; i++) {\n      emojiPlay[i].display();\n    }\n  }\n\n if (YPos > 900 || score == d) {\n    backgroundColor = backgroundColor + 20\n  } else {\n    backgroundColor = 0\n  }\n    \n    \n    function serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  \n  if (inString) {\n    let values = split(inString, ',');\n\n    if (values.length > 1){ \n      barX = int(map(values[0], 0,1023, 0, 255));\n      barColor = int(map(values[1], 0,1023, 0, 400));\n\n      serial.write(\"x\"); \n    }\n  }\n}\n\n\n////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTION  ///\n////////////////////////////////////////////\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "634ca9b7b150ac63eb0adc50",
        "isSelectedFile": true,
        "createdAt": "2022-10-17T02:07:40.129Z",
        "updatedAt": "2022-10-17T02:07:40.129Z",
        "id": "634ca9b7b150ac63eb0adc50"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634ca9b7b150ac63eb0adc51",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:40.129Z",
        "updatedAt": "2022-10-17T02:07:40.129Z",
        "id": "634ca9b7b150ac63eb0adc51"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634ca9b7b150ac63eb0adc52",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T02:07:40.129Z",
        "updatedAt": "2022-10-17T02:07:40.129Z",
        "id": "634ca9b7b150ac63eb0adc52"
      }
    ],
    "createdAt": "2022-10-17T02:07:40.129Z",
    "id": "8HbiUo_v9"
  },
  {
    "name": "Chlorinated emperor",
    "_id": "Y6ZxCQUuv",
    "updatedAt": "2023-03-04T18:43:59.074Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6403913f6a368452abe74098",
          "6403913f6a368452abe74097",
          "6403913f6a368452abe74099"
        ],
        "fileType": "folder",
        "_id": "6403913f6a368452abe7409a",
        "createdAt": "2023-03-04T18:43:59.074Z",
        "updatedAt": "2023-03-04T18:43:59.074Z",
        "isSelectedFile": false,
        "id": "6403913f6a368452abe7409a"
      },
      {
        "name": "sketch.js",
        "content": "let serial;\nlet state = 0;\nlet foo;\n\nfunction setup() {\n    createCanvas(400, 400);\n    serial = new p5.SerialPort();\n    serial.list();\n    serial.open('COM3'); // change to the port of your Arduino board\n    serial.on('data', serialEvent);\n    foo = new p5.SpeechRec();\n    foo.onResult = showResult;\n    foo.start();\n}\n\nfunction draw() {\n    background(220);\n    if (state == 0) {\n        fill(255, 0, 0);\n    } else {\n        fill(0, 255, 0);\n    }\n    ellipse(width/2, height/2, 100, 100);\n}\n\nfunction serialEvent() {\n    let data = serial.readLine();\n    if (data) {\n        data = data.trim();\n        if (data == 'on') {\n            state = 1;\n            serial.write('1');\n        } else if (data == 'off') {\n            state = 0;\n            serial.write('0');\n        }\n    }\n}\n\nfunction showResult() {\n    if (foo.resultValue == true) {\n        let input = foo.resultString.toLowerCase();\n        if (input == 'on') {\n            state = 1;\n            serial.write('1');\n        } else if (input == 'off') {\n            state = 0;\n            serial.write('0');\n        }\n    }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6403913f6a368452abe74097",
        "isSelectedFile": false,
        "createdAt": "2023-03-04T18:43:59.074Z",
        "updatedAt": "2023-03-04T18:43:59.074Z",
        "id": "6403913f6a368452abe74097"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>p5.serialport example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/p5.serialport@1.2.1/lib/p5.serialport.js\"></script>\n</head>\n<body>\n    <h1>Voice-controlled LED</h1>\n    <p>Speak \"on\" or \"off\" to control the LED:</p>\n    <script src=\"sketch.js\"></script>\n</body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6403913f6a368452abe74098",
        "createdAt": "2023-03-04T18:43:59.074Z",
        "updatedAt": "2023-03-04T18:43:59.074Z",
        "isSelectedFile": true,
        "id": "6403913f6a368452abe74098"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6403913f6a368452abe74099",
        "createdAt": "2023-03-04T18:43:59.074Z",
        "updatedAt": "2023-03-04T18:43:59.074Z",
        "isSelectedFile": false,
        "id": "6403913f6a368452abe74099"
      }
    ],
    "createdAt": "2023-03-04T18:43:15.008Z",
    "id": "Y6ZxCQUuv"
  },
  {
    "name": "Debonair pharaoh",
    "_id": "IPow0DG_G",
    "updatedAt": "2022-10-18T15:48:55.974Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634c63a4c359fc66d0123691",
          "634c63a4c359fc66d0123690",
          "634c63a4c359fc66d0123692"
        ],
        "fileType": "folder",
        "_id": "634c63a4c359fc66d0123693",
        "isSelectedFile": false,
        "createdAt": "2022-10-18T15:48:55.974Z",
        "updatedAt": "2022-10-18T15:48:55.974Z",
        "id": "634c63a4c359fc66d0123693"
      },
      {
        "name": "sketch.js",
        "content": "const serial = new p5.WebSerial();\nlet portButton;\n\nlet emojiPlay = [];\nlet speedX = 5\nlet speedY = 5\nlet XPos = 10\nlet YPos = 10\nlet result\nlet red = 0\nlet green = 255\nlet blue = 0\nlet color = 0\nlet diameter = 20\nlet barWidth = 200\nlet score = 0\nlet buttonW = 70\nlet buttonH = 30\nlet buttonColor = 0\nlet backgroundColor = 0\nlet startW = 260\nlet startH = 70\nlet startA = 0\nlet barX = 10;\nlet barColor = 255;\n\nlet state = 0;\n\nfunction setup() {\n  createCanvas(600, 600);\n  // for (let i = 0; i < 15; i++) {\n  //   emojiPlay.push(new emojiPos());\n  \n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  serial.getPorts();\n\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n\nfunction draw() {\n  background(0, 0, 0, 80);\n  if (state == 0) {\n    startPage();\n  }  if (state == 1) {\n    bouncingEffect();\n    scorePrint();\n    ball(red,green,blue); \n    // button();\n    bouncing();\n  }  if (state==2){\n    endPage();\n    finalResults(a,b,c,d)\n  }\n}\n  \nfunction startPage() {\n background(0);\n// Draw the title - hot pink letters\n  fill(255,105,180);\n  textSize(32);\n  textAlign(CENTER);\n  text('Bouncing Ball', width/2, height/2);\n  \n  if (mouseIsPressed) {\n    state = 1;\n  }\n}\n\n   function scorePrint() {\n    //push()\n    fill(255)\n    text('SCORE : ' + score, width*0.7, height*0.1);\n    //pop()\n  }\n  \n  function bouncingEffect() {\n    //push()\n    if (YPos > 545 - diameter / 2 && YPos < 565 - diameter && barX - barWidth < XPos && XPos < barX + barWidth) {\n      fill(color, color, color)\n      rect(barX, 560, 2 * barWidth - 20, 10);\n      ellipse(XPos, YPos + 10, diameter + 20, diameter + 20);\n      ellipse(XPos - 10, YPos - 10, diameter + 10, diameter + 10);\n      ellipse(XPos + 15, YPos - 25, diameter - 15, diameter - 15);\n    }\n    //pop()\n  }\n\n  function ball(x,y,z) {\n    fill(x, y, z);\n    ellipse(XPos, YPos, diameter, diameter)\n    XPos = XPos + speedX\n    YPos = YPos + speedY\n  }\n\n  function bouncing() {\n    if (XPos > width - diameter / 2 || XPos < diameter / 2) {\n      speedX = -(speedX)\n    }\n\n    // if (YPos > height - diameter / 2 || YPos < diameter / 2 || mouseX - barWidth < XPos || XPos < mouseX + barWidth || YPos < diameter / 2) {\n    //   speedY = -(speedY)\n    if (YPos < diameter/2) {\n         speedY = -(speedY)\n    }\n  }\n\n// function button(x) {\n//   push()\n//   strokeWeight(x)\n//   stroke(255)\n//   fill(0, 100, buttonColor, buttonColor)\n//   rect(530, 45, buttonW, buttonH)\n//   if (mouseX > 495 && mouseX < 565 && mouseY > 30 && mouseY < 60) {\n//     buttonW = 78, buttonH = 35, buttonColor = 255;\n//   } else {\n//     buttonW = 70, buttonH = 30, buttonColor = 0;\n//   }\n//   pop();\n\n//   push()\n//   fill(255)\n//   text('Restart', 505, 50);\n//   pop()\n// }\n  \n\nfunction endPage() {\n  push()\n  background(0, 0, 255)\n  fill(255)\n  textSize(25)\n  textAlign(CENTER);\n  text(result, width / 2, height / 2 - 60);\n  textSize(110)\n  text(score, width / 2, height / 2 + 60);\n  pop()\n}\n\n\n  function finalResults(a,b,c,d) {\n    if (score <= a) {\n    result = 'Your Score'\n  }\n     if (score > a && score <= b) {\n    result = 'Not bad, try again'\n     }\n    if (score > b && score <= c) {\n    result = 'Amazing !'\n    }\n    if (score == d) {\n    result = 'YOU WIN !!!'\n    }\n    if (YPos > 900 || score == d) {\n    endPage();\n    for (let i = 0; i < emojiPlay.length; i++) {\n      emojiPlay[i].display();\n    }\n  }\n\n if (YPos > 900 || score == d) {\n    backgroundColor = backgroundColor + 20\n  } else {\n    backgroundColor = 0\n  }\n  }\n    \n    \n    function serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  \n  if (inString) {\n    let values = split(inString, ',');\n\n    if (values.length > 1){ \n      barX = int(map(values[0], 0,1023, 0, 255));\n      barColor = int(map(values[1], 0,1023, 0, 400));\n\n      serial.write(\"x\"); \n    }\n  }\n}\n\n\n////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTION  ///\n////////////////////////////////////////////\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n  \n  ",
        "children": [],
        "fileType": "file",
        "_id": "634c63a4c359fc66d0123690",
        "isSelectedFile": true,
        "createdAt": "2022-10-18T15:48:55.974Z",
        "updatedAt": "2022-10-18T15:48:55.974Z",
        "id": "634c63a4c359fc66d0123690"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n     <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634c63a4c359fc66d0123691",
        "isSelectedFile": false,
        "createdAt": "2022-10-18T15:48:55.974Z",
        "updatedAt": "2022-10-18T15:48:55.974Z",
        "id": "634c63a4c359fc66d0123691"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634c63a4c359fc66d0123692",
        "isSelectedFile": false,
        "createdAt": "2022-10-18T15:48:55.974Z",
        "updatedAt": "2022-10-18T15:48:55.974Z",
        "id": "634c63a4c359fc66d0123692"
      }
    ],
    "createdAt": "2022-10-16T21:58:14.941Z",
    "id": "IPow0DG_G"
  },
  {
    "name": "Distance",
    "_id": "l8kKmZlZA",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64050922754a1456f4c03051",
          "64050922754a1456f4c03053",
          "64050922754a1456f4c03054",
          "64050922754a1456f4c03055",
          "64050922754a1456f4c03056"
        ],
        "fileType": "folder",
        "_id": "64050922754a1456f4c03050",
        "createdAt": "2023-03-05T23:56:36.326Z",
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "isSelectedFile": false,
        "id": "64050922754a1456f4c03050"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/p5.serialserver@0.0.28/lib/p5.serialport.js\"></script>\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "64050922754a1456f4c03053",
        "createdAt": "2023-03-05T23:56:36.326Z",
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "isSelectedFile": false,
        "id": "64050922754a1456f4c03053"
      },
      {
        "name": "sketch.js",
        "content": "// Copyright (c) 2019 ml5\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n/* ===\nml5 Example\nWebcam Image Classification using a pre-trained customized model and p5.js\nThis example uses p5 preload function to create the classifier\n=== */\n\nlet serial;\nlet latestData = \"waiting for data\";\nlet classifier; // Classifier Variable\nlet imageModelURL = 'https://teachablemachine.withgoogle.com/models/l1osovygX/'; // Model URL\nlet video; // Video\nlet flippedVideo;\nlet label = \"\"; // To store the classification\nlet audio;\nlet check;\n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n  audio = loadSound(\"Alarm.m4a\");\n}\n\n\nfunction setup() {\n  createCanvas(480, 390);\n  serial = new p5.SerialPort();\n  serial.open(\"/dev/cu.usbmodem14201\");\n  serial.on('data', gotData);\n\n  video = createCapture(VIDEO); // Create the video\n  video.size(320, 240);\n  video.hide();\n\n  flippedVideo = ml5.flipImage(video)\n  classifyVideo(); // Start classifying\n}\n\nfunction draw() {\n  background(0);\n  // Draw the video\n  image(flippedVideo, 0, 0, 480, 360);\n\n  // Draw the label\n  if (label == \"Safe\") {\n    fill(255, 255, 0);\n    audio.stop();\n  }\n  if (label == \"Intruder\") {\n    fill(0, 255, 0);\n    image(check, 350, 70, 108, 132);\n    audio.stop();\n  }\n  if (label == \"Warning! Warning!\") {\n    fill(255, 0, 0);\n    if (audio.isPlaying() == false) {\n      audio.play();\n    }\n  }\n  textSize(20);\n  textAlign(CENTER);\n  text(label, width / 2, height - 8);\n}\n\n\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  flippedVideo = ml5.flipImage(video)\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(error, results) {\n  // If there is an error\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // The results are in an array ordered by confidence.\n  //console.log(results[0]);\n  label = results[0].label;\n  // Classifiy again!\n  classifyVideo();\n\n  if (label == \"Safe\") {\n    serial.write(\"3\")\n  }\n\n  if (label == \"Intruder\") {\n    serial.write(\"2\")\n  }\n\n  if (label == \"Warning! Warning!\") {\n    serial.write(\"1\")\n  }\n}\n\nfunction gotData() {\n  var currentString = serial.readLine();\n  trim(currentString);\n  if (!currentString) return;\n  latestData = int(currentString);\n}",
        "children": [],
        "fileType": "file",
        "_id": "64050922754a1456f4c03055",
        "isSelectedFile": true,
        "createdAt": "2023-03-05T23:56:36.326Z",
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "id": "64050922754a1456f4c03055"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "64050922754a1456f4c03054",
        "isSelectedFile": false,
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "createdAt": "2023-03-05T23:56:36.326Z",
        "id": "64050922754a1456f4c03054"
      },
      {
        "name": "style.css",
        "content": "html,body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64050922754a1456f4c03056",
        "isSelectedFile": false,
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "createdAt": "2023-03-05T23:56:36.326Z",
        "id": "64050922754a1456f4c03056"
      },
      {
        "name": "Alarm.m4a",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64050922754a1456f4c03051",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/2a002a44-2383-4fcb-99bf-ea569e2a212e.m4a",
        "isSelectedFile": false,
        "updatedAt": "2023-03-05T23:56:36.326Z",
        "createdAt": "2023-03-05T23:56:36.326Z",
        "id": "64050922754a1456f4c03051"
      }
    ],
    "createdAt": "2023-03-05T21:27:00.540Z",
    "updatedAt": "2023-03-05T23:56:36.326Z",
    "id": "l8kKmZlZA"
  },
  {
    "name": "Double Simple WebSerial copy",
    "_id": "IC_Fje7RA",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634c59076de82b923a62e95b",
          "634c59076de82b923a62e95c",
          "634c59076de82b923a62e95d",
          "634c59076de82b923a62e95e"
        ],
        "fileType": "folder",
        "_id": "634c59076de82b923a62e95a",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:15:55.714Z",
        "updatedAt": "2022-10-12T19:15:55.714Z",
        "id": "634c59076de82b923a62e95a"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial Library:\nhttps://github.com/yoonbuck/p5.WebSerial/wiki/Guide\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\n\n// Color of the circle\nlet circleColor = 255;\nlet circleX = 10;\n\nfunction setup() {\n  createCanvas(400,400);\n  \n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  \n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  // check for any ports that are available:\n  serial.getPorts();\n\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n \n  background(0); \n  fill(circleColor); \n  ellipse(circleX, 50, 50, 50);\n}\n\n/////////////////////////////\n// SEND AND RECEIVE DATA  ///\n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  \n  if (inString) {\n    let values = split(inString, ',');\n\n    if (values.length > 1){ \n      circleColor = int(map(values[0], 0,1023, 0, 255));\n      circleX = int(map(values[1], 0,1023, 0, 400));\n\n      serial.write(\"x\"); \n    }\n  }\n}\n\n\n////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTION  ///\n////////////////////////////////////////////\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "634c59076de82b923a62e95d",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:15:55.714Z",
        "updatedAt": "2022-10-12T19:15:55.714Z",
        "id": "634c59076de82b923a62e95d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634c59076de82b923a62e95c",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:15:55.714Z",
        "updatedAt": "2022-10-12T19:15:55.714Z",
        "id": "634c59076de82b923a62e95c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634c59076de82b923a62e95e",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:15:55.714Z",
        "updatedAt": "2022-10-12T19:15:55.714Z",
        "id": "634c59076de82b923a62e95e"
      },
      {
        "name": "arduino_sketch.txt",
        "content": "void setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  int potval = analogRead(A0);\n  int fsrval = analogRead(A1);\n\n  if (Serial.available() > 0) {\n    int incoming = Serial.read();\n    Serial.print(fsrval);\n    Serial.print(\",\");\n    Serial.println(potval);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634c59076de82b923a62e95b",
        "isSelectedFile": true,
        "updatedAt": "2022-10-12T19:15:55.714Z",
        "createdAt": "2022-10-12T19:15:55.714Z",
        "id": "634c59076de82b923a62e95b"
      }
    ],
    "createdAt": "2022-10-16T19:18:32.650Z",
    "updatedAt": "2022-10-16T19:18:32.650Z",
    "id": "IC_Fje7RA"
  },
  {
    "name": "draw'",
    "_id": "juXxnGIlZ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6379ad1d904a581b267ae2a4",
          "6379ad1d904a581b267ae2a5",
          "6379ad1d904a581b267ae2a6"
        ],
        "fileType": "folder",
        "_id": "6379ad1d904a581b267ae2a3",
        "isSelectedFile": false,
        "createdAt": "2022-11-20T04:29:24.235Z",
        "updatedAt": "2022-11-20T04:29:24.235Z",
        "id": "6379ad1d904a581b267ae2a3"
      },
      {
        "name": "sketch.js",
        "content": "// Copyright (c) 2018 ml5\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n/* ===\nml5 Example\nPoseNet example using p5.js\n=== */\n\nlet video;\nlet poseNet;\nlet poses = [];\nlet graphics;\nlet modelLoaded = false;\n\nfunction setup() {\n  // fix for retina resolutions which scale in\n  pixelDensity(1);\n  createCanvas(640, 480);\n  graphics = createGraphics(640, 480);\n  graphics.clear();\n\n  video = createCapture(VIDEO);\n  video.size(width, height);\n\n  // Create a new poseNet method with a single detection\n  let options = {\n    maxPoseDetections: 5,\n  }\n  poseNet = ml5.poseNet(video, modelReady, options);\n  // This sets up an event that fills the global variable \"poses\"\n  // with an array every time new poses are detected\n  poseNet.on('pose', function(results) {\n    poses = results;\n    // console.log(poses);\n  });\n  // poses\n  // nose, leftEye, rightEye, leftEar, rightEar\n  // Hide the video element, and just show the canvas\n  video.hide();\n}\n\nfunction modelReady() {\n  select('#status').html('Model Loaded');\n  modelLoaded = true;\n}\n\nfunction draw() {\n  //tint(255, 10); // Display at half opacity\n  // videoHeight = 50;\n  // image(video, 0, 0, videoHeight*video.width/video.height, videoHeight);\n  image(video, 0, 0, width, height);\n\n  // We can call both functions to draw all keypoints and the skeletons\n  drawKeypoints();\n  // drawSkeleton();\n  image(graphics, 0, 0);\n}\n\n// A function to draw ellipses over the detected keypoints\nfunction drawKeypoints() {\n  // Loop through all the poses detected\n  // for (let i = 0; i < poses.length; i++) {\n  // For each pose detected, loop through all the keypoints\n  if (poses.length > 0) {\n    // console.log(poses)\n    let pose = poses[0].pose;\n    for (let j = 0; j < pose.keypoints.length; j++) {\n      // A keypoint is an object describing a body part (like rightArm or leftShoulder)\n      let rightWrist = pose.keypoints.find(keypoint => keypoint.part === 'rightWrist');\n      console.log(rightWrist.position.y);\n      let leftWrist = pose.keypoints.find(keypoint => keypoint.part === 'leftWrist');\n      \n      let d = 2;\n      if (rightWrist.score > 0.01 && leftWrist.score > 0.01) {\n        d = int(dist(rightWrist.position.x, rightWrist.position.y, leftWrist.position.x, leftWrist.position.y));\n      } else {\n        // d = 0;\n      }\n      // console.log(\"d\",d)\n\n\n      let keypoint = pose.keypoints[j];\n      // Only draw an ellipse is the pose probability is bigger than 0.2\n\n      if (keypoint.score > 0.5 && keypoint.part == \"nose\") {\n\n        graphics.fill(300,0,250,200);\n        graphics.noStroke();\n        graphics.ellipse(keypoint.position.x, keypoint.position.y, d / 10);\n        // console.log(d);\n      }\n    }\n  }\n}\n\n// A function to draw the skeletons\nfunction drawSkeleton() {\n  // Loop through all the skeletons detected\n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    // For every skeleton, loop through all body connections\n    for (let j = 0; j < skeleton.length; j++) {\n      let partA = skeleton[j][0];\n      let partB = skeleton[j][1];\n      stroke(255, 0, 0);\n      line(partA.position.x, partA.position.y, partB.position.x, partB.position.y);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6379ad1d904a581b267ae2a5",
        "isSelectedFile": true,
        "createdAt": "2022-11-20T04:29:24.235Z",
        "updatedAt": "2022-11-20T04:29:24.235Z",
        "id": "6379ad1d904a581b267ae2a5"
      },
      {
        "name": "index.html",
        "content": "<!--\n Copyright (c) 2018 ml5\n \n This software is released under the MIT License.\n https://opensource.org/licenses/MIT\n-->\n\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>PoseNet example using p5.js</title>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</head>\n\n<body>\n  <p id='status'>Loading model...</p>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "6379ad1d904a581b267ae2a4",
        "isSelectedFile": false,
        "createdAt": "2022-11-20T04:29:24.235Z",
        "updatedAt": "2022-11-20T04:29:24.235Z",
        "id": "6379ad1d904a581b267ae2a4"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n\ncanvas {\n  display: block;\n}\n\n* {\n    font-family: sans-serif;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6379ad1d904a581b267ae2a6",
        "isSelectedFile": false,
        "createdAt": "2022-11-20T04:29:24.235Z",
        "updatedAt": "2022-11-20T04:29:24.235Z",
        "id": "6379ad1d904a581b267ae2a6"
      }
    ],
    "createdAt": "2022-11-20T04:29:17.378Z",
    "updatedAt": "2022-11-20T04:29:24.235Z",
    "id": "juXxnGIlZ"
  },
  {
    "name": "Empty pepperberry",
    "_id": "T830HKd30",
    "updatedAt": "2022-09-28T18:30:00.065Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6334929d069fa319354fe0d2",
          "6334929d069fa319354fe0d1",
          "6334929d069fa319354fe0d3"
        ],
        "fileType": "folder",
        "_id": "6334929d069fa319354fe0d4",
        "createdAt": "2022-09-28T18:30:00.065Z",
        "updatedAt": "2022-09-28T18:30:00.065Z",
        "id": "6334929d069fa319354fe0d4"
      },
      {
        "name": "sketch.js",
        "content": "let x = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  fill(0,255,0);\n  circle(x, width/2, height/2);\n  x = x + 1;\n  if (x >= 500) {\n    x=x-100\n    x=0;\n  }\n  \n  print(x)\n  fill(0,0,0);\n  \n  circle(mouseY, mouseX, 20);\n  circle(50, 200, 100);\n  circle(210, 150, 100);\n  fill(255,0,0);\n  //noFill();\n  noStroke();\n  circle(mouseX, mouseY, 50);\n  \n  let c = color(255, 204, 0);\n  fill(c);  \n  rect(30, 20, 55);\n\n  \n}",
        "children": [],
        "fileType": "file",
        "_id": "6334929d069fa319354fe0d1",
        "isSelectedFile": true,
        "createdAt": "2022-09-28T18:30:00.065Z",
        "updatedAt": "2022-09-28T18:30:00.065Z",
        "id": "6334929d069fa319354fe0d1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6334929d069fa319354fe0d2",
        "createdAt": "2022-09-28T18:30:00.065Z",
        "updatedAt": "2022-09-28T18:30:00.065Z",
        "id": "6334929d069fa319354fe0d2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6334929d069fa319354fe0d3",
        "createdAt": "2022-09-28T18:30:00.065Z",
        "updatedAt": "2022-09-28T18:30:00.065Z",
        "id": "6334929d069fa319354fe0d3"
      }
    ],
    "createdAt": "2022-09-28T18:30:00.065Z",
    "id": "T830HKd30"
  },
  {
    "name": "ExperimentalPhotography - Arduino picture",
    "_id": "Tb2zQE8V6",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65d63bed9b425e8732098186",
          "65d63bed9b425e8732098187",
          "65d63bed9b425e8732098188"
        ],
        "fileType": "folder",
        "_id": "65d63bed9b425e8732098185",
        "isSelectedFile": false,
        "createdAt": "2024-02-21T18:09:04.746Z",
        "updatedAt": "2024-02-21T18:09:04.746Z",
        "id": "65d63bed9b425e8732098185"
      },
      {
        "name": "sketch.js",
        "content": "/* \nExperimental Photography 2024\nInteractive Media Arts @ NYU\nEllen Nickles\n\nExternal webcams, apps, and tips:\nhttps://tinyurl.com/externalwebcams\n\nSerial input code modified from sources:\nhttps://github.com/ITPNYU/physcomp/tree/main/Labs/P5SerialLabs/P5ReadSerial/readSerialWebSerial\n\nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\nlet webcams = [];\nlet num = 0;\n\nlet serial = new p5.WebSerial();\nlet portButton;\n\nfunction setup() {\n  pixelDensity(1);\n  // Reset canvas width and height based\n  // on camera capabilities, check Console\n  createCanvas(900, 500);\n\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    setupSerial();\n    getVideoDevices();\n  }\n}\n\nfunction draw() {\n  // mirror video device\n  translate(width, 0);\n  scale(-1, 1);\n\n  // if any webcams are detected\n  if (webcams.length) {\n    // Specify camera, check Console\n    image(webcams[1], 0, 0, width, height);\n  }\n\n  // Convert to black and white\n  // Only use with built-in or Iriun camera\n  filter(GRAY)\n  // For other webcams use separate apps\n  // linked in document above\n}\n\n\n/*------------------------------------*\\\n  Functions for Serial Input\n\\*------------------------------------*/\n\nfunction serialEvent() {\n  // handle the incoming data:\n  let inData = Number(serial.readString().trim()); // Parse the incoming data to an integer\n  console.log(\"sensor value: \" + inData);\n\n  if (inData === 1) { // Compare it to a number instead of a string\n    num++;\n    saveCanvas(`pic${num}.png`);\n  }\n}\n\nfunction setupSerial() {\n  serial.getPorts();\n  serial.on(\"noport\", makePortButton);\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"requesterror\", portError);\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n}\n\nfunction makePortButton() {\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(choosePort);\n}\n\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\nfunction openPort() {\n  serial.open().then(initiateSerial);\n\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n\n  if (portButton) portButton.hide();\n}\n\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\n/*------------------------------------*\\\n  Functions for Video Devices\n\\*------------------------------------*/\n\nfunction getVideoDevices() {\n  navigator.mediaDevices\n    .enumerateDevices()\n    .then((devices) => {\n      return devices.filter((device) => device.kind === \"videoinput\");\n    })\n    .then((filtered) => getVideo(filtered))\n    .catch((err) => {\n      if (err.message.substring(0, 19) === \"cam.getCapabilities\")\n        alert(\n          \"InputDeviceInfo.getCapabilities() is not supported in this browser. Try Chrome or MS Edge.\"\n        );\n      else console.warn(`${err.name}: ${err.message}`);\n    });\n}\n\nfunction getVideo(cams) {\n  for (let cam of cams) {\n    let index = cams.indexOf(cam);\n    let capabilities = cam.getCapabilities();\n    let constraints = {\n      audio: false,\n      video: {\n        deviceId: `${cam.deviceId}`,\n        width: `${capabilities.width.max}`,\n        height: `${capabilities.height.max}`,\n      },\n    };\n    webcams[index] = createCapture(constraints);\n    webcams[index].hide();\n\n    console.log(\n      `webcams[${index}]\\n${cam.label}\\nMax width:\\t${constraints.video.width}\\nMax height:\\t${constraints.video.height}\\n`\n    );\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65d63bed9b425e8732098187",
        "isSelectedFile": true,
        "createdAt": "2024-02-21T18:09:04.746Z",
        "updatedAt": "2024-02-21T18:09:04.746Z",
        "id": "65d63bed9b425e8732098187"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n\n",
        "children": [],
        "fileType": "file",
        "_id": "65d63bed9b425e8732098186",
        "isSelectedFile": false,
        "createdAt": "2024-02-21T18:09:04.746Z",
        "updatedAt": "2024-02-21T18:09:04.746Z",
        "id": "65d63bed9b425e8732098186"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65d63bed9b425e8732098188",
        "isSelectedFile": false,
        "createdAt": "2024-02-21T18:09:04.746Z",
        "updatedAt": "2024-02-21T18:09:04.746Z",
        "id": "65d63bed9b425e8732098188"
      }
    ],
    "createdAt": "2024-02-21T18:07:41.884Z",
    "updatedAt": "2024-02-21T18:09:04.746Z",
    "id": "Tb2zQE8V6"
  },
  {
    "name": "Final Harry Potter Interaction",
    "_id": "jJZsJNJw7",
    "updatedAt": "2023-04-23T16:25:57.492Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6443f7b6019b5e2ea431e71d",
          "6443f7b6019b5e2ea431e71c",
          "6443f7b6019b5e2ea431e71e"
        ],
        "fileType": "folder",
        "_id": "6443f7b6019b5e2ea431e71f",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T16:25:57.492Z",
        "updatedAt": "2023-04-23T16:25:57.492Z",
        "id": "6443f7b6019b5e2ea431e71f"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let firstPx = findColor(video, colorToMatch, tolerance);\n  if (firstPx !== undefined) {\n    fill(colorToMatch);\n    strokeWeight(2);\n    circle(firstPx.x, firstPx.y, 30);\n  }\n}\n\nfunction mousePressed() {\n  loadPixels();\n  colorToMatch = get(mouseX, mouseY);\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6443f7b6019b5e2ea431e71c",
        "isSelectedFile": true,
        "createdAt": "2023-04-23T16:25:57.492Z",
        "updatedAt": "2023-04-23T16:25:57.492Z",
        "id": "6443f7b6019b5e2ea431e71c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6443f7b6019b5e2ea431e71d",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T16:25:57.492Z",
        "updatedAt": "2023-04-23T16:25:57.492Z",
        "id": "6443f7b6019b5e2ea431e71d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6443f7b6019b5e2ea431e71e",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T16:25:57.492Z",
        "updatedAt": "2023-04-23T16:25:57.492Z",
        "id": "6443f7b6019b5e2ea431e71e"
      }
    ],
    "createdAt": "2023-04-22T15:10:13.474Z",
    "id": "jJZsJNJw7"
  },
  {
    "name": "Final Harry Potter Interaction copy",
    "_id": "2WxMIGzSS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64456580019b5e2ea431e721",
          "64456580019b5e2ea431e722",
          "64456580019b5e2ea431e723"
        ],
        "fileType": "folder",
        "_id": "64456580019b5e2ea431e720",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:06:34.570Z",
        "updatedAt": "2023-04-23T17:06:34.570Z",
        "id": "64456580019b5e2ea431e720"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet positions = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n\n  let newPositions = findColors(video, colorToMatch, tolerance);\n  if (newPositions.length > 0) {\n    positions.push(...newPositions);\n  }\n\n  noStroke();\n  fill(colorToMatch);\n  for (let i = 0; i < positions.length; i++) {\n    let pos = positions[i];\n    ellipse(pos.x, pos.y, 30, 30);\n  }\n\n  // Remove positions that are off screen or have lived for too long\n  positions = positions.filter(pos => pos.x >= 0 && pos.x < width && pos.y >= 0 && pos.y < height && pos.lifespan > 0);\n  positions.forEach(pos => pos.lifespan--);\n}\n\nfunction findColors(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n\n  input.loadPixels();\n  let newPositions = [];\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n\n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n        g >= matchG - tolerance && g <= matchG + tolerance &&\n        b >= matchB - tolerance && b <= matchB + tolerance) {\n        newPositions.push({ x, y, lifespan: 60 });\n      }\n    }\n  }\n  return newPositions;\n}\n\nfunction mousePressed() {\n  loadPixels();\n  colorToMatch = get(mouseX, mouseY);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64456580019b5e2ea431e722",
        "isSelectedFile": true,
        "createdAt": "2023-04-23T17:06:34.570Z",
        "updatedAt": "2023-04-23T17:06:34.570Z",
        "id": "64456580019b5e2ea431e722"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64456580019b5e2ea431e721",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:06:34.570Z",
        "updatedAt": "2023-04-23T17:06:34.570Z",
        "id": "64456580019b5e2ea431e721"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64456580019b5e2ea431e723",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:06:34.570Z",
        "updatedAt": "2023-04-23T17:06:34.570Z",
        "id": "64456580019b5e2ea431e723"
      }
    ],
    "createdAt": "2023-04-23T17:06:09.238Z",
    "updatedAt": "2023-04-23T17:06:34.570Z",
    "id": "2WxMIGzSS"
  },
  {
    "name": "fish.",
    "_id": "aiaSaEjLm",
    "updatedAt": "2022-10-23T03:41:19.709Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6354b52256f7fe91861faf33",
          "6354b52256f7fe91861faf32",
          "6354b52256f7fe91861faf34"
        ],
        "fileType": "folder",
        "_id": "6354b52256f7fe91861faf35",
        "createdAt": "2022-10-23T03:41:19.709Z",
        "updatedAt": "2022-10-23T03:41:19.709Z",
        "id": "6354b52256f7fe91861faf35"
      },
      {
        "name": "sketch.js",
        "content": "let myfish;\nlet myfishies = [];\nlet bubbles = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  myfish = new Fish(10, 10, 5, 5);\n  for (let i = 0; i < 30; i++) {\n    let nfish = new Fish(\n      random(width),\n      random(height),\n      random(50, 100),\n      random(20, 40)\n    );\n    myfishies.push(nfish);\n  }\n}\n\nfunction draw() {\n  background(210, 240, 300);\n  \n  if (frameCount % 10 == 0) {\n    let nbubble = new Bubble(\n      random(width),\n      random(height),\n      random(10),\n      random(10)\n    );\n    bubbles.push(nbubble);\n  }\n\n  background(210, 240, 300);\n\n  myfish.display();\n  //  ocean();\n  // sand();\n\n  for (let i = 0; i < myfishies.length; i++) {\n    myfishies[i].swim();\n    myfishies[i].display();\n  }\n\n  for (let i = 0; i < bubbles.length; i++) {\n    bubbles[i].move();\n    bubbles[i].display();\n  }\n}\n\n// //   if (mouseIsPressed) {\n// //     let nbubble = new Bubble(mouseX,mouseY,random(10),random(10));\n// //     bubbles.push(nbubble);\n//     // let nfish = new Fish(mouseX, mouseY, 5, 5);\n//     // myfishies.push(nfish);\n//   }\n\n// }\n\n// function mousePressed() {\n//   let nfish = new Fish(mouseX, mouseY, 5, 5);\n//     myfishies.push(nfish);\n// }\n\nclass Bubble {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  display() {\n    noFill();\n    stroke(0);\n    ellipse(this.x, this.y, this.w, this.h);\n  }\n\n  move() {\n    this.y = this.y - 1;\n  }\n}\n\nclass Fish {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.r = random(255);\n    this.g = random(255);\n    this.b = random(255);\n    this.xdir = random(-4, 4);\n    this.ydir = random(-1, 1);\n    this.angle = 0;\n  }\n\n  display() {\n    fill(this.r, this.g, this.b);\n    noStroke();\n    ellipse(this.x, this.y, this.w, this.h);\n    if (this.xdir < 0) {\n      triangle(\n        this.x + 30,\n        this.y,\n        this.x + 80,\n        this.y - 30,\n        this.x + 80,\n        this.y + 30\n      );\n    } else\n      triangle(\n        this.x - this.w / 2,\n        this.y + this.h / 2,\n        this.x - this.w / 2,\n        this.y - this.h / 2,\n        this.x - this.w / 8,\n        this.y\n      );\n    fill(0);\n    circle(this.x - 8, this.y, 8);\n  }\n\n  swim() {\n    this.x = this.x + this.xdir;\n    this.y = this.y + this.ydir;\n    if (this.x < 0 || this.x > width) {\n      this.xdir = this.xdir * -1;\n    }\n    if (this.y < 0 || this.y > height) {\n      this.ydir = this.ydir * -1;\n    }\n    // this.w = this.w + 0.01;\n    // this.h = this.h + 0.01;\n  }\n\n  wasFishClicked() {\n    if (dist(mouseX, mouseY, this.x, this.y) < this.w) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //   function ocean() {\n  //   //wave source: https://p5js.org/examples/math-noise-wave.html\n\n  //   //waves\n  //   fill(67, 157, 171);\n  //   noStroke();\n\n  //   // We are going to draw a polygon out of the wave points\n  //   beginShape();\n\n  //   let xoff = 0; // Option #1: 2D Noise\n  //   // let xoff = yoff;\n\n  //   // Iterate over horizontal pixels\n  //   for (let x = 0; x <= width; x += 10) {\n  //     // Calculate a y value according to noise, map to\n\n  //     // Option #1: 2D Noise\n  //     let y = map(noise(xoff, yoff), 0, 1, 200, 300);\n\n  //     // Set the vertex\n  //     vertex(x, y);\n  //     // Increment x dimension for noise\n  //     xoff += 0.05;\n  //   }\n\n  //   // increment y dimension for noise\n  //   yoff += 0.01;\n  //   vertex(width, height);\n  //   vertex(0, height);\n  //   endShape(CLOSE);\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6354b52256f7fe91861faf32",
        "isSelectedFile": true,
        "createdAt": "2022-10-23T03:41:19.709Z",
        "updatedAt": "2022-10-23T03:41:19.709Z",
        "id": "6354b52256f7fe91861faf32"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6354b52256f7fe91861faf33",
        "createdAt": "2022-10-23T03:41:19.709Z",
        "updatedAt": "2022-10-23T03:41:19.709Z",
        "id": "6354b52256f7fe91861faf33"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6354b52256f7fe91861faf34",
        "createdAt": "2022-10-23T03:41:19.709Z",
        "updatedAt": "2022-10-23T03:41:19.709Z",
        "id": "6354b52256f7fe91861faf34"
      }
    ],
    "createdAt": "2022-10-23T03:41:19.709Z",
    "id": "aiaSaEjLm"
  },
  {
    "name": "Fishy",
    "_id": "Vv90bcThI",
    "updatedAt": "2022-10-23T03:28:15.598Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63503e93caafb23a2a047573",
          "63503e93caafb23a2a047572",
          "63503e93caafb23a2a047574"
        ],
        "fileType": "folder",
        "_id": "63503e93caafb23a2a047575",
        "createdAt": "2022-10-23T03:28:15.598Z",
        "updatedAt": "2022-10-23T03:28:15.598Z",
        "isSelectedFile": false,
        "id": "63503e93caafb23a2a047575"
      },
      {
        "name": "sketch.js",
        "content": "let myfish;\nlet myfishies = [];\nlet bubbles = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  myfish = new Fish(10, 10, 5, 5);\n  for (let i = 0; i < 10; i++) {\n    let nfish = new Fish(\n      random(width),\n      random(height),\n      random(50, 100),\n      random(20, 40)\n    );\n    myfishies.push(nfish);\n  }\n}\n\nfunction draw() {\n  background(210, 240, 300);\n\n\n  if (frameCount % 10 == 0) {\n    let nbubble = new Bubble(\n      random(width),\n      random(height),\n      random(10),\n      random(10)\n    );\n    bubbles.push(nbubble);\n  }\n\n  background(210, 240, 300);\n\n  myfish.display();\n  //  ocean();\n  // sand();\n\n  for (let i = 0; i < myfishies.length; i++) {\n    myfishies[i].swim();\n    myfishies[i].display();\n  }\n\n  for (let i = 0; i < bubbles.length; i++) {\n    bubbles[i].move();\n    bubbles[i].display();\n  }\n}\n\n// //   if (mouseIsPressed) {\n// //     let nbubble = new Bubble(mouseX,mouseY,random(10),random(10));\n// //     bubbles.push(nbubble);\n//     // let nfish = new Fish(mouseX, mouseY, 5, 5);\n//     // myfishies.push(nfish);\n//   }\n\n// }\n\n// function mousePressed() {\n//   let nfish = new Fish(mouseX, mouseY, 5, 5);\n//     myfishies.push(nfish);\n// }\n\nclass Bubble {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  display() {\n    noFill();\n    stroke(0);\n    ellipse(this.x, this.y, this.w, this.h);\n  }\n\n  move() {\n    this.y = this.y - 1;\n  }\n}\n\nclass Fish {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.r = random(255);\n    this.g = random(255);\n    this.b = random(255);\n    this.xdir = random(-4, 4);\n    this.ydir = random(-1, 1);\n    this.angle = 0;\n  }\n\n  display() {\n    fill(this.r, this.g, this.b);\n    noStroke();\n    ellipse(this.x, this.y, this.w, this.h);\n    if (this.xdir < 0) {\n      triangle(\n        this.x + 30,\n        this.y,\n        this.x + 80,\n        this.y - 30,\n        this.x + 80,\n        this.y + 30\n      );\n    } else\n      triangle(\n        this.x - this.w / 2,\n        this.y + this.h / 2,\n        this.x - this.w / 2,\n        this.y - this.h / 2,\n        this.x - this.w / 8,\n        this.y\n      );\n    fill(0);\n    circle(this.x - 8, this.y, 8);\n  }\n\n  swim() {\n    this.x = this.x + this.xdir;\n    this.y = this.y + this.ydir;\n    if (this.x < 0 || this.x > width) {\n      this.xdir = this.xdir * -1;\n    }\n    if (this.y < 0 || this.y > height) {\n      this.ydir = this.ydir * -1;\n    }\n    // this.w = this.w + 0.01;\n    // this.h = this.h + 0.01;\n  }\n\n  wasFishClicked() {\n    if (dist(mouseX, mouseY, this.x, this.y) < this.w) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //   function ocean() {\n  //   //wave source: https://p5js.org/examples/math-noise-wave.html\n\n  //   //waves\n  //   fill(67, 157, 171);\n  //   noStroke();\n\n  //   // We are going to draw a polygon out of the wave points\n  //   beginShape();\n\n  //   let xoff = 0; // Option #1: 2D Noise\n  //   // let xoff = yoff;\n\n  //   // Iterate over horizontal pixels\n  //   for (let x = 0; x <= width; x += 10) {\n  //     // Calculate a y value according to noise, map to\n\n  //     // Option #1: 2D Noise\n  //     let y = map(noise(xoff, yoff), 0, 1, 200, 300);\n\n  //     // Set the vertex\n  //     vertex(x, y);\n  //     // Increment x dimension for noise\n  //     xoff += 0.05;\n  //   }\n\n  //   // increment y dimension for noise\n  //   yoff += 0.01;\n  //   vertex(width, height);\n  //   vertex(0, height);\n  //   endShape(CLOSE);\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63503e93caafb23a2a047572",
        "isSelectedFile": true,
        "createdAt": "2022-10-23T03:28:15.598Z",
        "updatedAt": "2022-10-23T03:28:15.598Z",
        "id": "63503e93caafb23a2a047572"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63503e93caafb23a2a047573",
        "createdAt": "2022-10-23T03:28:15.598Z",
        "updatedAt": "2022-10-23T03:28:15.598Z",
        "isSelectedFile": false,
        "id": "63503e93caafb23a2a047573"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63503e93caafb23a2a047574",
        "createdAt": "2022-10-23T03:28:15.598Z",
        "updatedAt": "2022-10-23T03:28:15.598Z",
        "isSelectedFile": false,
        "id": "63503e93caafb23a2a047574"
      }
    ],
    "createdAt": "2022-10-19T18:29:15.071Z",
    "id": "Vv90bcThI"
  },
  {
    "name": "Game Play State",
    "_id": "8UXfiRAK3",
    "updatedAt": "2022-10-05T19:12:59.041Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "633dcebcc0d19ce458e2fe50",
          "633dcebcc0d19ce458e2fe4f",
          "633dcebcc0d19ce458e2fe51"
        ],
        "fileType": "folder",
        "_id": "633dcebcc0d19ce458e2fe52",
        "createdAt": "2022-10-05T19:12:59.041Z",
        "updatedAt": "2022-10-05T19:12:59.041Z",
        "isSelectedFile": false,
        "id": "633dcebcc0d19ce458e2fe52"
      },
      {
        "name": "sketch.js",
        "content": "// let x = 1;\n// let xdir = 1;\n// let y = 1;\n// let ydir = 1;\n// let w = 10;\n// let h = 10;\n\nlet ball = {\n  x: 1,\n  y: 20,\n  xdir: 1,\n  ydir: -1,\n  w: 10,\n  h: 20,\n  r: 200,\n  g: 100,\n  b: 50\n};\n\nlet balloon = {\n  x: 10,\n  y: 200,\n  xdir: 2,\n  ydir: -2,\n  w: 100,\n  h: 20,\n  r: 100,\n  g: 101,\n  b: 1\n};\n\nlet hotairballoon = {\n  x: 10,\n  y: 200,\n  xdir: 2,\n  ydir: -3,\n  w: 100,\n  h: 200,\n  r: 2,\n  g: 101,\n  b: 1  \n};\n\nfunction setup() {\n  createCanvas(400, 400);\n  ball.xdir = random(-4,4);\n  balloon.w = random(10,200);\n  hotairballoon.r = random(100,200);\n}\n\nfunction draw() {\n  background(220);\n  drawShape(ball);\n  moveShape(ball);\n  checkBounce(ball);\n  \n  drawShape(balloon);\n  moveShape(balloon);\n  checkBounce(balloon);\n  \n  drawShape(hotairballoon);\n  moveShape(hotairballoon);\n  checkBounce(hotairballoon);\n  \n}\n\nfunction drawShape(whichShape) {\n  // draw shape\n  fill(whichShape.r, whichShape.g, whichShape.b);\n  ellipse(whichShape.x,whichShape.y,whichShape.w,whichShape.h);\n}\n\nfunction moveShape(whichShape) {\n  // move shape\n  whichShape.x = whichShape.x + whichShape.xdir;\n  whichShape.y = whichShape.y + whichShape.ydir;\n}\n  \nfunction checkBounce(whichShape) {\n  // check bounce\n  if (whichShape.x >= width || whichShape.x <= 0) {\n    whichShape.xdir = whichShape.xdir * -1;\n  }\n  \n  if (whichShape.y >= height || whichShape.y <= 0) {\n    whichShape.ydir = whichShape.ydir * -1;\n  }  \n}",
        "children": [],
        "fileType": "file",
        "_id": "633dcebcc0d19ce458e2fe4f",
        "isSelectedFile": true,
        "createdAt": "2022-10-05T19:12:59.041Z",
        "updatedAt": "2022-10-05T19:12:59.041Z",
        "id": "633dcebcc0d19ce458e2fe4f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "633dcebcc0d19ce458e2fe50",
        "createdAt": "2022-10-05T19:12:59.041Z",
        "updatedAt": "2022-10-05T19:12:59.041Z",
        "isSelectedFile": false,
        "id": "633dcebcc0d19ce458e2fe50"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "633dcebcc0d19ce458e2fe51",
        "createdAt": "2022-10-05T19:12:59.041Z",
        "updatedAt": "2022-10-05T19:12:59.041Z",
        "isSelectedFile": false,
        "id": "633dcebcc0d19ce458e2fe51"
      }
    ],
    "createdAt": "2022-10-05T18:36:54.571Z",
    "id": "8UXfiRAK3"
  },
  {
    "name": "Grizzly rhodium",
    "_id": "E_8GVIhkn",
    "updatedAt": "2023-03-05T21:41:10.579Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64050c700b1489a1de3ff6ce",
          "64050c700b1489a1de3ff6cd",
          "64050c700b1489a1de3ff6cf"
        ],
        "fileType": "folder",
        "_id": "64050c700b1489a1de3ff6d0",
        "createdAt": "2023-03-05T21:41:10.579Z",
        "updatedAt": "2023-03-05T21:41:10.579Z",
        "id": "64050c700b1489a1de3ff6d0"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "64050c700b1489a1de3ff6cd",
        "isSelectedFile": true,
        "createdAt": "2023-03-05T21:41:10.579Z",
        "updatedAt": "2023-03-05T21:41:10.579Z",
        "id": "64050c700b1489a1de3ff6cd"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64050c700b1489a1de3ff6ce",
        "createdAt": "2023-03-05T21:41:10.579Z",
        "updatedAt": "2023-03-05T21:41:10.579Z",
        "id": "64050c700b1489a1de3ff6ce"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64050c700b1489a1de3ff6cf",
        "createdAt": "2023-03-05T21:41:10.579Z",
        "updatedAt": "2023-03-05T21:41:10.579Z",
        "id": "64050c700b1489a1de3ff6cf"
      }
    ],
    "createdAt": "2023-03-05T21:41:10.579Z",
    "id": "E_8GVIhkn"
  },
  {
    "name": "Gryffindor Final Spell",
    "_id": "TgO_qFaF6",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6451bb5f7e7816f2bbde32f3",
          "6451bc4c84e41e001b46b74b",
          "6451bb5f7e7816f2bbde32f4",
          "6451bb5f7e7816f2bbde32f5",
          "6451bb5f7e7816f2bbde32f6",
          "6451bb5f7e7816f2bbde32f7",
          "6451bb5f7e7816f2bbde32f8",
          "6451bb5f7e7816f2bbde32f9"
        ],
        "fileType": "folder",
        "_id": "6451bb5f7e7816f2bbde32f2",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T13:41:34.346Z",
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f2"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound1;\nlet spellSound2;\n\n// load the spell sound files in preload\nfunction preload() {\n  spellSound1 = loadSound('wingardium_leviosa.mp3');\n  spellSound2 = loadSound('avadakedavra.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // startWebserial();\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound and light up the LED when the trail length is greater than a threshold and the movement is correct\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound1.play();\n      // serial.write('R'); // turn on the green LED\n    } else if (trail.length > 20 && checkMovement(trail, \"stab\")) {\n      spellSound2.play();\n      // serial.write('G'); // turn on the red LED\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is correct\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the correct range for the spell movement\n  if (movement === \"swish and flick\") {\n    if (angle > PI/4 && angle < 3*PI/4) {\n      return true;\n    } else {\n      return false;\n    }\n  } else if (movement === \"stab\") {\n    if (angle > 0 && angle < PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f6",
        "isSelectedFile": true,
        "createdAt": "2023-05-03T13:41:34.346Z",
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n\t\n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n<!--     <script src=\"webserial.js\"></script> -->\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f5",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T13:41:34.346Z",
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f7",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T13:41:34.346Z",
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f7"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f3",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/e93411bc-01f7-4b52-9918-5fd5f3ca9a8e.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "createdAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f3"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f4",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/693b510d-c5be-4a5e-a955-88a5d5ecfa57.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "createdAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f4"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f9",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/141ef3dd-c75c-49d5-9537-ef88cda053ba.mp3",
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "createdAt": "2023-05-03T13:41:34.346Z",
        "isSelectedFile": false,
        "id": "6451bb5f7e7816f2bbde32f9"
      },
      {
        "name": "webserial.js",
        "content": "const serial = new p5.WebSerial();\n// HTML button object:\nlet portButton;\nlet inData;                            // for incoming serial data\nlet outByte = 0; \n\nfunction startWebserial(){\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n \n}\n\n\n\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// read any incoming data as a byte:\nfunction serialEvent() {\n  // read a byte from the serial port:\n  var inByte = serial.read();\n  // store it in a global variable:\n  inData = inByte;\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}",
        "children": [],
        "fileType": "file",
        "_id": "6451bb5f7e7816f2bbde32f8",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "createdAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bb5f7e7816f2bbde32f8"
      },
      {
        "name": "avadakedavra.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451bc4c84e41e001b46b74b",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/df34bbe7-6507-4f99-b6d2-2050ab3391e6.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T13:41:34.346Z",
        "createdAt": "2023-05-03T13:41:34.346Z",
        "id": "6451bc4c84e41e001b46b74b"
      }
    ],
    "createdAt": "2023-05-03T01:39:44.412Z",
    "updatedAt": "2023-05-03T13:41:34.346Z",
    "id": "TgO_qFaF6"
  },
  {
    "name": "gyroscope experiment",
    "_id": "YAElZ-JgS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65df050c9f7d695a462fa125",
          "65df050c9f7d695a462fa126",
          "65df050c9f7d695a462fa127"
        ],
        "fileType": "folder",
        "_id": "65df050c9f7d695a462fa124",
        "isSelectedFile": false,
        "createdAt": "2024-02-28T10:04:06.040Z",
        "updatedAt": "2024-02-28T10:04:06.040Z",
        "id": "65df050c9f7d695a462fa124"
      },
      {
        "name": "sketch.js",
        "content": "/* \nExperimental Photography 2024\nInteractive Media Arts @ NYU\nEllen Nickles\n\nExternal webcams, apps, and tips:\nhttps://tinyurl.com/externalwebcams\n\nSerial input code modified from sources:\nhttps://github.com/ITPNYU/physcomp/tree/main/Labs/P5SerialLabs/P5ReadSerial/readSerialWebSerial\n\nhttps://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-webserial-input-to-p5-js/\n*/\n\nlet webcams = [];\nlet num = 0;\n\nlet serial = new p5.WebSerial();\nlet portButton;\n\nfunction setup() {\n  pixelDensity(1);\n  // Reset canvas width and height based\n  // on camera capabilities, check Console\n  createCanvas(900, 500);\n\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  } else {\n    setupSerial();\n    getVideoDevices();\n  }\n}\n\nfunction draw() {\n  // mirror video device\n  translate(width, 0);\n  scale(-1, 1);\n\n  // if any webcams are detected\n  if (webcams.length) {\n    // Specify camera, check Console\n    image(webcams[1], 0, 0, width, height);\n  }\n\n  // Convert to black and white\n  // Only use with built-in or Iriun camera\n  // filter(GRAY)\n  // For other webcams use separate apps\n  // linked in document above\n}\n\n\n/*------------------------------------*\\\n  Functions for Serial Input\n\\*------------------------------------*/\n\nfunction serialEvent() {\n  // handle the incoming data:\n  let inData = serial.readString();\n  console.log(\"sensor value: \" + inData)\n\n  if (inData && inData == 1) {\n    num++;\n    saveCanvas(`pic${num}.png`);\n  }\n}\n\nfunction setupSerial() {\n  serial.getPorts();\n  serial.on(\"noport\", makePortButton);\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"requesterror\", portError);\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n}\n\nfunction makePortButton() {\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(choosePort);\n}\n\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\nfunction openPort() {\n  serial.open().then(initiateSerial);\n\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n\n  if (portButton) portButton.hide();\n}\n\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\n/*------------------------------------*\\\n  Functions for Video Devices\n\\*------------------------------------*/\n\nfunction getVideoDevices() {\n  navigator.mediaDevices\n    .enumerateDevices()\n    .then((devices) => {\n      return devices.filter((device) => device.kind === \"videoinput\");\n    })\n    .then((filtered) => getVideo(filtered))\n    .catch((err) => {\n      if (err.message.substring(0, 19) === \"cam.getCapabilities\")\n        alert(\n          \"InputDeviceInfo.getCapabilities() is not supported in this browser. Try Chrome or MS Edge.\"\n        );\n      else console.warn(`${err.name}: ${err.message}`);\n    });\n}\n\nfunction getVideo(cams) {\n  for (let cam of cams) {\n    let index = cams.indexOf(cam);\n    let capabilities = cam.getCapabilities();\n    let constraints = {\n      audio: false,\n      video: {\n        deviceId: `${cam.deviceId}`,\n        width: `${capabilities.width.max}`,\n        height: `${capabilities.height.max}`,\n      },\n    };\n    webcams[index] = createCapture(constraints);\n    webcams[index].hide();\n\n    console.log(\n      `webcams[${index}]\\n${cam.label}\\nMax width:\\t${constraints.video.width}\\nMax height:\\t${constraints.video.height}\\n`\n    );\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65df050c9f7d695a462fa126",
        "isSelectedFile": true,
        "createdAt": "2024-02-28T10:04:06.040Z",
        "updatedAt": "2024-02-28T10:04:06.040Z",
        "id": "65df050c9f7d695a462fa126"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n\n",
        "children": [],
        "fileType": "file",
        "_id": "65df050c9f7d695a462fa125",
        "isSelectedFile": false,
        "createdAt": "2024-02-28T10:04:06.040Z",
        "updatedAt": "2024-02-28T10:04:06.040Z",
        "id": "65df050c9f7d695a462fa125"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65df050c9f7d695a462fa127",
        "isSelectedFile": false,
        "createdAt": "2024-02-28T10:04:06.040Z",
        "updatedAt": "2024-02-28T10:04:06.040Z",
        "id": "65df050c9f7d695a462fa127"
      }
    ],
    "createdAt": "2024-02-28T10:03:57.248Z",
    "updatedAt": "2024-02-28T10:04:06.040Z",
    "id": "YAElZ-JgS"
  },
  {
    "name": "Harry Potter",
    "_id": "F4VssLXBm",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64052cf89fb2a354f81c94f9",
          "640553afbd5e08001afc8e86",
          "640555da9044a8001aaee602",
          "64052cf89fb2a354f81c94fb",
          "64052cf89fb2a354f81c94fc",
          "64052cf89fb2a354f81c94fd",
          "64052cf89fb2a354f81c94fe"
        ],
        "fileType": "folder",
        "_id": "64052cf89fb2a354f81c94f8",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "isSelectedFile": false,
        "id": "64052cf89fb2a354f81c94f8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/p5.serialserver@0.0.28/lib/p5.serialport.js\"></script>\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "64052cf89fb2a354f81c94fb",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "isSelectedFile": false,
        "id": "64052cf89fb2a354f81c94fb"
      },
      {
        "name": "sketch.js",
        "content": "let serial;\nlet latestData = \"waiting for data\";\nlet classifier; // Classifier Variable\nlet imageModelURL = \"https://teachablemachine.withgoogle.com/models/-cIRl47R0/\"; // Model URL\nlet video; // Video\nlet flippedVideo;\nlet label = \"\"; // To store the classification\nlet audio;\nlet audio1;\n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + \"model.json\");\n  audio = loadSound(\"Voldemort.mp3\");\n  audio1 = loadSound(\"harry potter.mp3\")\n}\n\nfunction setup() {\n  createCanvas(480, 390);\n  serial = new p5.SerialPort();\n  serial.open(\"/dev/tty.usbmodem14101\");\n  serial.on(\"data\", gotData);\n\n  video = createCapture(VIDEO); // Create the video\n  video.size(320, 240);\n  video.hide();\n\n  flippedVideo = ml5.flipImage(video);\n  classifyVideo(); // Start classifying\n}\n\nfunction draw() {\n  background(0);\n  // Draw the video\n  image(flippedVideo, 0, 0, 480, 360);\n\n  // Draw the label\n  if (label == \"Safe\") {\n    fill(255, 255, 0);\n    audio.stop();\n    audio1.stop();\n  }\n  if (label == \"Fight\") {\n    fill(0, 255, 0);\n    audio.stop();\n    audio1.play();\n  }\n  if (label == \"Warning! Warning!\") {\n    fill(255, 0, 0);\n    if (audio.isPlaying() == false) {\n      audio.play();\n      audio1.stop();\n    }\n  }\n  textSize(50);\n  textAlign(CENTER);\n  text(label, width / 2, height - 8);\n}\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  flippedVideo = ml5.flipImage(video);\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(error, results) {\n  // If there is an error\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // The results are in an array ordered by confidence.\n  //console.log(results[0]);\n  label = results[0].label;\n  // Classifiy again!\n  classifyVideo();\n\n  if (label == \"Safe\") {\n    serial.write(\"3\");\n  }\n\n  if (label == \"Fight\") {\n    serial.write(\"2\");\n  }\n\n  if (label == \"Warning! Warning!\") {\n    serial.write(\"1\");\n  }\n}\n\nfunction gotData() {\n  var currentString = serial.readLine();\n  trim(currentString);\n  if (!currentString) return;\n  latestData = int(currentString);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64052cf89fb2a354f81c94fd",
        "isSelectedFile": true,
        "createdAt": "2023-03-06T20:20:03.533Z",
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "id": "64052cf89fb2a354f81c94fd"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "64052cf89fb2a354f81c94fc",
        "isSelectedFile": false,
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "id": "64052cf89fb2a354f81c94fc"
      },
      {
        "name": "style.css",
        "content": "html,body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64052cf89fb2a354f81c94fe",
        "isSelectedFile": false,
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "id": "64052cf89fb2a354f81c94fe"
      },
      {
        "name": "Alarm.m4a",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64052cf89fb2a354f81c94f9",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/95480649-583c-45f6-b3cc-af040a9c680b.m4a",
        "isSelectedFile": false,
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "id": "64052cf89fb2a354f81c94f9"
      },
      {
        "name": "Voldemort.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "640553afbd5e08001afc8e86",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/68e7ba83-eda0-454e-921b-dac17aee1db5.mp3",
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "isSelectedFile": false,
        "id": "640553afbd5e08001afc8e86"
      },
      {
        "name": "harry potter.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "640555da9044a8001aaee602",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/81b05f7d-5aac-4c47-b098-a6ccebda3fbd.mp3",
        "updatedAt": "2023-03-06T20:20:03.533Z",
        "createdAt": "2023-03-06T20:20:03.533Z",
        "isSelectedFile": false,
        "id": "640555da9044a8001aaee602"
      }
    ],
    "createdAt": "2023-03-05T23:59:54.097Z",
    "updatedAt": "2023-03-06T20:20:03.533Z",
    "id": "F4VssLXBm"
  },
  {
    "name": "harry potter final",
    "_id": "pv0Sz3_Cj",
    "updatedAt": "2023-04-23T16:49:55.462Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64429e5a3eff20032d98c85d",
          "64429e5a3eff20032d98c85c",
          "64429e5a3eff20032d98c85e"
        ],
        "fileType": "folder",
        "_id": "64429e5a3eff20032d98c85f",
        "createdAt": "2023-04-23T16:49:55.462Z",
        "updatedAt": "2023-04-23T16:49:55.462Z",
        "id": "64429e5a3eff20032d98c85f"
      },
      {
        "name": "sketch.js",
        "content": "let font;\nlet bgImage;\nlet spells = [];\n\nfunction preload() {\n  font = loadFont('assets/Harry-P.ttf');\n  bgImage = loadImage('assets/hogwarts-castle.jpg');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  textFont(font);\n  textSize(48);\n  textAlign(CENTER, CENTER);\n  imageMode(CENTER);\n}\n\nfunction draw() {\n  // Draw background image\n  image(bgImage, width/2, height/2, width, height);\n\n  // Draw spells\n  for (let i = 0; i < spells.length; i++) {\n    spells[i].draw();\n  }\n}\n\nfunction mousePressed() {\n  // Create a new spell at the mouse position\n  let spell = new Spell(mouseX, mouseY);\n  spells.push(spell);\n}\n\nclass Spell {\n  constructor(x, y) {\n    this.position = createVector(x, y);\n    this.velocity = createVector(random(-5, 5), random(-5, 5));\n    this.color = color(random(255), random(255), random(255), 200);\n    this.text = \"Expelliarmus!\";\n  }\n\n  draw() {\n    // Update position\n    this.position.add(this.velocity);\n\n    // Draw text\n    fill(this.color);\n    text(this.text, this.position.x, this.position.y);\n\n    // Remove spell if offscreen\n    if (this.position.x < -500 || this.position.x > width + 500 || this.position.y < -500 || this.position.y > height + 500) {\n      let index = spells.indexOf(this);\n      spells.splice(index, 1);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429e5a3eff20032d98c85c",
        "isSelectedFile": true,
        "createdAt": "2023-04-23T16:49:55.462Z",
        "updatedAt": "2023-04-23T16:49:55.462Z",
        "id": "64429e5a3eff20032d98c85c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64429e5a3eff20032d98c85d",
        "createdAt": "2023-04-23T16:49:55.462Z",
        "updatedAt": "2023-04-23T16:49:55.462Z",
        "id": "64429e5a3eff20032d98c85d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429e5a3eff20032d98c85e",
        "createdAt": "2023-04-23T16:49:55.462Z",
        "updatedAt": "2023-04-23T16:49:55.462Z",
        "id": "64429e5a3eff20032d98c85e"
      }
    ],
    "createdAt": "2023-04-23T16:49:55.462Z",
    "id": "pv0Sz3_Cj"
  },
  {
    "name": "harry potter final",
    "_id": "7gWwpsLbZ",
    "updatedAt": "2023-04-21T14:45:53.255Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6442a0d4933078001bbb25d0",
          "64429fae933078001bbb1675",
          "64429ee423bbf440361d17c1",
          "64429ee423bbf440361d17c0",
          "64429ee423bbf440361d17c2"
        ],
        "fileType": "folder",
        "_id": "64429ee423bbf440361d17c3",
        "createdAt": "2023-04-21T14:45:53.255Z",
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "isSelectedFile": false,
        "id": "64429ee423bbf440361d17c3"
      },
      {
        "name": "sketch.js",
        "content": "let font;\nlet bgImage;\nlet spells = [];\nlet lightThreshold = 100;\nlet lightColor;\n\nfunction preload() {\n  font = loadFont('HARRYP__.TTF');\n  bgImage = loadImage('harry-potter.png');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  textFont(font);\n  textSize(48);\n  textAlign(CENTER, CENTER);\n  imageMode(CENTER);\n\n  // Set up light tracking\n  capture = createCapture(VIDEO);\n  capture.hide();\n}\n\nfunction draw() {\n  // Get average brightness of captured video\n  capture.loadPixels();\n  let totalBrightness = 0;\n  let numPixels = 0;\n  for (let i = 0; i < capture.pixels.length; i += 4) {\n    let r = capture.pixels[i];\n    let g = capture.pixels[i + 1];\n    let b = capture.pixels[i + 2];\n    let brightness = (r + g + b) / 3;\n    totalBrightness += brightness;\n    numPixels++;\n  }\n  let avgBrightness = totalBrightness / numPixels;\n\n  // Set light color based on brightness\n  if (avgBrightness > lightThreshold) {\n    lightColor = color(255, 255, 0);\n  } else {\n    lightColor = color(255);\n  }\n\n  // Draw background image\n  image(bgImage, width/2, height/2, width, height);\n\n  // Draw spells\n  for (let i = 0; i < spells.length; i++) {\n    spells[i].draw();\n  }\n}\n\nfunction mousePressed() {\n  // Create a new spell at the mouse position\n  let spell = new Spell(mouseX, mouseY, lightColor);\n  spells.push(spell);\n}\n\nclass Spell {\n  constructor(x, y, color) {\n    this.position = createVector(x, y);\n    this.velocity = createVector(random(-5, 5), random(-5, 5));\n    this.color = color;\n    this.text = \"Expelliarmus!\";\n  }\n\n  draw() {\n    // Update position\n    this.position.add(this.velocity);\n\n    // Draw text\n    fill(this.color);\n    text(this.text, this.position.x, this.position.y);\n\n    // Remove spell if offscreen\n    if (this.position.x < -500 || this.position.x > width + 500 || this.position.y < -500 || this.position.y > height + 500) {\n      let index = spells.indexOf(this);\n      spells.splice(index, 1);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ee423bbf440361d17c0",
        "isSelectedFile": true,
        "createdAt": "2023-04-21T14:45:53.255Z",
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "id": "64429ee423bbf440361d17c0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ee423bbf440361d17c1",
        "createdAt": "2023-04-21T14:45:53.255Z",
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "isSelectedFile": false,
        "id": "64429ee423bbf440361d17c1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ee423bbf440361d17c2",
        "createdAt": "2023-04-21T14:45:53.255Z",
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "isSelectedFile": false,
        "id": "64429ee423bbf440361d17c2"
      },
      {
        "name": "harry-potter.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64429fae933078001bbb1675",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/cbce7eba-21eb-4cf5-8910-315e25a5fd79.png",
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "createdAt": "2023-04-21T14:45:53.255Z",
        "isSelectedFile": false,
        "id": "64429fae933078001bbb1675"
      },
      {
        "name": "HARRYP__.TTF",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6442a0d4933078001bbb25d0",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/78e85fa6-f5dd-49a5-b25a-b870e16a6413.TTF",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:45:53.255Z",
        "createdAt": "2023-04-21T14:45:53.255Z",
        "id": "6442a0d4933078001bbb25d0"
      }
    ],
    "createdAt": "2023-04-21T14:34:20.937Z",
    "id": "7gWwpsLbZ"
  },
  {
    "name": "Harry Potter Interface",
    "_id": "n7G1W5kjI",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "643ef8a368c08d3d5a07aa3a",
          "643ef8a368c08d3d5a07aa3b",
          "643ef8a368c08d3d5a07aa3c",
          "643ef8a368c08d3d5a07aa3d",
          "643ef8a368c08d3d5a07aa47",
          "643ef8a368c08d3d5a07aa48",
          "643ef8a368c08d3d5a07aa49",
          "643ef8a368c08d3d5a07aa4a",
          "643ef8a368c08d3d5a07aa4b"
        ],
        "fileType": "folder",
        "_id": "643ef8a368c08d3d5a07aa39",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T21:13:27.972Z",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa39"
      },
      {
        "name": "sketch.js",
        "content": "let state='menu';\nlet video;\nlet poseNet;\nlet pose;\nlet position=[];\nlet dementors=[];\nlet noseX=200;\nlet noseY=200;\nlet name;\nlet ancestry;\nlet haircolor;\nlet house;\ncandles=[];\nlet classifier;\n//let imageModelURL = 'https://teachablemachine.withgoogle.com/models/kpv_KvykJ/';\nlet label = \"\";\nlet live=false;\n\nfunction preload(){\n  //classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n  img=loadImage(\"sortinghat.png\");\n  bg1=loadImage(\"hogwarts wallpaper.jpg\");\n  music=loadSound(\"Harry Potter Hedwigs Theme short.mp3\");\n  hpfont=loadFont('HARRYP.TTF');\n  candle=loadImage(\"images/candle.png\");\n  prof1=loadImage(\"images/remus.jpg\");\n  gesture1=loadImage(\"images/victory gesture.png\");\n  wall=loadImage(\"images/brick wall.jpg\");\n  dem1= loadImage(\"images/dementor1.png\");\n  dem2= loadImage(\"images/dementor2.png\");\n  dem3= loadImage(\"images/dementor3.png\");\n  greybg=loadImage(\"images/grey bg1.jpg\");\n  window1=loadImage(\"images/window1.png\");\n}\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n  poseNet.on('pose', gotPoses);\n  //classifyVideo();\n  for(i=0; i<20; i++){\n    candles.push({\n      x:random(20, 440),\n      y: random(40, 100),\n    })\n  }\n  for(i=0; i<5; i++){\n    dementors.push(new dementor());\n  }\n  clicker4 = new Clickable();\n  clicker4.text = \"Next\";\n  clicker4.x = 400;\n  clicker4.y = 140;\n  clicker4.width = 100;\n  clicker4.height = 50;\n  clicker4.cornerRadius=40;\n  clicker4.color= \"#c9840c\";\n  clicker4.textColor=\"#ffffff\";\n  clicker4.onPress = function(){\n    state='candle';\n}\n  clicker5 = new Clickable();\n  clicker5.text = \"Next\";\n  clicker5.x = 400;\n  clicker5.y = 140;\n  clicker5.width = 100;\n  clicker5.height = 50;\n  clicker5.cornerRadius=40;\n  clicker5.color= \"#c9840c\";\n  clicker5.textColor=\"#ffffff\";\n  clicker5.onPress = function(){\n    state='wall';\n}\n  clicker6 = new Clickable();\n  clicker6.text = \"Next\";\n  clicker6.x = 400;\n  clicker6.y = 140;\n  clicker6.width = 100;\n  clicker6.height = 50;\n  clicker6.cornerRadius=40;\n  clicker6.color= \"#c9840c\";\n  clicker6.textColor=\"#ffffff\";\n  clicker6.onPress = function(){\n    state='dementer';\n}\n  clicker7 = new Clickable();\n  clicker7.text = \"Next\";\n  clicker7.x = 420;\n  clicker7.y = 400;\n  clicker7.width = 100;\n  clicker7.height = 50;\n  clicker7.cornerRadius=40; \n  clicker7.color= \"#c9840c\";\n  clicker7.textColor=\"#ffffff\";\n  clicker7.onPress = function(){\n    state='dementer game';\n}\n  clicker8 = new Clickable();\n  clicker8.text = \"disp\";\n  clicker8.x = 300;\n  clicker8.y = 140;\n  clicker8.width = 100;\n  clicker8.height = 50;\n  clicker8.cornerRadius=40;\n  clicker8.color= \"#c9840c\";\n  clicker8.textColor=\"#ffffff\";\n  clicker8.onPress = function(){\n    live=true;\n}\n}\n\nfunction gotPoses(poses) {\n  console.log(poses);\n  if (poses.length > 0) {\n    pose = poses[0].pose;\n  }\n}\n\nfunction modelLoaded() {\n  console.log('poseNet ready');\n}\n\n\nfunction draw() {\n  background(220);\n  if (pose) {\n    let eyeR = pose.rightEye;\n    console.log(eyeR.x);\n    if(state==='wall' && eyeR.x>200)\n      {\n        state='dementer';\n      }\n  }\n  if (state==='menu') {\n    drawMenu();\n    if (!music.isPlaying()){\n    music.play();\n    }\n  }\n  else if (state==='hatsort') {\n    startHatSort();\n    clicker1.draw();\n    clicker4.draw();\n  }\n  else if(state==='candle'){\n    drawGame();\n    clicker5.draw();\n  }\n  else if(state==='wall'){\n    drawWall();\n    clicker6.draw();\n  }\n  else if(state==='dementer'){\n    dementer();\n    clicker7.draw();\n  }\n  else if(state==='dementer game'){\n    dementergame();\n  }\n}\n\nfunction drawMenu(){\n  imageMode(CENTER);\n  image(bg1, 320, 240, 640, 480);\n  textAlign(CENTER);\n  textSize(30);\n  textFont(hpfont);\n  fill(255);\n  text(\"Welcome to Hogwarts!\", 320, 290);\n  text(\"Press Enter to begin\", 320, 320);\n}\n\nfunction startHatSort(){\n  //text(\"Hat sort\", 200, 100);\n  imageMode(CENTER);\n  videoimg= video.get();\n  filter1();\n  if (pose) {\n    console.log(\"pose\");\n    noseX=(noseX+pose.nose.x)/2;\n    noseY=(noseY+pose.nose.y)/2;\n    let eyeR = pose.rightEye;\n    let eyeL = pose.leftEye;\n    //console.log(eyeR.x);\n    let d = dist(eyeR.x, eyeR.y, eyeL.x, eyeL.y);\n    \n    let earR = pose.rightEar;\n    let earL = pose.leftEar;\n    let c = dist(earR.x, earR.y, earL.x, earL.y);\n    if(pose.nose.confidence>0.1){\n       image(img, noseX, noseY-2*c, 2*c, d+c);\n       }\n       else{\n         text('Cannot Detect your face', 320, 240);\n       }\n  }\n  let x= random(0, 10);\n  clicker1 = new Clickable();\n  clicker1.text = \"Get your House!\";\n  clicker1.x = 100;\n  clicker1.y = 140;\n  clicker1.width = 100;\n  clicker1.height = 50;\n  clicker1.cornerRadius=40;\n  clicker1.color= \"#c9840c\";\n  clicker1.textColor=\"#ffffff\";\n  clicker1.onPress = function(){\n    //getData(x);\n    houseSort();\n}\n  textFont(hpfont);\n  textSize(30);\n  fill(0);\n  text(house, 100, 300);\n  /*if(ancestry){\n  text(ancestry, 100, 200);\n  }\n  if(house){\n  text(house, 100, 300);\n  }*/\n}\nfunction drawGame(){\n  background(0);\n  //text(\"play game\", 200, 100);\n  imageMode(CENTER);\n  image(prof1, 100, 250, 120, 180);\n  textAlign(CENTER);\n  text(\"Hi, I am Professor Remus\", 240, 160 );\n  text(\"I will teach you a spell\", 240, 175 );\n  text(\"Do this Gesture\", 240, 190 );\n  image(gesture1, 240, 230, 50, 60);\n  text(\"To light the floating candles\", 240, 270 );\n  console.log(label);\n  if(label===\"victory\") {\n   for(c of candles){\n    image(candle, c.x, c.y, 60, 60);\n  }\n  for(c of candles){\n    c.x=c.x+random(-0.25, 0.25);\n  } \n}\n}\n\n function drawWall(){\n    image(wall, 320, 240, 640, 480);\n   textAlign(CENTER);\n   text(0);\n   text(\"Say this spell\", 320, 240);\n   text(\"To get through the wall\", 320, 260);\n  }\nfunction dementer(){\n  background(250);\n  imageMode(CENTER);\n  image(greybg,windowWidth/2, windowHeight/2, windowWidth, windowHeight);\n  noStroke();\n  for(let d of dementors){\n  d.view();\n    d.move();\n  }\n  image(window1, 320, 240, 640, 480);\n  fill(0);\n  rect(0, 390, 640, 480);\n  textAlign(CENTER);\n  textSize(20);\n  fill(255);\n  text(\"Dementors are out there\", 320, 400);\n  text(\"Go out and fight with them\", 320, 420);\n}\n\nfunction dementergame() {\n  background(220);\n  imageMode(CENTER);\n  image(greybg, 320, 240, 640, 480);\n  if(live===false){\n  for(let d of dementors){\n  d.view();\n    d.move();\n  }\n  clicker8.draw();\n  }\n  if(live===true){\n    spell(255, 4);\n  }\n}\n\nfunction keyPressed(){\n  if(state==='menu' && keyCode===ENTER){\n    state='hatsort';\n  }\n  if(state==='hatsort' && keyCode===TAB){\n    state='candle';\n  }\n  if(state==='candle' && keyCode===ALT){\n    state='wall';\n  }\n  if(state==='wall' && keyCode===SHIFT){\n    state='dementer'\n  }\n}\n\n/*function getData(x){\n  \n  console.log(\"FETCHING!\");\n  fetch(\"https://yacdn.org/serve/http://hp-api.herokuapp.com/api/characters/students\")\n  .then(response => response.json())\n  .then(data => {\n    //console.log(data);\n    name=data[x].name;\n    ancestry=data[x].ancestry;\n    haircolor=data[x].haircolor;\n    house=data[x].house;\n  });\n}*/\n\nfunction filter1() { \n    videoimg.loadPixels()\n    for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n            var index = (x + y * width) * 4;\n\n            let r = videoimg.pixels[index + 0];\n            let g = videoimg.pixels[index + 1];\n            let b = videoimg.pixels[index + 2];\n            let a = videoimg.pixels[index + 3];\n            newRed = r + 0.769*g + 0.189*b;\n          newGreen = 0.5*r + 0.9*g;\n          newBlue = 0.272*r + 0.534*g + 0.38*b;\n            videoimg.pixels[index + 0] = newRed;\n            videoimg.pixels[index + 1] = newGreen;\n            videoimg.pixels[index + 2] = newBlue;\n        }\n    }\n\n    videoimg.updatePixels()\n  image(videoimg, 320, 240, 640, 480);\n}\n\n/*function classifyVideo() {\n  classifier.classify(video, gotResult);\n}\nfunction gotResult(error, results) {\n  if (error) {\n    console.error(error);\n    return;\n  }\n  label = results[0].label;\n  console.log(label);\n  classifyVideo();\n}*/\n\nclass dementor {\n  constructor () {\n    this.y=random(10, 150);\n    this.x= random(10, 150);\n    this.r= random(40, 150);//radius\n    this.speed=0.002;\n    this.angle= random(0, 360);\n    let imgs=[dem1, dem2, dem3];\n    this.img=random(imgs);\n  }\n  \n  view () {\n    push();\n    translate(320, 240);\n    rotate(this.angle);\n   image(this.img, this.x, this. y, width/8, height/8);\n    pop();\n  }\n  \n  move () {\n    this.x=this.r+sin(this.angle);\n    this.y=this.r+cos(this.angle);\n    this.angle+=this.speed;\n    \n  }\n  \n}\nfunction spell(alpha, s){\n    noStroke();   \n  fill(255, 255, 255, alpha);\nellipse(320, 240, 640/s);\n  alpha-=10;\n  s-=0.11;\n  if(s>0){\n  spell(alpha, s);\n  }  \n}\nfunction disp(){\n  fill(0);\n  text(\"Well Done!\", 200, 200);\n}\nfunction houseSort(){\n  let houses=['Gryffindor', 'Hufflepuf', 'Ravenclaw', 'Slytherin'];\n  house=random(houses);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa49",
        "isSelectedFile": true,
        "createdAt": "2023-04-18T21:13:27.972Z",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa49"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n     <script src=\"https://unpkg.com/ml5@0.4.3/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n    <script src=\"p5.clickable.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa47",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T21:13:27.972Z",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa47"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa4b",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T21:13:27.972Z",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa4b"
      },
      {
        "name": "sortinghat.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa4a",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/aee81862-3ff6-4c1c-8643-a201a51c6211.png",
        "isSelectedFile": false,
        "createdAt": "2023-04-18T21:13:27.972Z",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa4a"
      },
      {
        "name": "p5.clickable.js",
        "content": "//Determines if the mouse was pressed on the previous frame\r\nvar cl_mouseWasPressed = false;\r\n//Last hovered button\r\nvar cl_lastHovered = null;\r\n//Last pressed button\r\nvar cl_lastClicked = null;\r\n//All created buttons\r\nvar cl_clickables = [];\r\n\r\n//This function is what makes the magic happen and should be ran after\r\n//each draw cycle.\r\np5.prototype.runGUI = function () {\r\n\tfor (var i = 0; i < cl_clickables.length; ++i) {\r\n\t\tif (cl_lastHovered != cl_clickables[i])\r\n\t\t\tcl_clickables[i].onOutside();\r\n\t}\r\n\tif (cl_lastHovered != null) {\r\n\t\tif (cl_lastClicked != cl_lastHovered) {\r\n\t\t\tcl_lastHovered.onHover();\r\n\t\t}\r\n\t}\r\n\tif (!cl_mouseWasPressed && cl_lastClicked != null) {\r\n\t\tcl_lastClicked.onPress();\r\n\t}\r\n\tif (cl_mouseWasPressed && !mouseIsPressed && cl_lastClicked != null) {\r\n\t\tif (cl_lastClicked == cl_lastHovered) {\r\n\t\t\tcl_lastClicked.onRelease();\r\n\t\t}\r\n\t\tcl_lastClicked = null;\r\n\t}\r\n\tcl_lastHovered = null;\r\n\tcl_mouseWasPressed = mouseIsPressed;\r\n}\r\n\r\np5.prototype.registerMethod('post', p5.prototype.runGUI);\r\n\r\n//This function is used to get the bounding size of a\r\n//string of text for use in the 'textScaled' property\r\nfunction getTextBounds(m, font, size) {\r\n\tlet txt = document.createElement(\"span\");\r\n\tdocument.body.appendChild(txt);\r\n\r\n\ttxt.style.font = font;\r\n\ttxt.style.fontSize = size + \"px\";\r\n\ttxt.style.height = 'auto';\r\n\ttxt.style.width = 'auto';\r\n\ttxt.style.position = 'absolute';\r\n\ttxt.style.whiteSpace = 'no-wrap';\r\n\ttxt.innerHTML = m;\r\n\r\n\tlet width = Math.ceil(txt.clientWidth);\r\n\tlet height = Math.ceil(txt.clientHeight);\r\n\tdocument.body.removeChild(txt);\r\n\treturn [width, height];\r\n}\r\n\r\n//Button Class\r\nfunction Clickable() {\r\n\tthis.x = 0;\t\t\t//X position of the clickable\r\n\tthis.y = 0;\t\t\t//Y position of the clickable\r\n\tthis.width = 100;\t\t//Width of the clickable\r\n\tthis.height = 50;\t\t//Height of the clickable\r\n\tthis.color = \"#FFFFFF\";\t\t//Background color of the clickable\r\n\tthis.cornerRadius = 10;\t\t//Corner radius of the clickable\r\n\tthis.strokeWeight = 2;\t\t//Stroke width of the clickable\r\n\tthis.stroke = \"#000000\";\t//Border color of the clickable\r\n\tthis.text = \"Press Me\";\t\t//Text of the clickable\r\n\tthis.textColor = \"#000000\";\t//Color for the text shown\r\n\tthis.textSize = 12;\t\t//Size for the text shown\r\n\tthis.textFont = \"sans-serif\";\t//Font for the text shown\r\n\tthis.textScaled = false;     //Scale the text with the size of the clickable\r\n\r\n\tthis.updateTextSize = function () {\r\n\t\tif (this.textScaled) {\r\n\t\t\tfor (let i = this.height; i > 0; i--) {\r\n\t\t\t\tif (getTextBounds(this.text, this.textFont, i)[0] <= this.width && getTextBounds(this.text, this.textFont, i)[1] <= this.height) {\r\n\t\t\t\t\tthis.textSize = i / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tthis.updateTextSize();\r\n\r\n\tthis.onHover = function () {\r\n\t\t//This function is ran when the clickable is hovered but not\r\n\t\t//pressed.\r\n\t}\r\n\r\n\tthis.onOutside = function () {\r\n\t\t//This function is ran when the clickable is NOT hovered.\r\n\t}\r\n\r\n\tthis.onPress = function () {\r\n\t\t//This function is ran when the clickable is pressed.\r\n\t}\r\n\r\n\tthis.onRelease = function () {\r\n\t\t//This function is ran when the cursor was pressed and then\r\n\t\t//released inside the clickable. If it was pressed inside and\r\n\t\t//then released outside this won't work.\r\n\t}\r\n\r\n\tthis.locate = function (x, y) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tthis.resize = function (w, h) {\r\n\t\tthis.width = w;\r\n\t\tthis.height = h;\r\n\t\tthis.updateTextSize();\r\n\t}\r\n\r\n\tthis.draw = function () {\r\n\r\n\t\tfill(this.color);\r\n\t\tstroke(this.stroke);\r\n\t\tstrokeWeight(this.strokeWeight);\r\n\t\trect(this.x, this.y, this.width, this.height, this.cornerRadius);\r\n\t\tfill(this.textColor);\r\n\t\tnoStroke();\r\n\t\ttextAlign(CENTER, CENTER);\r\n\t\ttextSize(this.textSize);\r\n\t\ttextFont(this.textFont);\r\n\t\ttext(this.text, this.x + this.width / 2, this.y + this.height / 2);\r\n\t\tif (mouseX >= this.x && mouseY >= this.y\r\n\t\t\t&& mouseX < this.x + this.width && mouseY < this.y + this.height) {\r\n\t\t\tcl_lastHovered = this;\r\n\t\t\tif (mouseIsPressed && !cl_mouseWasPressed)\r\n\t\t\t\tcl_lastClicked = this;\r\n\t\t}\r\n\t}\r\n\r\n\tcl_clickables.push(this);\r\n}",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa48",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "isSelectedFile": false,
        "id": "643ef8a368c08d3d5a07aa48"
      },
      {
        "name": "hogwarts wallpaper.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa3c",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/e8bdf7c7-815c-4374-a6a9-d54bcaa28a19.jpg",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "isSelectedFile": false,
        "id": "643ef8a368c08d3d5a07aa3c"
      },
      {
        "name": "Harry Potter Hedwigs Theme short.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa3b",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/ea76fed9-f71f-44bc-9489-0a689ab70b6c.mp3",
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "isSelectedFile": false,
        "id": "643ef8a368c08d3d5a07aa3b"
      },
      {
        "name": "HARRYP.TTF",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa3a",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/fe2e765c-95d5-489d-8703-16a0f9f14f79.TTF",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa3a"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "643ef8a368c08d3d5a07aa3e",
          "643ef8a368c08d3d5a07aa3f",
          "643ef8a368c08d3d5a07aa40",
          "643ef8a368c08d3d5a07aa41",
          "643ef8a368c08d3d5a07aa42",
          "643ef8a368c08d3d5a07aa43",
          "643ef8a368c08d3d5a07aa44",
          "643ef8a368c08d3d5a07aa45",
          "643ef8a368c08d3d5a07aa46"
        ],
        "fileType": "folder",
        "_id": "643ef8a368c08d3d5a07aa3d",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa3d"
      },
      {
        "name": "candle.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa3f",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/a3157c4a-2b7b-43df-9b7c-eddc5a23d5de.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa3f"
      },
      {
        "name": "remus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa44",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/0970f23c-6110-4e7c-91f6-374e222eb839.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa44"
      },
      {
        "name": "victory gesture.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa45",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/d4ae755a-b3cb-4913-93e7-24a2cfd6b563.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa45"
      },
      {
        "name": "brick wall.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa3e",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/8c646c4e-fb32-49ec-ba01-6f551f8b0e9f.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa3e"
      },
      {
        "name": "grey bg1.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa43",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/f4834397-df71-44f8-bbdd-b774ee843bc8.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa43"
      },
      {
        "name": "dementor3.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa42",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/dbdd9a92-95a0-4ee4-a8e8-b79983799552.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa42"
      },
      {
        "name": "dementor2.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa41",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/ed8ddba3-28a6-4984-a01a-dc537edc593b.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa41"
      },
      {
        "name": "dementor1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa40",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/6a6e14c6-08ac-43f1-b4e9-431f268a8be4.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa40"
      },
      {
        "name": "window1.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "643ef8a368c08d3d5a07aa46",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/dbbd3679-3e8d-4ce2-97ad-e9396dafdf0c.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-18T21:13:27.972Z",
        "createdAt": "2023-04-18T21:13:27.972Z",
        "id": "643ef8a368c08d3d5a07aa46"
      }
    ],
    "createdAt": "2023-04-18T20:08:04.412Z",
    "updatedAt": "2023-04-18T21:13:27.972Z",
    "id": "n7G1W5kjI"
  },
  {
    "name": "Harry Potter Light Tracker",
    "_id": "vbu8onzFQ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "643ef4249775f1b76905a962",
          "643ef4249775f1b76905a963",
          "643ef4249775f1b76905a964"
        ],
        "fileType": "folder",
        "_id": "643ef4249775f1b76905a961",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:07.934Z",
        "createdAt": "2023-04-21T14:24:07.934Z",
        "id": "643ef4249775f1b76905a961"
      },
      {
        "name": "sketch.js",
        "content": "let capture, videoBuffer;\nlet threshold = 100; // set the threshold value\nlet pos;\n\nfunction setup() {\n  createCanvas(640, 480);\n  capture = createCapture({\n    video: {\n      facingMode: \"environment\",\n      maxWidth: width,\n      maxHeight: height\n    },\n  });\n  capture.size(width, height);\n  videoBuffer = createGraphics(capture.width, capture.height);\n  capture.hide();\n  background(0);\n}\n\nfunction draw() {\n  videoBuffer.image(capture, 0, 0, width, width * capture.height / capture.width);\n  videoBuffer.loadPixels();\n  loadPixels();\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      pos = (width * y + x) * 4;\n      let brightness = (videoBuffer.pixels[pos] + videoBuffer.pixels[pos+1] + videoBuffer.pixels[pos+2]) / 3; // calculate the brightness value of the pixel\n      if (brightness > threshold) { // check if the brightness value is above the threshold\n        // blend the new light values with the existing pixel values\n        pixels[pos+0] = lerp(pixels[pos+0], videoBuffer.pixels[pos+0], 0.1);\n        pixels[pos+1] = lerp(pixels[pos+1], videoBuffer.pixels[pos+1], 0.1);\n        pixels[pos+2] = lerp(pixels[pos+2], videoBuffer.pixels[pos+2], 0.1);\n      }\n    }\n  }\n  updatePixels();\n}\n\nfunction mousePressed() {\n  save(\"lightpainter.png\"); \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef4249775f1b76905a963",
        "updatedAt": "2023-04-21T14:24:07.934Z",
        "createdAt": "2023-04-21T14:24:07.934Z",
        "isSelectedFile": true,
        "id": "643ef4249775f1b76905a963"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <p style=\"position:absolute;bottom:5px;left:5px;\">Click to save. More at <a href=\"https://publiclab.org/lightpainter\">Public Lab</a>. Inspired by <a href=\"https://glowdoodle.com\">GlowDoodle</a>.</p>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef4249775f1b76905a962",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:07.934Z",
        "createdAt": "2023-04-21T14:24:07.934Z",
        "id": "643ef4249775f1b76905a962"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "643ef4249775f1b76905a964",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:07.934Z",
        "createdAt": "2023-04-21T14:24:07.934Z",
        "id": "643ef4249775f1b76905a964"
      }
    ],
    "createdAt": "2023-04-18T19:48:52.274Z",
    "updatedAt": "2023-04-21T14:24:07.934Z",
    "id": "vbu8onzFQ"
  },
  {
    "name": "Harry Potter Light Tracker version 1",
    "_id": "v7IIN8FGk",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64429ca3537e63725ff45309",
          "64429ca3537e63725ff4530a",
          "64429ca3537e63725ff4530b"
        ],
        "fileType": "folder",
        "_id": "64429ca3537e63725ff45308",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:42.015Z",
        "createdAt": "2023-04-21T14:24:42.015Z",
        "id": "64429ca3537e63725ff45308"
      },
      {
        "name": "sketch.js",
        "content": "let capture, videoBuffer;\nlet threshold = 100; // set the threshold value\nlet pos;\n\nfunction setup() {\n  createCanvas(640, 480);\n  capture = createCapture({\n    video: {\n      facingMode: \"environment\",\n      maxWidth: width,\n      maxHeight: height\n    },\n  });\n  capture.size(width, height);\n  videoBuffer = createGraphics(capture.width, capture.height);\n  capture.hide();\n  background(0);\n}\n\nfunction draw() {\n  videoBuffer.image(capture, 0, 0, width, width * capture.height / capture.width);\n  videoBuffer.loadPixels();\n  loadPixels();\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      pos = (width * y + x) * 4;\n      let brightness = (videoBuffer.pixels[pos] + videoBuffer.pixels[pos+1] + videoBuffer.pixels[pos+2]) / 3; // calculate the brightness value of the pixel\n      if (brightness > threshold) { // check if the brightness value is above the threshold\n        // blend the new light values with the existing pixel values\n        pixels[pos+0] = lerp(pixels[pos+0], videoBuffer.pixels[pos+0], 0.1);\n        pixels[pos+1] = lerp(pixels[pos+1], videoBuffer.pixels[pos+1], 0.1);\n        pixels[pos+2] = lerp(pixels[pos+2], videoBuffer.pixels[pos+2], 0.1);\n      }\n    }\n  }\n  updatePixels();\n}\n\nfunction mousePressed() {\n  save(\"lightpainter.png\"); \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ca3537e63725ff4530a",
        "updatedAt": "2023-04-21T14:24:42.015Z",
        "createdAt": "2023-04-21T14:24:42.015Z",
        "isSelectedFile": true,
        "id": "64429ca3537e63725ff4530a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <p style=\"position:absolute;bottom:5px;left:5px;\">Click to save. More at <a href=\"https://publiclab.org/lightpainter\">Public Lab</a>. Inspired by <a href=\"https://glowdoodle.com\">GlowDoodle</a>.</p>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ca3537e63725ff45309",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:42.015Z",
        "createdAt": "2023-04-21T14:24:42.015Z",
        "id": "64429ca3537e63725ff45309"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429ca3537e63725ff4530b",
        "isSelectedFile": false,
        "updatedAt": "2023-04-21T14:24:42.015Z",
        "createdAt": "2023-04-21T14:24:42.015Z",
        "id": "64429ca3537e63725ff4530b"
      }
    ],
    "createdAt": "2023-04-21T14:24:35.731Z",
    "updatedAt": "2023-04-21T14:24:42.015Z",
    "id": "v7IIN8FGk"
  },
  {
    "name": "Harry Potter Prototype",
    "_id": "j0W7_dBYf",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64061d899fb2a354f81c9501",
          "64061d899fb2a354f81c9502",
          "64061d899fb2a354f81c9503",
          "64061d899fb2a354f81c9504",
          "64061d899fb2a354f81c9505",
          "64061d899fb2a354f81c9506"
        ],
        "fileType": "folder",
        "_id": "64061d899fb2a354f81c94ff",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "isSelectedFile": false,
        "id": "64061d899fb2a354f81c94ff"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/p5.serialserver@0.0.28/lib/p5.serialport.js\"></script>\n  <link href=\"https://fonts.googleapis.com/css2?family=Arvo&family=Bebas+Neue&family=Fredoka+One&family=Kenia&family=Rampart+One&family=Silkscreen&family=Sono:wght@200;500&display=swap\" rel=\"stylesheet\">\n\n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9503",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "isSelectedFile": false,
        "id": "64061d899fb2a354f81c9503"
      },
      {
        "name": "sketch.js",
        "content": "//defining everything\nlet serial;\nlet latestData = \"waiting for data\";\nlet classifier; // Classifier Variable\nlet imageModelURL = \"https://teachablemachine.withgoogle.com/models/-cIRl47R0/\"; // Model URL (linking to teachable machine)\nlet video; // Video\nlet flippedVideo;\nlet label = \"\"; // To store the classification\nlet audio; //Voldemort audio\nlet audio1;//Harry audio \n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + \"model.json\");\n  audio = loadSound(\"Voldemort.mp3\");\n  audio1 = loadSound(\"harry potter.mp3\")\n}\n\n//Making sure that the server is connected \nfunction serverConnected() {\n  console.log('connected to server.');\n}\n\n\n\nfunction setup() {\n  createCanvas(480, 390);\n  //connecting the serial from p5js to arduino\n  serial = new p5.SerialPort();\n  serial.open(\"/dev/tty.usbmodem14201\");//connecting arduino port to p5js\n  serial.on(\"data\", gotData);\n  serial.on('connected', serverConnected); // callback for connecting to the server\n  serial.list();                      // list the serial ports\n\n  // Create the video\n  video = createCapture(VIDEO); \n  video.size(320, 240);\n  video.hide();\n\n  flippedVideo = ml5.flipImage(video);\n  classifyVideo(); // Start classifying\n}\n\n// make a serial port selector object:\n//connecting the right port \nfunction printList(portList) {\n  // create a select object:\n  portSelector = createSelect();\n  portSelector.position(10, 10);\n  // portList is an array of serial port names\n  for (var i = 0; i < portList.length; i++) {\n    // add this port name to the select object:\n    portSelector.option(portList[i]);\n  }\n  // set an event listener for when the port is changed:\n  //portSelector.changed(mySelectEvent);\n}\n\nfunction draw() {\n  background(0);\n  // Draw the video\n  image(flippedVideo, 0, 0, 480, 360);\n\n  // Draw the label\n  if (label == \"Safe\") {\n    fill(255, 255, 0);\n    //playing the audio if prints \"safe\"\n    audio.stop();\n    audio1.stop();\n  }\n  if (label == \"Fight\") {\n    fill(0, 255, 0);\n    //playing the audio if prints \"Fight\"\n    audio.stop();\n    audio1.play();\n  }\n  if (label == \"Warning! Warning!\") {\n    fill(255, 0, 0);\n    if (audio.isPlaying() == false) {\n      //playing the audio if prints \"Warning! Warning!\"\n      audio.play();\n      audio1.stop();\n    }\n  }\n  //font for the texts\n  textSize(40);\n  textFont('Rampart One');\n  textAlign(CENTER);\n  text(label, width / 2, height - 8);\n}\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  flippedVideo = ml5.flipImage(video);\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(error, results) {\n  // If there is an error\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // The results are in an array ordered by confidence.\n  //console.log(results[0]);\n  label = results[0].label;\n  // Classifiy again!\n  classifyVideo();\n\n  if (label == \"Safe\") {\n    //number is the corresponding byte from arduino\n    serial.write(\"3\");\n  }\n\n  if (label == \"Fight\") {\n    //number is the corresponding byte from arduino\n    serial.write(\"2\");\n  }\n\n  if (label == \"Warning! Warning!\") {\n    //number is the corresponding byte from arduino\n    serial.write(\"1\");\n  }\n}\n\n//function converts the data values to integer\nfunction gotData() {\n  var currentString = serial.readLine();\n  trim(currentString);\n  if (!currentString) return;\n  latestData = int(currentString);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9505",
        "isSelectedFile": false,
        "createdAt": "2023-03-12T14:42:08.900Z",
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "id": "64061d899fb2a354f81c9505"
      },
      {
        "name": "p5.serialport.js",
        "content": "/*! p5.serialport.js v0.0.1 2015-07-23 */\n/**\n * @module p5.serialport\n * @submodule p5.serialport\n * @for p5.serialport\n * @main\n */\n/**\n *  p5.serialport\n *  Shawn Van Every (Shawn.Van.Every@nyu.edu)\n *  ITP/NYU\n *  LGPL\n *  \n *  https://github.com/vanevery/p5.serialport\n *\n */\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define('p5.serialport', ['p5'], function(p5) {\n      (factory(p5));\n    });\n  else if (typeof exports === 'object')\n    factory(require('../p5'));\n  else\n    factory(root['p5']);\n}(this, function(p5) {\n\n  // =============================================================================\n  //                         p5.SerialPort\n  // =============================================================================\n\n\n  /**\n   * Base class for a serial port. Creates an instance of the serial library and prints \"hostname\":\"serverPort\" in the console.\n   *\n   * @class p5.SerialPort\n   * @constructor\n   * @param {String} [hostname] Name of the host. Defaults to 'localhost'.\n   * @param {Number} [serverPort] Port number. Defaults to 8081.\n   * @example\n   * \tvar portName = '/dev/cu.usbmodem1411'; //enter your portName\n   *  \t\t\n   *\tfunction setup() {\n   *\t\t createCanvas(400, 300);\n   *\t\t serial = new p5.SerialPort()\n   *\t\t serial.open(portName);\n   *\t}\n   */\n  p5.SerialPort = function(_hostname, _serverport) {\n\n    var self = this;\n\n    this.bufferSize = 1; // How much to buffer before sending data event\n    this.serialBuffer = [];\n    //this.maxBufferSize = 1024;\n\n    this.serialConnected = false; // Is serial connected?\n\n    this.serialport = null;\n    this.serialoptions = null;\n    \n    this.emitQueue = [];\n\n    this.serialportList = [];\n\n    if (typeof _hostname === 'string') {\n      this.hostname = _hostname;\n    } else {\n      //console.log(\"typeof _hostname \" + typeof _hostname + \" setting to locahost\");\n      this.hostname = \"localhost\";\n    }\n\n    if (typeof _serverport === 'number') {\n      this.serverport = _serverport;\n    } else {\n      //console.log(\"typeof _serverport \" + typeof _serverport + \" setting to 8081\");\n      this.serverport = 8081;\n    }\n\n    try {\n      this.socket = new WebSocket(\"ws://\" + this.hostname + \":\" + this.serverport);\n      console.log((\"ws://\" + this.hostname + \":\" + this.serverport));\n    } catch (err) {\n      //console.log(err + \"\\n\" + \"Is the p5.serialserver running?\");\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback(\"Couldn't connect to the server, is it running?\");\n      }\n    }\n\n    this.socket.onopen = function(event) {\n      console.log('opened socket');\n      serialConnected = true;\n\n      if (typeof self.connectedCallback !== \"undefined\") {\n        self.connectedCallback();\n      }\n      \n      if (self.emitQueue.length > 0) {\n        for (var i = 0; i < self.emitQueue.length; i ++){\n          //console.log(\"queue: \" + self.emitQueue[i]);\n          self.emit(self.emitQueue[i]);\n        }\n        self.emitQueue = [];\n      }\n      \n      /* Now handled by the queue\n      if (self.serialport && self.serialoptions) {\n        // If they have asked for a connect, these won't be null and we should try the connect now\n        // Trying to hide the async nature of the server connection and just deal with the async nature of serial for the end user\n        self.emit({\n          method: 'openserial',\n          data: {\n            serialport: self.serialport,\n            serialoptions: self.serialoptions\n          }\n        });\n      }\n      */\n    };\n\n    this.socket.onmessage = function(event) {\n      //console.log(\"socketOnMessage\");\n      //console.log(event);\n\n      var messageObject = JSON.parse(event.data);\n\n      // MESSAGE ROUTING\n      if (typeof messageObject.method !== \"undefined\") {\n        if (messageObject.method == 'echo') {\n          //console.log(\"echo: \" + messageObject.data);\n        } else if (messageObject.method === \"openserial\") {\n          if (typeof self.openCallback !== \"undefined\") {\n            self.openCallback();\n          }\n        } else if (messageObject.method === \"data\") {\n          // Add to buffer, assuming this comes in byte by byte\n          //console.log(\"data: \" +  JSON.stringify(messageObject.data));\n          self.serialBuffer.push(messageObject.data);\n          \n          //console.log(self.serialBuffer.length);\n\n          if (typeof self.dataCallback !== \"undefined\") {\n            // Hand it to sketch\n            if (self.serialBuffer.length >= self.bufferSize) {\n              self.dataCallback();\n            }\n            //console.log(self.serialBuffer.length);\n          }\n\n          if (typeof self.rawDataCallback !== \"undefined\") {\n            self.rawDataCallback(messageObject.data);\n          }\n        } else if (messageObject.method === 'list') {\n          \n          self.serialportList = messageObject.data;\n\n          if (typeof self.listCallback !== \"undefined\") {\n            self.listCallback(messageObject.data);\n          }\n        } else if (messageObject.method === \"write\") {\n          // Success Callback?\n        } else if (messageObject.method === \"error\") {\n          //console.log(messageObject.data);\n\n          if (typeof self.errorCallback !== \"undefined\") {\n            // Hand it to sketch\n            self.errorCallback(messageObject.data);\n          }\n        } else {\n          // Got message from server without known method\n          console.log(\"Unknown Method: \" + messageObject);\n        }\n      } else {\n        console.log(\"Method Undefined: \" + messageObject);\n      }\n    };\n\n    this.socket.onclose = function(event) {\n      //console.log(\"socketOnClose\");\n      //console.log(event);\n\n      if (typeof self.closeCallback !== \"undefined\") {\n        self.closeCallback();\n      }\n    };\n\n    this.socket.onerror = function(event) {\n      //console.log(\"socketOnError\");\n      //console.log(event);\n\n      if (typeof self.errorCallback !== \"undefined\") {\n        self.errorCallback();\n      }\n    };\n\n  };\n\n/** \n *\n * @method emit\n * @private\n * @return\n * @example\n * \n */\n  p5.SerialPort.prototype.emit = function(data) {\n    if (this.socket.readyState == WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      this.emitQueue.push(data);\n    }\n  };\n\n/**\n * Tells you whether p5 is connected to the serial port. \n *\n * @method isConnected\n * @return {Boolean} true or false\n * @example\n * \t\tvar serial; // variable to hold an instance of the serialport library\n * \t\tvar portName = '/dev/cu.usbmodem1411';\n * \t\t\n * \t\tfunction setup() {\n * \t\t\tcreateCanvas(400, 300);\n *\t \t\tserial = new p5.SerialPort();\n *\t \t\tserial.open(portName);\n *\t \t\tprintln(serial.isConnected());\n * \t\t}\n */\n  p5.SerialPort.prototype.isConnected = function() {\n    if (self.serialConnected) { return true; }\n    else { return false; }\n  };\n\n/**\n * Lists serial ports available to the server.\n * Synchronously returns cached list, asynchronously returns updated list via callback.\n * Must be called within the p5 setup() function.\n * Doesn't work with the p5 editor's \"Run in Browser\" mode.\n *\n * @method list\n * @return {Array} array of available serial ports\n * @example\n * \t\tfunction setup() {\n * \t\tcreateCanvas(windowWidth, windowHeight);\n * \t\tserial = new p5.SerialPort();\n * \t\tserial.list();\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n * \t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/two-way-duplex-serial-communication-using-p5js/\">Link</a>\n * @example\n * \t\tfunction printList(portList) {\n * \t\t  // portList is an array of serial port names\n * \t\t  for (var i = 0; i < portList.length; i++) {\n * \t\t    // Display the list the console:\n * \t\t    println(i + \" \" + portList[i]);\n * \t\t  }\n * \t\t}\n */\n  p5.SerialPort.prototype.list = function(cb) {\n    if (typeof cb === 'function') {\n      this.listCallback = cb;\n    }\n    this.emit({\n      method: 'list',\n      data: {}\n    });\n\n    return this.serialportList;\n  };\n\n/**\n * Opens the serial port to enable data flow.\n * Use the {[serialOptions]} parameter to set the baudrate if it's different from the p5 default, 9600.\n * \n * @method open\n * @param  {String} serialPort Name of the serial port, something like '/dev/cu.usbmodem1411'\n * @param  {Object} [serialOptions] Object with optional options as {key: value} pairs.\n *                                Options include 'baudrate'.\n * @param  {Function} [serialCallback] Callback function when open completes\n * @example\n * \t\t// Change this to the name of your arduino's serial port\n * \t\tserial.open(\"/dev/cu.usbmodem1411\");\n *\n * @example\n * \t\t// All of the following are valid:\n *\t\tserial.open(portName);\n *\t\tserial.open(portName, {}, onOpen);\n *\t\tserial.open(portName, {baudrate: 9600}, onOpen)\n *\t\t\n *\t\tfunction onOpen() {\n *\t\t  print('opened the serial port!');\n *\t\t}\n */\n  p5.SerialPort.prototype.open = function(_serialport, _serialoptions, cb) {\n\n    if (typeof cb === 'function') {\n      this.openCallback = cb;\n    }\n\n    this.serialport = _serialport;\n\n    if (typeof _serialoptions === 'object') {\n      this.serialoptions = _serialoptions;\n    } else {\n      //console.log(\"typeof _serialoptions \" + typeof _serialoptions + \" setting to {}\");\n      this.serialoptions = {};\n    }\n    // If our socket is connected, we'll do this now, \n    // otherwise it will happen in the socket.onopen callback\n    this.emit({\n      method: 'openserial',\n      data: {\n        serialport: this.serialport,\n        serialoptions: this.serialoptions\n      }\n    });\n  };\n\n/**\n * Sends a byte to a webSocket server which sends the same byte out through a serial port.\n * @method write\n * @param  {String, Number, Array} Data Writes bytes, chars, ints, bytes[], and strings to the serial port.\n * @example\n * You can use this with the included Arduino example called PhysicalPixel.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/writeExample\">Link</a>\n * \t\t\n * \t\tfunction mouseReleased() {\n *\t  \t\t  serial.write(outMessage);\n *\t\t\t  if (outMessage === 'H') {\n *\t\t\t    outMessage = 'L';\n *\t\t\t  } else {\n *\t\t\t    outMessage = 'H';\n *\t\t\t  }\n *\t\t}\n *\n * For full example: <a href=\"https://itp.nyu.edu/physcomp/labs/labs-serial-communication/lab-serial-output-from-p5-js/\">Link</a>\n * @example\t\t\n * \t\tfunction mouseDragged() {\n *   \t\t  // map the mouseY to a range from 0 to 255:\n *\t\t\t  outByte = int(map(mouseY, 0, height, 0, 255));\n *\t\t\t  // send it out the serial port:\n *\t\t\t  serial.write(outByte);\n *\t\t}\n */\n  p5.SerialPort.prototype.write = function(data) {\n    //Writes bytes, chars, ints, bytes[], Strings to the serial port\n    var toWrite = null;\n    if (typeof data == \"number\") {\n      // This is the only one I am treating differently, the rest of the clauses are meaningless\n      toWrite = [data];\n    } else if (typeof data == \"string\") {\n      toWrite = data;\n    } else if (Array.isArray(data)) {\n      toWrite = data;\n    } else {\n      toWrite = data;\n    }\n\n    this.emit({\n      method: 'write',\n      data: toWrite\n    });\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer. \n * Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n *\n * @method read\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tfunction serialEvent() {\n *   \t\tinByte = int(serial.read());\n *\t\t\tbyteCount++;\n *\t\t}\n *\n * @example\n * \t\tfunction serialEvent() {\n *\t  \t\t// read a byte from the serial port:\n *\t\t\tvar inByte = serial.read();\n *\t\t\t// store it in a global variable:\n *\t\t\tinData = inByte;\n *\t\t}\n */\n  p5.SerialPort.prototype.read = function() {\n    if (this.serialBuffer.length > 0) {\n      return this.serialBuffer.shift();\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns the next byte in the buffer as a char. \n * \n * @method readChar\n * @return {String} Value of the Unicode-code unit character byte waiting in the buffer, converted from bytes. Returns -1 or 0xffff if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read a char from the serial port:\n *\t\t  inData = serial.readChar();\n *\t\t}\n */\n  p5.SerialPort.prototype.readChar = function() {\n    if (this.serialBuffer.length > 0) {\n      /*var currentByte = this.serialBuffer.shift();\n      console.log(\"p5.serialport.js: \" + currentByte);\n      var currentChar = String.fromCharCode(currentByte);\n      console.log(\"p5.serialport.js: \" + currentChar);\n      return currentChar;\n      */\n      return String.fromCharCode(this.serialBuffer.shift());\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns a number between 0 and 255 for the next byte that's waiting in the buffer, and then clears the buffer of data. Returns -1 if there is no byte, although this should be avoided by first checking available() to see if data is available.\n * @method readBytes\n * @return {Number} Value of the byte waiting in the buffer. Returns -1 if there is no byte.\n * @example\n * \t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  // callback for when new data arrives\n *\t\t  serial.on('data', serialEvent); \n *\t\t  \n *\t\tfunction serialEvent() {\n *\t\t  // read bytes from the serial port:\n *\t\t  inData = serial.readBytes();\n *\t\t}\n */\n  p5.SerialPort.prototype.readBytes = function() {\n    if (this.serialBuffer.length > 0) {\n      var returnBuffer = this.serialBuffer.slice();\n\n      // Clear the array\n      this.serialBuffer.length = 0;\n\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all of the data available, up to and including a particular character.\n * If the character isn't in the buffer, 'null' is returned. \n * The version without the byteBuffer parameter returns a byte array of all data up to and including the interesting byte. \n * This is not efficient, but is easy to use. \n * \n * The version with the byteBuffer parameter is more efficient in terms of time and memory. \n * It grabs the data in the buffer and puts it into the byte array passed in and returns an integer value for the number of bytes read. \n * If the byte buffer is not large enough, -1 is returned and an error is printed to the message area. \n * If nothing is in the buffer, 0 is returned.\n *\n * @method readBytesUntil\n * @param {[byteBuffer]} \n * @return {[Number]} [Number of bytes read]\n * @example\n *\t\t// All of the following are valid:\n *\t\tcharToFind.charCodeAt();\n *\t\tcharToFind.charCodeAt(0);\n *\t\tcharToFind.charCodeAt(0, );\n */\n  p5.SerialPort.prototype.readBytesUntil = function(charToFind) {\n    console.log(\"Looking for: \" + charToFind.charCodeAt(0));\n    var index = this.serialBuffer.indexOf(charToFind.charCodeAt(0));\n    if (index !== -1) {\n      // What to return\n      var returnBuffer = this.serialBuffer.slice(0, index + 1);\n      // Clear out what was returned\n      this.serialBuffer = this.serialBuffer.slice(index, this.serialBuffer.length + index);\n      return returnBuffer;\n    } else {\n      return -1;\n    }\n  };\n\n/**\n * Returns all the data from the buffer as a String. \n * This method assumes the incoming characters are ASCII. \n * If you want to transfer Unicode data: first, convert the String to a byte stream in the representation of your choice (i.e. UTF8 or two-byte Unicode data). \n * Then, send it as a byte array.\n *\n * @method readString\n * @return\n * @example\n * \n *\n *\n * \n */\n  p5.SerialPort.prototype.readString = function() {\n    //var returnBuffer = this.serialBuffer;\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    // Clear the buffer\n    this.serialBuffer.length = 0;\n    return stringBuffer.join(\"\");\n  };\n\n/**\n * Returns all of the data available as an ASCII-encoded string.\n *\n * @method readStringUntil\n * @param {String} stringToFind String to read until.\n * @return {String} ASCII-encoded string until and not including the stringToFind.\n * @example\n *\n * For full example: <a href=\"https://github.com/tigoe/p5.serialport/blob/master/examples/twoPortRead/sketch.js\">Link</a>\n * \t\t \n * \t\t var serial1 = new p5.SerialPort();\n *\t\t var serial2 = new p5.SerialPort();\n *\t\t var input1 = '';\n *\t\t var input2 = '';\n *\t\t\n *\t\t function serialEvent(){\n *\t\t \t\tdata = serial1.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput1 = data;\n *\t\t\t\t}\n *\t\t }\n *\t\t \n *\t\t function serial2Event() {\n *\t\t \t\tvar data = serial2.readStringUntil('\\r\\n');\n *\t\t\t\tif (data.length > 0){\n *\t\t\t\tinput2 = data;\n *\t\t\t\t}\n *\t\t }\n */\n  p5.SerialPort.prototype.readStringUntil = function(stringToFind) {\n\n    var stringBuffer = [];\n    //console.log(\"serialBuffer Length: \" + this.serialBuffer.length);\n    for (var i = 0; i < this.serialBuffer.length; i++) {\n      //console.log(\"push: \" + String.fromCharCode(this.serialBuffer[i]));\n      stringBuffer.push(String.fromCharCode(this.serialBuffer[i]));\n    }\n    stringBuffer = stringBuffer.join(\"\");\n    //console.log(\"stringBuffer: \" + stringBuffer);\n\n    var returnString = \"\";\n    var foundIndex = stringBuffer.indexOf(stringToFind);\n    //console.log(\"found index: \" + foundIndex);\n    if (foundIndex > -1) {\n      returnString = stringBuffer.substr(0, foundIndex);\n      this.serialBuffer = this.serialBuffer.slice(foundIndex + stringToFind.length);\n    }\n    //console.log(\"Sending: \" + returnString);\n    return returnString;\n  };\n\n\n/**\n * Returns all of the data available as an ASCII-encoded string until a line break is encountered.\n * \n * @method readLine\n * @return {String} ASCII-encoded string\n * @example\n * \n * You can use this with the included Arduino example called AnalogReadSerial.\n * Works with P5 editor as the socket/serial server, version 0.5.5 or later.\n * Written 2 Oct 2015 by Tom Igoe. For full example: <a href=\"https://github.com/vanevery/p5.serialport/tree/master/examples/readAndAnimate\">Link</a>\n * \t\t\n * \t\tfunction gotData() {\n *   \t\t  var currentString = serial.readLine();  // read the incoming data\n *\t\t\t  trim(currentString);                    // trim off trailing whitespace\n *\t\t\t\n *\t\t\t  if (!currentString) return; {            // if the incoming string is empty, do no more \n *\t\t\t    console.log(currentString);\n *\t\t\t    }\n *\t\t\t    \n *\t\t\t  if (!isNaN(currentString)) {  // make sure the string is a number (i.e. NOT Not a Number (NaN))\n *\t\t\t    textXpos = currentString;   // save the currentString to use for the text position in draw()\n *\t\t\t    }\n *\t\t\t}\n */\n  p5.SerialPort.prototype.readLine = function() {\n    return this.readStringUntil(\"\\r\\n\");\n  }; \n\n/**\n * Returns the number of bytes available.\n *\n * @method available\n * @return {Number} The length of the serial buffer array, in terms of number of bytes in the buffer.\n * @example\n *\t\tfunction draw() {\n *\t\t\t// black background, white text:\n *\t\t\tbackground(0);\n *\t\t\tfill(255);\n *\t\t\t// display the incoming serial data as a string:\n *\t\t\tvar displayString = \"inByte: \" + inByte + \"\\t Byte count: \" + byteCount;\n *\t\t\tdisplayString += \"  available: \" + serial.available();\n *\t\t\ttext(displayString, 30, 60);\n *\t\t\t}\n * */\n  p5.SerialPort.prototype.available = function() {\n    return this.serialBuffer.length;\n  };\n\n/**\n * Returns the last byte of data from the buffer.\n *\n * @method last\n * @return {Number}\n * @example\n * \n * */\n  p5.SerialPort.prototype.last = function() {\n    //Returns last byte received\n    var last = this.serialBuffer.pop();\n    this.serialBuffer.length = 0;\n    return last;\n  };\n\n/**\n * Returns the last byte of data from the buffer as a char.\n *\n * @method lastChar\n * @example\n * \n * */\n  p5.SerialPort.prototype.lastChar = function() {\n    return String.fromCharCode(this.last());\n  };\n\n/**\n * Clears the underlying serial buffer.\n *\n * @method clear\n * @example\n */\n  p5.SerialPort.prototype.clear = function() {\n    //Empty the buffer, removes all the data stored there.\n    this.serialBuffer.length = 0;\n  };\n\n/**\n * Stops data communication on this port. \n * Use to shut the connection when you're finished with the Serial.\n *\n * @method stop\n * @example\n * \n */\n  p5.SerialPort.prototype.stop = function() {\n  };\n\n/**\n * Tell server to close the serial port. This functions the same way as serial.on('close', portClose).\n * \n * @method close\n * @param {String} name of callback\n * @example\n *\t\t\n *\t\tvar inData;\n *\t\t\n *\t\tfunction setup() {\n *\t\t  serial.open(portOpen);\n *\t\t  serial.close(portClose); \n *\t\t}\n *  \t\n *  \tfunction portOpen() {\n *\t\t  println('The serial port is open.');\n *\t\t}  \n *\t\t \n *\t\tfunction portClose() {\n *\t\t  println('The serial port closed.');\n *\t\t}  \n */\n  p5.SerialPort.prototype.close = function(cb) {\n    // \n    if (typeof cb === 'function') {\n      this.closeCallback = cb;\n    }\n    this.emit({\n      method: 'close',\n      data: {}\n    });\n  };\n\n/**\n * // Register callback methods from sketch\n * \n */\n  p5.SerialPort.prototype.onData = function(_callback) {\n    this.on('data',_callback);\n  };\n\n  p5.SerialPort.prototype.onOpen = function(_callback) {\n    this.on('open',_callback);\n  };\n\n  p5.SerialPort.prototype.onClose = function(_callback) {\n    this.on('close',_callback);\n  };\n\n  p5.SerialPort.prototype.onError = function(_callback) {\n    this.on('error',_callback);\n  };\n\n  p5.SerialPort.prototype.onList = function(_callback) {\n    this.on('list',_callback);\n  };\n\n  p5.SerialPort.prototype.onConnected = function(_callback) {\n    this.on('connected',_callback);\n  };\n\n  p5.SerialPort.prototype.onRawData = function(_callback) {\n    this.on('rawdata',_callback);\n  };\n\n  // Version 2\n  p5.SerialPort.prototype.on = function(_event, _callback) {\n    if (_event == 'open') {\n      this.openCallback = _callback;\n    } else if (_event == 'data') {\n      this.dataCallback = _callback;\n    } else if (_event == 'close') {\n      this.closeCallback = _callback;\n    } else if (_event == 'error') {\n      this.errorCallback = _callback;\n    } else if (_event == 'list') {\n      this.listCallback = _callback;\n    } else if (_event == 'connected') {\n      this.connectedCallback = _callback;\n    } else if (_event == 'rawdata') {\n      this.rawDataCallback = _callback;\n    }\n  };\n}));\n\n// EOF\n",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9504",
        "isSelectedFile": false,
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "id": "64061d899fb2a354f81c9504"
      },
      {
        "name": "style.css",
        "content": "html,body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9506",
        "isSelectedFile": false,
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "id": "64061d899fb2a354f81c9506"
      },
      {
        "name": "Voldemort.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9501",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/57ff01cd-5203-433e-8507-dd336b8186ff.mp3",
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "isSelectedFile": true,
        "id": "64061d899fb2a354f81c9501"
      },
      {
        "name": "harry potter.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64061d899fb2a354f81c9502",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/9782d3cd-116d-4db8-bbda-52ce9bfc633b.mp3",
        "updatedAt": "2023-03-12T14:42:08.900Z",
        "createdAt": "2023-03-12T14:42:08.900Z",
        "isSelectedFile": false,
        "id": "64061d899fb2a354f81c9502"
      }
    ],
    "createdAt": "2023-03-06T17:06:19.805Z",
    "updatedAt": "2023-03-12T14:42:08.900Z",
    "id": "j0W7_dBYf"
  },
  {
    "name": "Hot crustacean",
    "_id": "nNaa7cCKt",
    "updatedAt": "2022-10-10T04:13:41.093Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6343876ec14946f8ac4b6262",
          "6343876ec14946f8ac4b6261",
          "6343876ec14946f8ac4b6263"
        ],
        "fileType": "folder",
        "_id": "6343876ec14946f8ac4b6264",
        "createdAt": "2022-10-10T04:13:41.090Z",
        "updatedAt": "2022-10-10T04:13:41.090Z",
        "id": "6343876ec14946f8ac4b6264"
      },
      {
        "name": "sketch.js",
        "content": "// The midi notes of a scale\nvar notes = [ 60, 62, 64, 65, 67, 69, 71];\nvar osc;\n\nlet x = 320;\nlet y = 180;\nlet xspeed = 5;\nlet yspeed = 2;\n\n// let r = 25;\n\nfunction setup() {\n  createCanvas(720, 400);\n  \n\n  // A triangle oscillator\n  osc = new p5.TriOsc();\n  // Start silent\n  osc.start();\n  osc.amp(0);\n}\n\n// A function to play a note\nfunction playNote(note, duration) {\n  osc.freq(midiToFreq(note));\n  // Fade it in\n  osc.fade(0.5,0.2);\n\n  // If we sest a duration, fade it out\n  if (duration) {\n    setTimeout(function() {\n      osc.fade(0,0.2);\n    }, duration-50);\n  }\n}\n\nfunction draw() {\n\n  // Draw a keyboard\n\n  // The width for each key\n  var w = width / notes.length;\n  for (var i = 0; i < notes.length; i++) {\n    var x = i * w;\n    // If the mouse is over the key\n    if (mouseX > x && mouseX < x + w && mouseY < height) {\n      // If we're clicking\n      if (mouseIsPressed) {\n        fill(200,255,200);\n      // Or just rolling over\n      } else {\n        fill(100,200,300);\n      }\n    } else {\n      fill(300,50,250);\n    }\n\n\n    // Draw the key\n    circle(x, 100, w, height);\n   ellipse(x, y, 50, 50);\n   x += xspeed;\n   y += yspeed;\n   if (x > width - 50 || x < 50) {\n     xspeed = -xspeed;\n   }\n  if (y > height - 50 || y < 50) {\n     yspeed = -yspeed;\n  }\n  }\n\n}\n\n// When we click\nfunction mousePressed() {\n  // Map mouse to the key index\n  var key = floor(map(mouseX, 0, width, 0, notes.length));\n  playNote(notes[key]);\n}\n\n// Fade it out when we release\nfunction mouseReleased() {\n  osc.fade(0,0.5);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "6343876ec14946f8ac4b6261",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T04:13:41.093Z",
        "updatedAt": "2022-10-10T04:13:41.093Z",
        "id": "6343876ec14946f8ac4b6261"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6343876ec14946f8ac4b6262",
        "createdAt": "2022-10-10T04:13:41.093Z",
        "updatedAt": "2022-10-10T04:13:41.093Z",
        "id": "6343876ec14946f8ac4b6262"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6343876ec14946f8ac4b6263",
        "createdAt": "2022-10-10T04:13:41.093Z",
        "updatedAt": "2022-10-10T04:13:41.093Z",
        "id": "6343876ec14946f8ac4b6263"
      }
    ],
    "createdAt": "2022-10-10T04:13:41.093Z",
    "id": "nNaa7cCKt"
  },
  {
    "name": "ImageModel_TM copy",
    "_id": "L5vGSP5lh",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6372969395751781b8c0afe9",
          "6372969395751781b8c0afea"
        ],
        "fileType": "folder",
        "_id": "6372969395751781b8c0afe8",
        "createdAt": "2020-10-29T00:36:35.384Z",
        "updatedAt": "2020-10-29T00:36:35.384Z",
        "id": "6372969395751781b8c0afe8"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n</head>\n\n<body>\n  <h1>Teachable Machine</h1>\n  <p>This is a demonstration of image classification using a model trained with Google's Teachable\n    Machine project. If you cover the camera, this model will classify the image as \"nighttime,\" otherwise will classify\n    anything else as \"daytime.\" </p>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "6372969395751781b8c0afe9",
        "createdAt": "2020-10-29T00:36:35.384Z",
        "updatedAt": "2020-10-29T00:36:35.384Z",
        "id": "6372969395751781b8c0afe9"
      },
      {
        "name": "sketch.js",
        "content": "// Copyright (c) 2019 ml5\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n/* ===\nml5 Example\nWebcam Image Classification using a pre-trained customized model and p5.js\nThis example uses p5 preload function to create the classifier\n=== */\n\n// Classifier Variable\nlet classifier;\n// Model URL\nlet imageModelURL = 'https://teachablemachine.withgoogle.com/models/to0VNb6Ei/';\n\n// Video\nlet video;\nlet flippedVideo;\n// To store the classification\nlet label = \"\";\n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n}\n\nfunction setup() {\n  createCanvas(320, 260);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(320, 240);\n  video.hide();\n\n  flippedVideo = ml5.flipImage(video)\n  // Start classifying\n  classifyVideo();\n}\n\nfunction draw() {\n  background(0);\n  // Draw the video\n  image(flippedVideo, 0, 0);\n\n  // Draw the label\n  fill(255);\n  textSize(16);\n  textAlign(CENTER);\n  text(label, width / 2, height - 4);\n}\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  flippedVideo = ml5.flipImage(video)\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(error, results) {\n  // If there is an error\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // The results are in an array ordered by confidence.\n  // console.log(results[0]);\n  label = results[0].label;\n  // Classifiy again!\n  classifyVideo();\n}",
        "children": [],
        "fileType": "file",
        "_id": "6372969395751781b8c0afea",
        "isSelectedFile": true,
        "createdAt": "2020-10-29T00:36:35.384Z",
        "updatedAt": "2020-10-29T00:36:35.384Z",
        "id": "6372969395751781b8c0afea"
      }
    ],
    "createdAt": "2022-11-14T19:27:15.845Z",
    "updatedAt": "2022-11-14T19:27:15.845Z",
    "id": "L5vGSP5lh"
  },
  {
    "name": "ims01 - chloe",
    "_id": "12H2WCPXU",
    "updatedAt": "2024-03-12T15:41:19.350Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65f077348fe344dd62055332",
          "65f077348fe344dd62055331",
          "65f077348fe344dd62055333"
        ],
        "fileType": "folder",
        "_id": "65f077348fe344dd62055334",
        "createdAt": "2024-03-12T15:41:19.350Z",
        "updatedAt": "2024-03-12T15:41:19.350Z",
        "id": "65f077348fe344dd62055334"
      },
      {
        "name": "sketch.js",
        "content": "//https://editor.p5js.org/kg3171/sketches/12H2WCPXU\n//ims01 - chloe\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  background('red');\n}",
        "children": [],
        "fileType": "file",
        "_id": "65f077348fe344dd62055331",
        "isSelectedFile": true,
        "createdAt": "2024-03-12T15:41:19.350Z",
        "updatedAt": "2024-03-12T15:41:19.350Z",
        "id": "65f077348fe344dd62055331"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65f077348fe344dd62055332",
        "createdAt": "2024-03-12T15:41:19.350Z",
        "updatedAt": "2024-03-12T15:41:19.350Z",
        "id": "65f077348fe344dd62055332"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65f077348fe344dd62055333",
        "createdAt": "2024-03-12T15:41:19.350Z",
        "updatedAt": "2024-03-12T15:41:19.350Z",
        "id": "65f077348fe344dd62055333"
      }
    ],
    "createdAt": "2024-03-12T15:40:01.019Z",
    "id": "12H2WCPXU"
  },
  {
    "name": "ims01-chlo.",
    "_id": "9E7SkIi1J",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6600f414558645b7e372907d",
          "6600f414558645b7e372907e",
          "6600f414558645b7e372907f",
          "6600f414558645b7e3729080",
          "6600f414558645b7e3729081",
          "6600f414558645b7e3729082",
          "6600f414558645b7e3729083",
          "6600f414558645b7e3729084",
          "6600f414558645b7e3729085",
          "6600f414558645b7e3729086",
          "6600f414558645b7e3729087"
        ],
        "fileType": "folder",
        "_id": "6600f414558645b7e372907c",
        "isSelectedFile": false,
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e372907c"
      },
      {
        "name": "sketch.js",
        "content": "//link to original: https://editor.p5js.org/faichan/sketches/rXBjp_y6Y\n\n//\n\n//variables for sounds\nvar cello1;\nvar cello2;\nvar cello3;\nvar clar;\nvar oboe;\nvar drum;\nvar abstract;\nvar chime;\nvar show = true;\n\n//variables for animations\nvar backgroundColor = 40; \nvar x;\nvar y;\nvar z;\nvar j;\nvar k;\nvar l;\nvar a;\nvar b;\nvar c;\nvar drumlocx = 100;\nvar drumlocy = 200;\nvar drumColor;\nvar abstracty;\nvar abstractOp;\nlet chimelocx1;\nlet chimelocy1;\nlet chimelocx2;\nlet chimelocy2;\nlet chimelocx3;\nlet chimelocy3;\nlet chimelocx4;\nlet chimelocy4;\nlet chimeMainLocx;\nlet chimeMainLocy;\nlet drumColorR;\nlet drumColorG;\nlet drumColorB;\n\n\n//preloading sounds\nfunction preload() {\n  cello1 = loadSound('Cello1.wav');\n  cello2 = loadSound('Cello2.wav');\n  cello3 = loadSound('Cello3.wav');\n  clar = loadSound('clar.mp3');\n  oboe = loadSound('oboe.wav');\n  drum = loadSound('kickdrum.wav');\n  abstract = loadSound('abstract.wav');\n  chime = loadSound('chime2.wav');\n}\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  chimelocx1 = random(-40, 40);\n  chimelocy1 = random(-40, 40);\n  chimelocx2 = random(-40, 40);\n  chimelocy2 = random(-40, 40);\n  chimelocx3 = random(-40, 40);\n  chimelocy3 = random(-40, 40);\n  chimelocx4 = random(-40, 40);\n  chimelocy4 = random(-40, 40);\n  chimeMainLocx = random(width);\n  chimeMainLocy = random(height);\n  drumColorR = random(230, 255);\n  drumColorG = random(50, 150);\n  drumColorB = random(100);\n  clarColor = random (20, 150)\n}\n\nfunction draw() {\n  noStroke();\n  background(backgroundColor);\n  \n  if (show == true){\n    instruction();\n  }\n  \n  //cello1\n  j = map(cello1.currentTime(), 0, cello1.duration() , 0, height);\n  fill(105, 100);\n  rect(0, 0, 133, j);\n  \n  //cello2\n  k = map(cello2.currentTime(), 0, cello2.duration() , 0, height);\n  fill(135, 100);\n  rect(133, 400, 133, -k);\n  \n  //cello3\n  l = map(cello3.currentTime(), 0, cello3.duration(), 0, height);\n  fill(165, 100);\n  rect(266, 0, 133, l);\n\n  //clar\n  fill(255); \n  x = map(clar.currentTime(), 0, clar.duration(), 0, 200);\n  push();\n  rectMode(CENTER);\n  rect(width/2,height/2,x,40); \n  rect(width/2, height/2, -x,40); \n  pop();\n  \n  //oboe\n  y = map(oboe.currentTime(), 0, oboe.duration(), 50, 500);\n  z = map(oboe.currentTime(), 0, oboe.duration(), 0, 255);\n  push();\n  fill (200, z);\n  translate(width/2, height/2);\n  rectMode(CENTER);\n  rotate(40);\n  rect (0,0,y,y);\n  pop();\n\n  //Drum\n  // fill(255, 0, 0);\n  noFill();\n  stroke(drumColorR, drumColorG, drumColorB);\n  a = map(drum.currentTime(), 0, drum.duration(), 0, 200);\n  ellipse(drumlocx, drumlocy, a, a);\n\n\t//Abstract\n  noFill();\n  abstractOp = map (abstract.currentTime(), 0, abstract.duration(), 0, 255);\n  stroke(255, 255, 0, abstractOp);\n  abstracty = map(abstract.currentTime(), 0, abstract.duration(), 30, 200);\n  ellipse(width/2, height/2, 30, abstracty);\n  \n\n  //Chime\n  c = map(chime.currentTime(), 0, chime.duration(), 0, 100);\n  noFill();\n  if (c > 0 && c < 10) {\n    stroke(100, 200, 255)\n    ellipse(chimeMainLocx, chimeMainLocy, 20, 20);\n  } else if (c > 10 && c < 20) {\n    stroke(100, 200, 255, 70)\n    ellipse(chimeMainLocx + chimelocx1, chimeMainLocy + chimelocy1, 20, 20);\n  } else if (c > 30 && c < 40) {\n    stroke(100, 200, 255, 40)\n    ellipse(chimeMainLocx + chimelocx2, chimeMainLocy + chimelocy2, 10, 10);\n  } else if (c > 40 && c < 50) {\n    stroke(100, 200, 255, 20)\n    ellipse(chimeMainLocx + chimelocx3, chimeMainLocy + chimelocy3, 10, 10);\n  } else if (c > 50 && c < 60) {\n    stroke(100, 200, 255, 10)\n    ellipse(chimeMainLocx + chimelocx4, chimeMainLocy + chimelocy4, 10, 10);\n  }\n\t\n  //console.log(key);\n}\n\nfunction keyPressed() {\n  //triggering sound + animation when pressing on keys\n  if (key == 'a') {\n    clar.play();\n  } else if (key == 's') {\n    oboe.play();\n  } else if (key == 'q') {\n    cello1.play();\n  } else if (key == 'w') {\n    cello2.play();\n  } else if (key == 'e') {\n    cello3.play();\n  }  else if (key == 'j') {\n    drum.play()\n    drumlocx = random(width);\n    drumlocy = random(height);\n    drumColorR = random(230, 255);\n    drumColorG = random(50, 150);\n    drumColorB = random(100);\n  } else if (key == 'k') {\n    abstract.play();\n  } else if (key == 'l') {\n    chime.play();\n    chimeMainLocx = random(width);\n    chimeMainLocy = random(height);\n    chimelocx1 = random(-20, 20);\n    chimelocy1 = random(-20, 20);\n    chimelocx2 = random(-20, 20);\n    chimelocy2 = random(-20, 20);\n    chimelocx3 = random(-20, 20);\n    chimelocy3 = random(-20, 20);\n    chimelocx4 = random(-20, 20);\n    chimelocy4 = random(-20, 20);\n  } else {\n    backgroundColor = random(0,40); \n  }\n  \n}\n\n  function instruction(){\n    textAlign(CENTER);\n    fill (255);\n    textSize(15);\n    text(\"Press Q, W, E, A, or S for instrumental sounds.\", width/2, height/2 - 25);\n\t\ttext(\"Press J, K, or L for electronic sounds.\", width/2, height/2);\n    fill (150);\n    text(\"Click to continue!\", width/2, height/2 + 25);\n  }\n\nfunction mousePressed(){\n  show = false;\n}",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729086",
        "isSelectedFile": true,
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e3729086"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729083",
        "isSelectedFile": false,
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e3729083"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729087",
        "isSelectedFile": false,
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e3729087"
      },
      {
        "name": "chime2.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729081",
        "isSelectedFile": false,
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/2ea82348-f931-4e28-b1d5-99d5f6a14b7a.wav",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e3729081"
      },
      {
        "name": "kickdrum.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729084",
        "isSelectedFile": false,
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/fe2dd3fe-8e07-4b55-b715-c807214e0b90.wav",
        "id": "6600f414558645b7e3729084"
      },
      {
        "name": "clar.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729082",
        "isSelectedFile": false,
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/446066da-47a8-4fef-93c0-66e20e0354e7.mp3",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "id": "6600f414558645b7e3729082"
      },
      {
        "name": "oboe.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729085",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/c4f0e9f4-a737-48f0-9cd3-1aed7dab9542.wav",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "isSelectedFile": false,
        "id": "6600f414558645b7e3729085"
      },
      {
        "name": "Cello1.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e372907d",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/3bc073bd-3a1d-4e6d-81c3-b1bfb764dbb0.wav",
        "isSelectedFile": false,
        "id": "6600f414558645b7e372907d"
      },
      {
        "name": "Cello2.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e372907e",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/d0b16afd-39df-48c7-bfb3-ea07f5246753.wav",
        "isSelectedFile": false,
        "id": "6600f414558645b7e372907e"
      },
      {
        "name": "Cello3.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e372907f",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/302b492a-6122-4cfd-b141-eb38993e7eb1.wav",
        "isSelectedFile": false,
        "id": "6600f414558645b7e372907f"
      },
      {
        "name": "abstract.wav",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6600f414558645b7e3729080",
        "createdAt": "2024-03-25T03:52:38.305Z",
        "updatedAt": "2024-03-25T03:52:38.305Z",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/c9e88fba-e676-42cc-97a1-a947b416d5eb.wav",
        "id": "6600f414558645b7e3729080"
      }
    ],
    "createdAt": "2024-03-25T03:48:37.036Z",
    "updatedAt": "2024-03-25T03:52:38.305Z",
    "id": "9E7SkIi1J"
  },
  {
    "name": "Indecisive corn",
    "_id": "a-5JL8KGM",
    "updatedAt": "2022-10-10T04:48:17.356Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63439feff3e032316cc7e812",
          "63439feff3e032316cc7e811",
          "63439feff3e032316cc7e813"
        ],
        "fileType": "folder",
        "_id": "63439feff3e032316cc7e814",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:48:17.356Z",
        "updatedAt": "2022-10-10T04:48:17.356Z",
        "id": "63439feff3e032316cc7e814"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0\n// The midi notes of a scale\nvar notes = [ 60, 62, 64, 65, 67, 69, 71];\nvar osc;\n// Ball 1\nlet x;\nlet xdir = 1;\nlet y;\nlet ydir = 6;\nlet m = 320;\nlet n = 180;\nlet mspeed = 5;\nlet nspeed = 2;\n\n\nfunction setup() {\n  createCanvas(720, 400);\n  \n  //  A triangle oscillator\n   osc = new p5.TriOsc();\n  // Start silent\n  osc.start();\n  osc.amp(0);\n\n // A function to play a note\nfunction playNote(note, duration) {\n  osc.freq(midiToFreq(note));\n  // Fade it in\n  osc.fade(0.5,0.2);\n\n//   // If we sest a duration, fade it out\n if (duration) {\n   setTimeout(function() {\n     osc.fade(0,0.2);\n    }, duration-50);\n }\n}\n}\n\nfunction draw() {\n  \n   if(state == 0){\n    drawEnter();\n  } else if(state == 1){\n    drawPlay();\n  } \n  \n  function drawEnter() {\n  background(230,202,253);\n  \n  //background\n   rectMode(RADIUS);\nfill(275,275,200);\nrect(350,350,300,300); // Draw white rectangle \n  noStroke(rect)\n  \n   fill(275,400,250);\n  square(100,200,150);\n    \n     // Draw the title - blue\n  fill(50,150,250);\n  textFont('Georgia')\n  textSize(32);\n  textAlign(CENTER);\n  text('Sound Interactive', width/2, height/2);\n   fill(0)\n  textSize(15);\n  text(\"click anywhere\", width / 2, height / 2 + 30);\n    \n     if (mouseIsPressed) {\n     state = 1;\n        }\n        }\n  function drawPlay() {\n     background(255);\n    \n    // The width for each key\n  var w = width / notes.length;\n  for (var i = 0; i < notes.length; i++) {\n    var x = i * w;\n    // If the mouse is over the key\n    if (mouseX > x && mouseX < x + w && mouseY < height) {\n      // If we're clicking\n      if (mouseIsPressed) {\n        fill(200,255,200);\n      // Or just rolling over\n      } else {\n        fill(100,200,300);\n      }\n    } else {\n      fill(300,50,250);\n    }\n\n\n    // Draw the key\n    circle(x, 100, w, height);\n   ellipse(m, n, 50, 50);\n   m += mspeed;\n   n += nspeed;\n   if (m > width - 50 || m < 50) {\n     mspeed = -mspeed;\n   }\n  if (n > height - 50 || n < 50) {\n     nspeed = -nspeed;\n  }\n  }\n\n}\n\n// When we click\nfunction mousePressed() {\n  // Map mouse to the key index\n  var key = floor(map(mouseX, 0, width, 0, notes.length));\n  playNote(notes[key]);\n}\n\n// Fade it out when we release\nfunction mouseReleased() {\n  osc.fade(0,0.5);\n  \n}\n}",
        "children": [],
        "fileType": "file",
        "_id": "63439feff3e032316cc7e811",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T04:48:17.356Z",
        "updatedAt": "2022-10-10T04:48:17.356Z",
        "id": "63439feff3e032316cc7e811"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63439feff3e032316cc7e812",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:48:17.356Z",
        "updatedAt": "2022-10-10T04:48:17.356Z",
        "id": "63439feff3e032316cc7e812"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63439feff3e032316cc7e813",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:48:17.356Z",
        "updatedAt": "2022-10-10T04:48:17.356Z",
        "id": "63439feff3e032316cc7e813"
      }
    ],
    "createdAt": "2022-10-10T04:48:17.356Z",
    "id": "a-5JL8KGM"
  },
  {
    "name": "interface",
    "_id": "FAK45cDb0",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6446838cf5ed09001a4bf3b6",
          "64468427eefc93001a34d567",
          "6446821f1f944064ce830176",
          "6446838c19bf59001ba1ab1f",
          "6446821f1f944064ce830177",
          "6446838cf5ed09001a4bf3bb",
          "6446821f1f944064ce830178",
          "6446838bf5ed09001a4bf3ad",
          "6446838bf5ed09001a4bf3a8"
        ],
        "fileType": "folder",
        "_id": "6446821f1f944064ce830173",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T13:29:49.895Z",
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "id": "6446821f1f944064ce830173"
      },
      {
        "name": "sketch.js",
        "content": "let wandImg, spellbookImg, backgroundImg;\nlet spellData = [\n  {\n    name: 'Lumos',\n    description: 'Creates light at the end of your wand',\n    gesture: 'Swipe up and flick your wand',\n    image: 'lumos.png'\n  },\n  {\n    name: 'Expecto Patronum',\n    description: 'Creates a shield against Dementors',\n    gesture: 'Swipe down and then make a circle with your wand',\n    image: 'expecto_patronum.jpg'\n  },\n  {\n    name: 'Wingardium Leviosa',\n    description: 'Lifts objects into the air',\n    gesture: 'Swish your wand and then point it at the object you want to lift',\n    image: 'wingardium_leviosa.jpg'\n  }\n];\n\nfunction preload() {\n  wandImg = loadImage('wand.png');\n  spellbookImg = loadImage('spellbook.png');\n  backgroundImg = loadImage('hogwarts_background.png');\n  for (let i = 0; i < spellData.length; i++) {\n    spellData[i].image = loadImage(spellData[i].image);\n  }\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  imageMode(CENTER);\n}\n\nfunction draw() {\n  background(backgroundImg);\n  image(spellbookImg, width/2, height/2);\n  let x = width/2 - 200;\n  let y = height/2 - 200;\n  for (let i = 0; i < spellData.length; i++) {\n    let spell = spellData[i];\n    image(spell.image, x, y);\n    textAlign(CENTER);\n    textSize(20);\n    text(spell.name, x, y + 120);\n    textSize(16);\n    text(spell.description, x, y + 150);\n    textSize(14);\n    text(spell.gesture, x, y + 180);\n    x += 200;\n  }\n  image(wandImg, mouseX, mouseY, 100, 100);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6446821f1f944064ce830177",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T13:29:49.895Z",
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "id": "6446821f1f944064ce830177"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6446821f1f944064ce830176",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T13:29:49.895Z",
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "id": "6446821f1f944064ce830176"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6446821f1f944064ce830178",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T13:29:49.895Z",
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "id": "6446821f1f944064ce830178"
      },
      {
        "name": "wingardium_leviosa.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6446838bf5ed09001a4bf3a8",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/8c1bd299-67e1-425f-9645-a51b2e0a09af.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "6446838bf5ed09001a4bf3a8"
      },
      {
        "name": "wand.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6446838bf5ed09001a4bf3ad",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/708f9ff0-ca72-4e9f-9e76-8791c2991e1b.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "6446838bf5ed09001a4bf3ad"
      },
      {
        "name": "expecto_patronum.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6446838cf5ed09001a4bf3b6",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/060a506f-aa58-4a9c-8205-d4007029387d.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "6446838cf5ed09001a4bf3b6"
      },
      {
        "name": "spellbook.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6446838cf5ed09001a4bf3bb",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/d15c5c51-13bd-40a3-81c3-5ba7973d32bc.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "6446838cf5ed09001a4bf3bb"
      },
      {
        "name": "lumos.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6446838c19bf59001ba1ab1f",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/8bc25e4f-c414-485f-bd05-7c80c145cbd4.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "6446838c19bf59001ba1ab1f"
      },
      {
        "name": "hogwarts_background.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64468427eefc93001a34d567",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/a47281aa-ab94-42ea-aa63-1ee48962eb24.png",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T13:29:49.895Z",
        "createdAt": "2023-04-24T13:29:49.895Z",
        "id": "64468427eefc93001a34d567"
      }
    ],
    "createdAt": "2023-04-24T13:20:32.948Z",
    "updatedAt": "2023-04-24T13:29:49.895Z",
    "id": "FAK45cDb0"
  },
  {
    "name": "Invited port",
    "_id": "u8XUoasMd",
    "updatedAt": "2022-10-10T04:22:11.165Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63436ee55a37858d91d89805",
          "63436ee55a37858d91d89804",
          "63436ee55a37858d91d89806"
        ],
        "fileType": "folder",
        "_id": "63436ee55a37858d91d89807",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:22:11.165Z",
        "updatedAt": "2022-10-10T04:22:11.165Z",
        "id": "63436ee55a37858d91d89807"
      },
      {
        "name": "sketch.js",
        "content": "// The midi notes of a scale\nvar notes = [ 60, 62, 64, 65, 67, 69, 71];\nvar osc;\nlet state = 0\n// Ball 1\nlet x;\nlet xdir = 1;\nlet y;\nlet ydir = 6;\nlet m = 320;\nlet n = 180;\nlet mspeed = 5;\nlet nspeed = 2;\n\n\nfunction setup() {\n  createCanvas(720, 400);\n  x = random(width);\n  y = random(height);\n  xdir = random(-4,4);\n  ydir = random(-4,4);\n\n\n//  A triangle oscillator\n   osc = new p5.TriOsc();\n  // Start silent\n  osc.start();\n  osc.amp(0);\n\n // A function to play a note\nfunction playNote(note, duration) {\n  osc.freq(midiToFreq(note));\n  // Fade it in\n  osc.fade(0.5,0.2);\n\n//   // If we sest a duration, fade it out\n if (duration) {\n   setTimeout(function() {\n     osc.fade(0,0.2);\n    }, duration-50);\n  }\n}\n  \n\nfunction draw() {\n  \n  if(state == 0){\n    drawStart();\n  } else if(state == 1){\n    drawPlay();\n  } \n  \nfunction drawStart() {\n  background(230,202,253);\n\n  \n  //background\n   rectMode(RADIUS);\nfill(275,275,200);\nrect(350,350,300,300); // Draw white rectangle \n  noStroke(rect)\n  \n   fill(275,400,250);\n  square(100,200,150);\n  \n  \n  // Draw the title - blue\n  fill(50,150,250);\n  textFont('Georgia')\n  textSize(32);\n  textAlign(CENTER);\n  text('Piano Interactive', width/2, height/2);\n   fill(0)\n  textSize(15);\n  text(\"click anywhere\", width / 2, height / 2 + 30);\n  \n//    //bouncing ball\n//   circle(x,y,60);\n// let c = color(210, 20, 100);\n//   fill(c);\n//   circle(x,y,50);\n//   //x++;\n//   //x = x + xdir;\n//   x += xdir;\n//   y += ydir;\n  \n//    if (x >= width || x <= 0) {\n//     //xdir = xdir * -1;\n//     xdir *= -1;\n//    }\n//      if (y >= height || y <= 0) {\n//     ydir *= -1; }\n       \n        if (mouseIsPressed) {\n     state = 1;\n        }\n      \n}\n  function drawPlay() {\n     background(255);\n     // Draw a keyboard\n    \n\n  // The width for each key\n  var w = width / notes.length;\n  for (var i = 0; i < notes.length; i++) {\n    var x = i * w;\n    // If the mouse is over the key\n    if (mouseX > x && mouseX < x + w && mouseY < height) {\n      // If we're clicking\n      if (mouseIsPressed) {\n        fill(200,255,200);\n      // Or just rolling over\n      } else {\n        fill(100,200,300);\n      }\n    } else {\n      fill(300,50,250);\n    }\n\n\n    // Draw the key\n    circle(x, 100, w, height);\n   ellipse(m, n, 50, 50);\n   m += mspeed;\n   n += nspeed;\n   if (m > width - 50 || m < 50) {\n     mspeed = -mspeed;\n   }\n  if (n > height - 50 || n < 50) {\n     nspeed = -nspeed;\n  }\n  }\n\n}\n\n// When we click\nfunction mousePressed() {\n  // Map mouse to the key index\n  var key = floor(map(mouseX, 0, width, 0, notes.length));\n  playNote(notes[key]);\n}\n\n// Fade it out when we release\nfunction mouseReleased() {\n  osc.fade(0,0.5);\n  \n}\n}\n}",
        "children": [],
        "fileType": "file",
        "_id": "63436ee55a37858d91d89804",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T04:22:11.165Z",
        "updatedAt": "2022-10-10T04:22:11.165Z",
        "id": "63436ee55a37858d91d89804"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63436ee55a37858d91d89805",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:22:11.165Z",
        "updatedAt": "2022-10-10T04:22:11.165Z",
        "id": "63436ee55a37858d91d89805"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63436ee55a37858d91d89806",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:22:11.165Z",
        "updatedAt": "2022-10-10T04:22:11.165Z",
        "id": "63436ee55a37858d91d89806"
      }
    ],
    "createdAt": "2022-10-10T01:44:14.788Z",
    "id": "u8XUoasMd"
  },
  {
    "name": "Light Painter copy",
    "_id": "VshUiDOO8",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445628895f70398d479dcce",
          "6445628895f70398d479dccf",
          "6445628895f70398d479dcd0"
        ],
        "fileType": "folder",
        "_id": "6445628895f70398d479dccd",
        "isSelectedFile": false,
        "updatedAt": "2023-04-23T17:03:10.879Z",
        "createdAt": "2023-04-23T17:03:10.879Z",
        "id": "6445628895f70398d479dccd"
      },
      {
        "name": "sketch.js",
        "content": "let capture, pos;\nlet threshold = 20;\n\nfunction setup() {\n  createCanvas(640,480);\n  \n  capture = createCapture({\n    video: {\n      facingMode: \"environment\",\n      maxWidth: width,\n      maxHeight: height\n    },\n  });\n  capture.size(width, height);\n  videoBuffer = createGraphics(capture.width, capture.height);\n  capture.hide();\n  background(0,0,0,255);\n}\n\nfunction draw() {\n  videoBuffer.image(capture, 0, 0, width, width * capture.height / capture.width);\n  videoBuffer.loadPixels();\n  loadPixels();\n  \n  for (let y = 0; y < height; y+=1) {\n    for (let x = 0; x < width; x+=1) {\n      let pos = (width*y+x)*4;\n      let r = videoBuffer.pixels[pos];\n      let g = videoBuffer.pixels[pos+1];\n      let b = videoBuffer.pixels[pos+2];\n      let brightness = (r+g+b)/3; // calculate brightness\n      \n      // check if the pixel is above the threshold\n      if (brightness > threshold) {\n        pixels[pos+0] = (videoBuffer.pixels[pos+0] > pixels[pos+0]) ? videoBuffer.pixels[pos+0] : pixels[pos+0];\n        pixels[pos+1] = (videoBuffer.pixels[pos+1] > pixels[pos+1]) ? videoBuffer.pixels[pos+1] : pixels[pos+1];\n        pixels[pos+2] = (videoBuffer.pixels[pos+2] > pixels[pos+2]) ? videoBuffer.pixels[pos+2] : pixels[pos+2];\n      }\n    }\n  }\n  updatePixels();\n}\n\nfunction mousePressed(){\n save(\"lightpainter.png\"); \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445628895f70398d479dccf",
        "updatedAt": "2023-04-23T17:03:10.879Z",
        "createdAt": "2023-04-23T17:03:10.879Z",
        "isSelectedFile": true,
        "id": "6445628895f70398d479dccf"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n    <p style=\"position:absolute;bottom:5px;left:5px;\">Click to save. More at <a href=\"https://publiclab.org/lightpainter\">Public Lab</a>. Inspired by <a href=\"https://glowdoodle.com\">GlowDoodle</a>.</p>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445628895f70398d479dcce",
        "isSelectedFile": false,
        "updatedAt": "2023-04-23T17:03:10.879Z",
        "createdAt": "2023-04-23T17:03:10.879Z",
        "id": "6445628895f70398d479dcce"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445628895f70398d479dcd0",
        "isSelectedFile": false,
        "updatedAt": "2023-04-23T17:03:10.879Z",
        "createdAt": "2023-04-23T17:03:10.879Z",
        "id": "6445628895f70398d479dcd0"
      }
    ],
    "createdAt": "2023-04-23T16:53:28.807Z",
    "updatedAt": "2023-04-23T17:03:10.879Z",
    "id": "VshUiDOO8"
  },
  {
    "name": "Literate caper",
    "_id": "DH4dbUGoZ",
    "updatedAt": "2022-10-03T19:22:28.678Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63392a76120eb5c23660ed06",
          "63392a76120eb5c23660ed05",
          "63392a76120eb5c23660ed07"
        ],
        "fileType": "folder",
        "_id": "63392a76120eb5c23660ed08",
        "isSelectedFile": false,
        "createdAt": "2022-10-03T19:22:28.678Z",
        "updatedAt": "2022-10-03T19:22:28.678Z",
        "id": "63392a76120eb5c23660ed08"
      },
      {
        "name": "sketch.js",
        "content": "let mouth = 6\nlet eye = 9\nlet angle = 0\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction mousePressed() {\n  if (mouth < 50 && eye > 5) {\n    mouth += 1;\n    eye -= 1;\n  }\n}\n\nfunction eyes(x,y,w,h) {\nellipse(x, y, w, h);\n}\n\nfunction draw() {\n  background(230,202,253);\n  \n  //background\n   rectMode(RADIUS);\nfill(275,275,200);\nrect(350,350,300,300); // Draw white rectangle \n  noStroke(rect)\n  \n   fill(275,400,250);\n  square(100,200,150);\n  \n   //hair\n  \n  fill(102, 51, 0);\n  rect(200, 215, 85, 130, 75, 75, 0, 0);\n  \n   //neck\n  fill(240, 210, 200);\n  rect(201, 298, 30, 35, 0, 0, 30, 30);\n  \n  //face\n  fill(253, 234, 221)\n   ellipse(200,200,125,160);\n  \n  //hair part 2\n  fill(102, 51, 0);\n   arc(140, 118, 125, 115, 0, PI / 2);\n  \n    //ears\n  fill(240, 210, 200);\n  ellipse(133, 210, 15, 30);\n  ellipse(268, 210, 15, 30);\n  \n  //nose\n  ellipse(200, 210, 15, 30);\n  \n  //eyes\n  ellipseMode(RADIUS);\nfill(255);\neyes(165, 200, 10, eye); // Outer white ellipse\nellipseMode(CENTER);\nfill(100);\nellipse(165, 200, 10, eye); // Inner gray ellipse\n  \n  ellipseMode(RADIUS);\nfill(255);\nellipse(235, 200, 10, eye); // Outer white ellipse\nellipseMode(CENTER);\nfill(100);\nellipse(235, 200, 10, eye); // Inner gray ellipse\n  \n  //eyebrows\n      arc(235, 180, 17, 7, PI, 0);\n  arc(165, 180, 17, 7, PI, 0);\n  \n  //mouth\n  fill(90, 20, 10);\n arc(201, 245, 25, mouth, 0, PI);\n  \n    //cheek\n  fill(235, 175, 168, 180);\n  circle(150, 225, 25);\n  circle(250, 225, 25);\n  \n  //earring\n  fill(255)\n  ellipse(270, 226, 6, 8); \n  ellipse(133, 227, 6, 8); \n}",
        "children": [],
        "fileType": "file",
        "_id": "63392a76120eb5c23660ed05",
        "isSelectedFile": true,
        "createdAt": "2022-10-03T19:22:28.678Z",
        "updatedAt": "2022-10-03T19:22:28.678Z",
        "id": "63392a76120eb5c23660ed05"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63392a76120eb5c23660ed06",
        "isSelectedFile": false,
        "createdAt": "2022-10-03T19:22:28.678Z",
        "updatedAt": "2022-10-03T19:22:28.678Z",
        "id": "63392a76120eb5c23660ed06"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63392a76120eb5c23660ed07",
        "isSelectedFile": false,
        "createdAt": "2022-10-03T19:22:28.678Z",
        "updatedAt": "2022-10-03T19:22:28.678Z",
        "id": "63392a76120eb5c23660ed07"
      }
    ],
    "createdAt": "2022-10-02T14:52:16.491Z",
    "id": "DH4dbUGoZ"
  },
  {
    "name": "Marble penalty",
    "_id": "AXKOG0zv_",
    "updatedAt": "2022-09-28T19:01:02.431Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6334907e889f22a4aaa36d55",
          "6334907e889f22a4aaa36d54",
          "6334907e889f22a4aaa36d56"
        ],
        "fileType": "folder",
        "_id": "6334907e889f22a4aaa36d57",
        "isSelectedFile": false,
        "createdAt": "2022-09-28T19:01:02.431Z",
        "updatedAt": "2022-09-28T19:01:02.431Z",
        "id": "6334907e889f22a4aaa36d57"
      },
      {
        "name": "sketch.js",
        "content": "// Ball 1\nlet x;\nlet xdir = 1;\nlet y;\nlet ydir = 6;\n\n// Ball 2\nlet x2;\nlet xdir2 = 1;\nlet y2;\nlet ydir2 = 6;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  x = random(width);\n  y = random(height);\n  xdir = random(-4,4);\n  ydir = random(-4,4);\n  \n  x2 = random(width);\n  y2 = random(height);\n  xdir2 = random(-4,4);\n  ydir2 = random(-4,4);\n}\n\nfunction draw() {\n  background(220);\n  \n  circle(x,y,50);\nlet c = color(255, 204, 0);\n  fill(c);\n  circle(x2,y2,75);\n  //x++;\n  //x = x + xdir;\n  x += xdir;\n  y += ydir;\n  \n    x2 += xdir2;\n  y2 += ydir2;\n  \n  // if (x >= width) {\n  //  xdir = -1; \n  // } else if (x <= 0) {\n  //   xdir = 1;\n  // }\n  \n  if (x >= width || x <= 0) {\n    //xdir = xdir * -1;\n    xdir *= -1;\n  }\n  \n  if (x2 >= width || x2 <= 0) {\n    //xdir = xdir * -1;\n    xdir2 *= -1;\n  }\n  \n  // if (y >= height) {\n  //  ydir = -6; \n  // } else if (y <= 0) {\n  //   ydir = 6;\n  // }\n  \n  if (y >= height || y <= 0) {\n    ydir *= -1;\n  }\n  \n  if (y2 >= height || y2 <= 0) {\n    ydir2 *= -1;\n  }\n  \n  // Collision Detection \n  if (dist(x,y,x2,y2) < 62){\n    xdir = xdir * -1;\n    xdir2 = xdir2 * -1;\n    ydir = ydir * -1;\n    ydir2 = ydir2 * -1;\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6334907e889f22a4aaa36d54",
        "isSelectedFile": true,
        "createdAt": "2022-09-28T19:01:02.431Z",
        "updatedAt": "2022-09-28T19:01:02.431Z",
        "id": "6334907e889f22a4aaa36d54"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6334907e889f22a4aaa36d55",
        "isSelectedFile": false,
        "createdAt": "2022-09-28T19:01:02.431Z",
        "updatedAt": "2022-09-28T19:01:02.431Z",
        "id": "6334907e889f22a4aaa36d55"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6334907e889f22a4aaa36d56",
        "isSelectedFile": false,
        "createdAt": "2022-09-28T19:01:02.431Z",
        "updatedAt": "2022-09-28T19:01:02.431Z",
        "id": "6334907e889f22a4aaa36d56"
      }
    ],
    "createdAt": "2022-09-28T19:01:02.431Z",
    "id": "AXKOG0zv_"
  },
  {
    "name": "Organize copy",
    "_id": "pMaC-bwop",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6390f2239aa08588dff39939",
          "6390f2239aa08588dff3993a",
          "6390f2239aa08588dff3993b"
        ],
        "fileType": "folder",
        "_id": "6390f2239aa08588dff39938",
        "createdAt": "2022-10-09T14:30:18.647Z",
        "updatedAt": "2022-10-09T14:30:18.647Z",
        "isSelectedFile": false,
        "id": "6390f2239aa08588dff39938"
      },
      {
        "name": "sketch.js",
        "content": "var screen = 0;\nvar y = -20;\nvar x = 200;\nvar speed = 2;\nvar score = 0;\nlet timer = 90;\n\nfunction setup() {\n  createCanvas(600, 400);\n}\n\nfunction draw() {\n  if (screen == 0) {\n    startScreen();\n  } else if (screen == 1) {\n    playScreen();\n  } else if (screen == 2) {\n    endScreen();\n  }\n}\n\nfunction startScreen() {\n  background(240, 215, 250);\n\n  //Two rows of colored balls\n  strokeWeight(2);\n  stroke(255);\n  for (var x = 0; x <= width; x += 50) {\n    fill(random(255), random(255), random(255));\n    ellipse(x, 40, 25, 25);\n    ellipse(x, 360, 25, 25);\n  }\n\n  //word\n  noStroke();\n  fill(0);\n  textAlign(CENTER);\n  textSize(33);\n  textStyle(BOLD);\n  text(\"!!! Monster Eating Game !!!\", width / 2, height / 2);\n  textSize(16);\n  textStyle(NORMAL);\n  text(\"click to start\", width / 2, height / 2 + 50);\n  fill(255);\n\n  //When the game restarts Initialize the operation\n  reset();\n}\n\nfunction playScreen() {\n  background(0);\n\n  //Countdown\n  textSize(16);\n  text(timer, width / 2 + 40, 47);\n  textSize(16);\n  text(\"Time remaining：\", width / 2 - 40, 47);\n  if (frameCount % 60 == 0 && timer > 0) {\n    timer--;\n  }\n  \n      if(timer==0){\n       endScreen();\n    }\n\n  //score\n  textSize(16);\n  textStyle(NORMAL);\n  text(\"score = \" + score, 68, 47);\n\n  //Ball first drop location\n  ellipse(x, y, 20, 20);\n\n  //Little Monsters\n  strokeWeight();\n  stroke(0);\n  fill(250, 0, 0);\n  arc(mouseX, height - 10, 80, 60, 100, PI + QUARTER_PI, PIE);\n  fill(255);\n  circle(mouseX - 22, height - 16, 15);\n  fill(0);\n  circle(mouseX - 22, height - 19, 10);\n\n    fill(255);\n  noStroke();\n  \nbezier(mouseX, height-10, mouseX+15, height-60, mouseX+30, height-45, mouseX+20, height-35);\n  \n   fill(255);\n  noStroke();\n  \n  //The ball is lower than the position where it was eaten and it is considered a failure\n  y += speed;\n  if (y > height) {\n    screen = 2;\n  }\n\n  //If the ball is caught,\n  if (y > height - 10 && x > mouseX - 30 && x < mouseX + 30) {\n    y = -20;\n    speed += 0.5;\n    score += 1;\n  }\n\n  //select the location where the next ball appears\n  if (y == -20) {\n    nextRandom();\n  }\n}\n//Next ball limit\nfunction nextRandom() {\n  x = random(20, width - 20);\n}\n\nfunction endScreen() {\n  background(192, 192, 192);\n  fill(0);\n  textAlign(CENTER);\n  textSize(35);\n  textStyle(BOLD);\n  text(\"GAME OVER\", width / 2, height / 2 - 30);\n  textSize(19);\n  textStyle(BOLD);\n  text(\"SCORE = \" + score, width / 2, height / 2 + 10);\n  textSize(14);\n  textStyle(NORMAL);\n  text(\"click to play again\", width / 2, height / 2 + 45);\n}\n\nfunction mousePressed() {\n  if (screen == 0) {\n    screen = 1;\n  } else if (screen == 2) {\n    screen = 0;\n  }\n}\n\nfunction reset() {\n  score = 0;\n  speed = 2;\n  y = -20;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6390f2239aa08588dff3993a",
        "isSelectedFile": true,
        "createdAt": "2022-10-09T14:30:18.647Z",
        "updatedAt": "2022-10-09T14:30:18.647Z",
        "id": "6390f2239aa08588dff3993a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6390f2239aa08588dff39939",
        "createdAt": "2022-10-09T14:30:18.647Z",
        "updatedAt": "2022-10-09T14:30:18.647Z",
        "isSelectedFile": false,
        "id": "6390f2239aa08588dff39939"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6390f2239aa08588dff3993b",
        "createdAt": "2022-10-09T14:30:18.647Z",
        "updatedAt": "2022-10-09T14:30:18.647Z",
        "isSelectedFile": false,
        "id": "6390f2239aa08588dff3993b"
      }
    ],
    "createdAt": "2022-12-07T20:05:55.471Z",
    "updatedAt": "2022-12-07T20:05:55.471Z",
    "id": "pMaC-bwop"
  },
  {
    "name": "Phase flea",
    "_id": "ITnDZZxcV",
    "updatedAt": "2022-10-17T19:25:03.439Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634da77be18d191ba6f93f1a",
          "634da77be18d191ba6f93f19",
          "634da77be18d191ba6f93f1b"
        ],
        "fileType": "folder",
        "_id": "634da77be18d191ba6f93f1c",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:25:03.439Z",
        "updatedAt": "2022-10-17T19:25:03.439Z",
        "id": "634da77be18d191ba6f93f1c"
      },
      {
        "name": "sketch.js",
        "content": "let r = 0;\nlet g = 100;\nlet b = 50;\n\nlet history = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(r,g,b);\n  r++;\n  if (r > 200){ r = 0; }\n  let mpos = {x: mouseX,\n                 y: mouseY};\n  \n  if (mouseIsPressed === true) {\n      history.push(mpos);\n  if (history.length > 500) {\n    history.shift();\n  }\n  for (let i = 0; i < history.length; i++) {\n    ellipse(history[i].x,history[i].y,10,10);\n    history[i].y++\n  }\n  ellipse(mouseX,mouseY,10,10);\n  }\n    \n  \n  // history.push(mpos);\n  // if (history.length > 500) {\n  //   history.shift();\n  // }\n  // for (let i = 0; i < history.length; i++) {\n  //   ellipse(history[i].x,history[i].y,10,10);\n  //   history[i].y++\n  // }\n  // ellipse(mouseX,mouseY,10,10);\n}",
        "children": [],
        "fileType": "file",
        "_id": "634da77be18d191ba6f93f19",
        "isSelectedFile": true,
        "createdAt": "2022-10-17T19:25:03.439Z",
        "updatedAt": "2022-10-17T19:25:03.439Z",
        "id": "634da77be18d191ba6f93f19"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634da77be18d191ba6f93f1a",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:25:03.439Z",
        "updatedAt": "2022-10-17T19:25:03.439Z",
        "id": "634da77be18d191ba6f93f1a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634da77be18d191ba6f93f1b",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:25:03.439Z",
        "updatedAt": "2022-10-17T19:25:03.439Z",
        "id": "634da77be18d191ba6f93f1b"
      }
    ],
    "createdAt": "2022-10-17T19:25:03.439Z",
    "id": "ITnDZZxcV"
  },
  {
    "name": "PoseNet_webcam copy",
    "_id": "75VjbKW3D",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63729d717a34f97a248f99bc",
          "63729d717a34f97a248f99bd"
        ],
        "fileType": "folder",
        "_id": "63729d717a34f97a248f99bb",
        "createdAt": "2022-11-14T19:54:55.582Z",
        "updatedAt": "2022-11-14T19:54:55.582Z",
        "isSelectedFile": false,
        "id": "63729d717a34f97a248f99bb"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>PoseNet example using p5.js</title>\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n  \n</head>\n\n<body>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "63729d717a34f97a248f99bc",
        "createdAt": "2022-11-14T19:54:55.582Z",
        "updatedAt": "2022-11-14T19:54:55.582Z",
        "isSelectedFile": false,
        "id": "63729d717a34f97a248f99bc"
      },
      {
        "name": "sketch.js",
        "content": "// Copyright (c) 2019 ml5\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n/* ===\nml5 Example\nPoseNet example using p5.js\n=== */\n\nlet video;\nlet poseNet;\nlet poses = [];\n\nlet x = 0;\nlet y = 0;\n\nlet drawing = [];\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.size(width, height);\n\n  // Create a new poseNet method with a single detection\n  poseNet = ml5.poseNet(video, modelReady);\n  // This sets up an event that fills the global variable \"poses\"\n  // with an array every time new poses are detected\n  poseNet.on('pose', function(results) {\n    poses = results;\n    //print(poses);\n\n    if (poses.length > 0) {\n      // if (poses[0].pose.leftEar.confidence < 0.5) {\n        //drawing.push({x: poses[0].pose.nose.x, y: poses[0].pose.nose.y});\n        x = poses[0].pose.nose.x;\n        y = poses[0].pose.nose.y;\n        //ellipse(poses[0].pose.nose.x, poses[0].pose.nose.y, 20);  \n      // }\n    }\n    //print(poses);\n  });\n  // Hide the video element, and just show the canvas\n  video.hide();\n  \n  fill(200,0,0);\n  noStroke();\n}\n\nfunction modelReady() {\n  print(\"Model Ready\");\n  //select('#status').html('Model Loaded');\n}\n\nfunction draw() {\n  image(video, 0, 0, width, height);\n  \n  // for (let i = 0; i < drawing.length; i++) {\n  //   ellipse(drawing[i].x, drawing[i].y, 20);  \n  // }\n  \n  ellipse(x,y,40,40);\n  \n  // We can call both functions to draw all keypoints and the skeletons\n  //drawKeypoints();\n  //drawSkeleton();\n}\n\n// A function to draw ellipses over the detected keypoints\nfunction drawKeypoints()  {\n  // Loop through all the poses detected\n  for (let i = 0; i < poses.length; i++) {\n    // For each pose detected, loop through all the keypoints\n    let pose = poses[i].pose;\n    for (let j = 0; j < pose.keypoints.length; j++) {\n      // A keypoint is an object describing a body part (like rightArm or leftShoulder)\n      let keypoint = pose.keypoints[j];\n      // Only draw an ellipse is the pose probability is bigger than 0.2\n      if (keypoint.score > 0.2) {\n        fill(255, 0, 0);\n        noStroke();\n        ellipse(keypoint.position.x, keypoint.position.y, 10, 10);\n      }\n    }\n  }\n}\n\n// A function to draw the skeletons\nfunction drawSkeleton() {\n  // Loop through all the skeletons detected\n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    // For every skeleton, loop through all body connections\n    for (let j = 0; j < skeleton.length; j++) {\n      let partA = skeleton[j][0];\n      let partB = skeleton[j][1];\n      stroke(255, 0, 0);\n      line(partA.position.x, partA.position.y, partB.position.x, partB.position.y);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63729d717a34f97a248f99bd",
        "isSelectedFile": true,
        "createdAt": "2022-11-14T19:54:55.582Z",
        "updatedAt": "2022-11-14T19:54:55.582Z",
        "id": "63729d717a34f97a248f99bd"
      }
    ],
    "createdAt": "2022-11-14T19:56:33.066Z",
    "updatedAt": "2022-11-14T19:56:33.066Z",
    "id": "75VjbKW3D"
  },
  {
    "name": "practice",
    "_id": "y4aswgE8R",
    "updatedAt": "2023-04-21T14:31:50.987Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "64429aa13eff20032d98c859",
          "64429aa13eff20032d98c858",
          "64429aa13eff20032d98c85a"
        ],
        "fileType": "folder",
        "_id": "64429aa13eff20032d98c85b",
        "isSelectedFile": false,
        "createdAt": "2023-04-21T14:31:50.987Z",
        "updatedAt": "2023-04-21T14:31:50.987Z",
        "id": "64429aa13eff20032d98c85b"
      },
      {
        "name": "sketch.js",
        "content": "let capture, pos;\n\nfunction setup() {\n  createCanvas(640,480);\n  //createCanvas(window.innerWidth/2, window.innerWidth/2 * (3/4));\n  capture = createCapture({\n    video: {\n      facingMode: \"environment\",\n      maxWidth: width,\n      maxHeight: height\n    },\n  });\n  capture.size(width, height);\n  videoBuffer = createGraphics(capture.width, capture.height); // a second canvas to read our video pixels from without using the main canvas\n  capture.hide(); // comment this out to see live video feed\n  background(0,0,0,255);\n}\n\nfunction draw() {\n  videoBuffer.image(capture, 0, 0, width, width * capture.height / capture.width);\n  videoBuffer.loadPixels();\n  loadPixels();\n  // this could be made more efficient, perhaps?:\n  for (let y = 0; y < height; y+=1) {\n    for (let x = 0; x < width; x+=1) {\n      pos = (width*y+x)*4;\n      pixels[pos+0] = (videoBuffer.pixels[pos+0] > pixels[pos+0]) ? videoBuffer.pixels[pos+0] : pixels[pos+0];\n      pixels[pos+1] = (videoBuffer.pixels[pos+1] > pixels[pos+1]) ? videoBuffer.pixels[pos+1] : pixels[pos+1];\n      pixels[pos+2] = (videoBuffer.pixels[pos+2] > pixels[pos+2]) ? videoBuffer.pixels[pos+2] : pixels[pos+2];\n    }\n  }\n  updatePixels();\n}\n\n\nfunction mousePressed(){\n save(\"lightpainter.png\"); \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429aa13eff20032d98c858",
        "isSelectedFile": true,
        "createdAt": "2023-04-21T14:31:50.987Z",
        "updatedAt": "2023-04-21T14:31:50.987Z",
        "id": "64429aa13eff20032d98c858"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "64429aa13eff20032d98c859",
        "isSelectedFile": false,
        "createdAt": "2023-04-21T14:31:50.987Z",
        "updatedAt": "2023-04-21T14:31:50.987Z",
        "id": "64429aa13eff20032d98c859"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "64429aa13eff20032d98c85a",
        "isSelectedFile": false,
        "createdAt": "2023-04-21T14:31:50.987Z",
        "updatedAt": "2023-04-21T14:31:50.987Z",
        "id": "64429aa13eff20032d98c85a"
      }
    ],
    "createdAt": "2023-04-21T14:31:50.987Z",
    "id": "y4aswgE8R"
  },
  {
    "name": "Shawn No Shawn copy",
    "_id": "Iu-sD3ERn",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63729d37c56e3a457e1f8acb",
          "63729d37c56e3a457e1f8acc"
        ],
        "fileType": "folder",
        "_id": "63729d37c56e3a457e1f8aca",
        "createdAt": "2022-11-14T19:33:27.020Z",
        "updatedAt": "2022-11-14T19:33:27.020Z",
        "isSelectedFile": false,
        "id": "63729d37c56e3a457e1f8aca"
      },
      {
        "name": "index.html",
        "content": "<html>\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Webcam Image Classification using a pre-trained customized model and p5.js</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n  <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\" type=\"text/javascript\"></script>\n</head>\n\n<body>\n  <h1>Teachable Machine</h1>\n  <p>This is a demonstration of image classification using a model trained with Google's Teachable\n    Machine project. If you cover the camera, this model will classify the image as \"nighttime,\" otherwise will classify\n    anything else as \"daytime.\" </p>\n  <script src=\"sketch.js\"></script>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "63729d37c56e3a457e1f8acb",
        "createdAt": "2022-11-14T19:33:27.020Z",
        "updatedAt": "2022-11-14T19:33:27.020Z",
        "isSelectedFile": false,
        "id": "63729d37c56e3a457e1f8acb"
      },
      {
        "name": "sketch.js",
        "content": "// Copyright (c) 2019 ml5\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n/* ===\nml5 Example\nWebcam Image Classification using a pre-trained customized model and p5.js\nThis example uses p5 preload function to create the classifier\n=== */\n\n// Classifier Variable\nlet classifier;\n// Model URL\nlet imageModelURL = 'https://teachablemachine.withgoogle.com/models/NIkOkw2kz/';\n\n// Video\nlet video;\nlet flippedVideo;\n// To store the classification\nlet label = \"\";\n\n// Load the model first\nfunction preload() {\n  classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n}\n\nfunction setup() {\n  createCanvas(320, 260);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(320, 240);\n  video.hide();\n\n  flippedVideo = ml5.flipImage(video)\n  // Start classifying\n  classifyVideo();\n}\n\nfunction draw() {\n  background(0);\n  // Draw the video\n  //image(flippedVideo, 0, 0);\n\n  // Draw the label\n  fill(255);\n  textSize(16);\n  textAlign(CENTER);\n  let output = \"\";\n  if (label == \"Shawn\") {\n    output = \"Well, Hello Shawn, Nice to see you again!\";\n  } else {\n    output = \"Hey..  Where is Shawn, I need him here!\";\n  }\n    \n    text(output, width / 2, height/2 - 4);\n}\n\n// Get a prediction for the current video frame\nfunction classifyVideo() {\n  flippedVideo = ml5.flipImage(video)\n  classifier.classify(flippedVideo, gotResult);\n}\n\n// When we get a result\nfunction gotResult(error, results) {\n  // If there is an error\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // The results are in an array ordered by confidence.\n  // console.log(results[0]);\n  label = results[0].label;\n  // Classifiy again!\n  classifyVideo();\n}",
        "children": [],
        "fileType": "file",
        "_id": "63729d37c56e3a457e1f8acc",
        "isSelectedFile": true,
        "createdAt": "2022-11-14T19:33:27.020Z",
        "updatedAt": "2022-11-14T19:33:27.020Z",
        "id": "63729d37c56e3a457e1f8acc"
      }
    ],
    "createdAt": "2022-11-14T19:55:35.146Z",
    "updatedAt": "2022-11-14T19:55:35.146Z",
    "id": "Iu-sD3ERn"
  },
  {
    "name": "Simple WebSerial copy",
    "_id": "76r4pncg7",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634701e641ec087d6290a709",
          "634701e641ec087d6290a70a",
          "634701e641ec087d6290a70b",
          "634701e641ec087d6290a70c"
        ],
        "fileType": "folder",
        "_id": "634701e641ec087d6290a708",
        "isSelectedFile": false,
        "createdAt": "2022-10-11T16:07:21.380Z",
        "updatedAt": "2022-10-11T16:07:21.380Z",
        "id": "634701e641ec087d6290a708"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial Library:\nhttps://github.com/yoonbuck/p5.WebSerial/wiki/Guide\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\n\n// Color of the circle\nlet circleColor = 255;\n\nfunction setup() {\n  createCanvas(400,400);\n  \n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  \n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  // check for any ports that are available:\n  serial.getPorts();\n\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n \n  background(0); \n  fill(circleColor); \n  ellipse(50, 50, 50, 50);\n}\n\n/////////////////////////////\n// SEND AND RECEIVE DATA  ///\n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  \n  if (inString){ \n    circleColor = int(map(inString, 0,1023, 0, 255));\n    serial.write(\"x\"); \n  }\n}\n\n\n////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTION  ///\n////////////////////////////////////////////\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "634701e641ec087d6290a70b",
        "isSelectedFile": false,
        "createdAt": "2022-10-11T16:07:21.380Z",
        "updatedAt": "2022-10-11T16:07:21.380Z",
        "id": "634701e641ec087d6290a70b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634701e641ec087d6290a70a",
        "isSelectedFile": false,
        "createdAt": "2022-10-11T16:07:21.380Z",
        "updatedAt": "2022-10-11T16:07:21.380Z",
        "id": "634701e641ec087d6290a70a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634701e641ec087d6290a70c",
        "isSelectedFile": false,
        "createdAt": "2022-10-11T16:07:21.380Z",
        "updatedAt": "2022-10-11T16:07:21.380Z",
        "id": "634701e641ec087d6290a70c"
      },
      {
        "name": "arduino_sketch.txt",
        "content": "void setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  int potval = analogRead(A0);\n\n  if (Serial.available() > 0) {\n    int incoming = Serial.read();\n    Serial.println(potval);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634701e641ec087d6290a709",
        "isSelectedFile": true,
        "updatedAt": "2022-10-11T16:07:21.380Z",
        "createdAt": "2022-10-11T16:07:21.380Z",
        "id": "634701e641ec087d6290a709"
      }
    ],
    "createdAt": "2022-10-12T18:05:27.700Z",
    "updatedAt": "2022-10-12T18:05:27.700Z",
    "id": "76r4pncg7"
  },
  {
    "name": "Simple WebSerial copy copy",
    "_id": "XxJIYABwI",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63470f4e9e5045db4b5ea14d",
          "63470f4e9e5045db4b5ea14e",
          "63470f4e9e5045db4b5ea14f",
          "63470f4e9e5045db4b5ea150"
        ],
        "fileType": "folder",
        "_id": "63470f4e9e5045db4b5ea14c",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:32:52.355Z",
        "updatedAt": "2022-10-12T19:32:52.355Z",
        "id": "63470f4e9e5045db4b5ea14c"
      },
      {
        "name": "sketch.js",
        "content": "/*\nSerial Library:\nhttps://github.com/yoonbuck/p5.WebSerial/wiki/Guide\n*/\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\n\n// Color of the circle\nlet circleColor = 255;\nlet circleX = 10;\n\nfunction setup() {\n  createCanvas(400,400);\n  \n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  \n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  // check for any ports that are available:\n  serial.getPorts();\n\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n////////////\n// DRAW  ///\n////////////\nfunction draw() {\n \n  background(0); \n  fill(circleColor); \n  ellipse(circleX, 50, 50, 50);\n}\n\n/////////////////////////////\n// SEND AND RECEIVE DATA  ///\n/////////////////////////////\n\nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  \n  if (inString) {\n    let values = split(inString, ',');\n\n    if (values.length > 1){ \n      circleColor = int(map(values[0], 0,1023, 0, 255));\n      circleX = int(map(values[1], 0,1023, 0, 400));\n\n      serial.write(\"x\"); \n    }\n  }\n}\n\n\n////////////////////////////////////////////\n// UTILITY FUNCTIONS TO MAKE CONNECTION  ///\n////////////////////////////////////////////\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\n",
        "children": [],
        "fileType": "file",
        "_id": "63470f4e9e5045db4b5ea14f",
        "isSelectedFile": true,
        "createdAt": "2022-10-12T19:32:52.355Z",
        "updatedAt": "2022-10-12T19:32:52.355Z",
        "id": "63470f4e9e5045db4b5ea14f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n    \n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n  \n  \n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63470f4e9e5045db4b5ea14e",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:32:52.355Z",
        "updatedAt": "2022-10-12T19:32:52.355Z",
        "id": "63470f4e9e5045db4b5ea14e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63470f4e9e5045db4b5ea150",
        "isSelectedFile": false,
        "createdAt": "2022-10-12T19:32:52.355Z",
        "updatedAt": "2022-10-12T19:32:52.355Z",
        "id": "63470f4e9e5045db4b5ea150"
      },
      {
        "name": "arduino_sketch.txt",
        "content": "void setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  int potval = analogRead(A0);\n  int fsrval = analogRead(A1);\n\n  if (Serial.available() > 0) {\n    int incoming = Serial.read();\n    Serial.println(fsrval);\n    Serial.print(\",\");\n    Serial.println(potval);\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "63470f4e9e5045db4b5ea14d",
        "isSelectedFile": false,
        "updatedAt": "2022-10-12T19:32:52.355Z",
        "createdAt": "2022-10-12T19:32:52.355Z",
        "id": "63470f4e9e5045db4b5ea14d"
      }
    ],
    "createdAt": "2022-10-12T19:02:39.141Z",
    "updatedAt": "2022-10-12T19:32:52.355Z",
    "id": "XxJIYABwI"
  },
  {
    "name": "Slytherin Final Spell",
    "_id": "JpDs89NoE",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "645266f7daacf22ef92b9f16",
          "645266f7daacf22ef92b9f17",
          "645266f7daacf22ef92b9f18",
          "6452713d78e59c001aa54c0e",
          "645266f7daacf22ef92b9f19",
          "645266f7daacf22ef92b9f1a",
          "645266f7daacf22ef92b9f1b",
          "645266f7daacf22ef92b9f1c"
        ],
        "fileType": "folder",
        "_id": "645266f7daacf22ef92b9f15",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T20:41:21.699Z",
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f15"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound1;\nlet spellSound2;\n\n// load the spell sound files in preload\nfunction preload() {\n  spellSound1 = loadSound('expelliarmus.mp3');\n  console.log('expelliarmus.mp3 loaded');\n  spellSound2 = loadSound('avadakedavra.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // startWebserial();\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound and light up the LED when the trail length is greater than a threshold and the movement is correct\n    if (trail.length > 20 && checkMovement(trail, \"right and down\")) {\n      spellSound1.play();\n      // serial.write('R'); // turn on the green LED\n    } else if (trail.length > 20 && checkMovement(trail, \"stab\")) {\n      spellSound2.play();\n      // serial.write('G'); // turn on the red LED\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is correct\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the correct range for the spell movement\n  if (movement === \"right and down\") {\n    if (angle > PI/4 && angle < 3*PI/4) {\n      return true;\n    } else {\n      return false;\n    }\n  } else if (movement === \"stab\") {\n    if (angle > 0 && angle < PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f1a",
        "isSelectedFile": true,
        "createdAt": "2023-05-03T20:41:21.699Z",
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f1a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n\t\n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n<!--     <script src=\"webserial.js\"></script> -->\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f19",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T20:41:21.699Z",
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f19"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f1b",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T20:41:21.699Z",
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f1b"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f16",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/fbd22f9b-1147-40bb-8629-35c79cc28627.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "createdAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f16"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f18",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/c45c55a2-8648-469a-be51-864bd56d7402.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "createdAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f18"
      },
      {
        "name": "webserial.js",
        "content": "const serial = new p5.WebSerial();\n// HTML button object:\nlet portButton;\nlet inData;                            // for incoming serial data\nlet outByte = 0; \n\nfunction startWebserial(){\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n \n}\n\n\n\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// read any incoming data as a byte:\nfunction serialEvent() {\n  // read a byte from the serial port:\n  var inByte = serial.read();\n  // store it in a global variable:\n  inData = inByte;\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f1c",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "createdAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f1c"
      },
      {
        "name": "avadakedavra.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "645266f7daacf22ef92b9f17",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/76e4cbea-7518-4a00-ac85-78e255bffcf4.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "createdAt": "2023-05-03T20:41:21.699Z",
        "id": "645266f7daacf22ef92b9f17"
      },
      {
        "name": "expelliarmus.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6452713d78e59c001aa54c0e",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/498dc96a-79bf-4ea5-ac51-6c855a82b5bc.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T20:41:21.699Z",
        "createdAt": "2023-05-03T20:41:21.699Z",
        "id": "6452713d78e59c001aa54c0e"
      }
    ],
    "createdAt": "2023-05-03T13:51:52.483Z",
    "updatedAt": "2023-05-03T20:41:21.699Z",
    "id": "JpDs89NoE"
  },
  {
    "name": "speech recognition",
    "_id": "XERypUoiZ",
    "updatedAt": "2023-03-04T18:43:07.556Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6402d6726a368452abe74094",
          "6402d6726a368452abe74093",
          "6402d6726a368452abe74095"
        ],
        "fileType": "folder",
        "_id": "6402d6726a368452abe74096",
        "isSelectedFile": false,
        "createdAt": "2023-03-04T18:43:07.556Z",
        "updatedAt": "2023-03-04T18:43:07.556Z",
        "id": "6402d6726a368452abe74096"
      },
      {
        "name": "sketch.js",
        "content": "var foo = new p5.SpeechRec(); // speech recognition object (will prompt for mic access)\nfoo.onResult = showResult; // bind callback function to trigger when speech is recognized\nfoo.start(); // start listening\n\nfunction showResult()\n{\n  console.log(foo.resultString); // log the result\n}",
        "children": [],
        "fileType": "file",
        "_id": "6402d6726a368452abe74093",
        "isSelectedFile": true,
        "createdAt": "2023-03-04T18:43:07.556Z",
        "updatedAt": "2023-03-04T18:43:07.556Z",
        "id": "6402d6726a368452abe74093"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/gh/IDMNYU/p5.js-speech@0.0.3/lib/p5.speech.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6402d6726a368452abe74094",
        "isSelectedFile": false,
        "createdAt": "2023-03-04T18:43:07.556Z",
        "updatedAt": "2023-03-04T18:43:07.556Z",
        "id": "6402d6726a368452abe74094"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6402d6726a368452abe74095",
        "isSelectedFile": false,
        "createdAt": "2023-03-04T18:43:07.556Z",
        "updatedAt": "2023-03-04T18:43:07.556Z",
        "id": "6402d6726a368452abe74095"
      }
    ],
    "createdAt": "2023-03-04T18:43:07.556Z",
    "id": "XERypUoiZ"
  },
  {
    "name": "Sprout kitty",
    "_id": "ol30x4kUP",
    "updatedAt": "2022-11-06T04:07:50.935Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6367306a4248549679eb676b",
          "6367306a4248549679eb676a",
          "6367306a4248549679eb676c"
        ],
        "fileType": "folder",
        "_id": "6367306a4248549679eb676d",
        "createdAt": "2022-11-06T04:07:50.935Z",
        "updatedAt": "2022-11-06T04:07:50.935Z",
        "isSelectedFile": false,
        "id": "6367306a4248549679eb676d"
      },
      {
        "name": "sketch.js",
        "content": "let capture;\nlet startx = 0 \nlet starty = 0 \n\nfunction preload() {\n  capture = createCapture(VIDEO);\n}\n\nfunction setup() {\n  createCanvas(600, 450);\n  capture.hide();\n  \n}\n\nfunction draw() {\n  capture.loadPixels();\n  let size = 20;\n  background(0);\n  noStroke();\n  for (var starty = 0; starty < capture.height; starty++) { \n    for (var startx = 0; startx < capture.width; startx++) {\n      var index = (startx + starty * capture.width) * 4;\n      var r = capture.pixels[index + 0];\n      var g = capture.pixels[index + 1];\n      var b = capture.pixels[index + 2];\n\n      var bright = ((0.3 * r) + (0.59 * g) + (0.11 * b)) \n \n      textSize(size);\n      if (bright <= 127.5) {\n        text(\"😡\",startx, starty);\n       }\n      \n      startx = startx + size -1 \n    }\n    starty = starty + size -1 \n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6367306a4248549679eb676a",
        "isSelectedFile": true,
        "createdAt": "2022-11-06T04:07:50.935Z",
        "updatedAt": "2022-11-06T04:07:50.935Z",
        "id": "6367306a4248549679eb676a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6367306a4248549679eb676b",
        "createdAt": "2022-11-06T04:07:50.935Z",
        "updatedAt": "2022-11-06T04:07:50.935Z",
        "isSelectedFile": false,
        "id": "6367306a4248549679eb676b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6367306a4248549679eb676c",
        "createdAt": "2022-11-06T04:07:50.935Z",
        "updatedAt": "2022-11-06T04:07:50.935Z",
        "isSelectedFile": false,
        "id": "6367306a4248549679eb676c"
      }
    ],
    "createdAt": "2022-11-06T03:59:38.600Z",
    "id": "ol30x4kUP"
  },
  {
    "name": "Stateful Game Fun Stuff",
    "_id": "RjIdsLK2F",
    "updatedAt": "2022-10-10T01:24:01.336Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "633dc8db480551ee92d97dc8",
          "633dc8db480551ee92d97dc7",
          "633dc8db480551ee92d97dc9"
        ],
        "fileType": "folder",
        "_id": "633dc8db480551ee92d97dca",
        "createdAt": "2022-10-10T01:24:01.336Z",
        "updatedAt": "2022-10-10T01:24:01.336Z",
        "isSelectedFile": false,
        "id": "633dc8db480551ee92d97dca"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0;\nlet ball = {\n  x: 1,\n  y: 20,\n  xdir: 1,\n  ydir: -1,\n  w: 10,\n  h: 20,\n  r: 200,\n  g: 100,\n  b: 50\n};\n\nlet balloon = {\n  x: 10,\n  y: 200,\n  xdir: 2,\n  ydir: -2,\n  w: 100,\n  h: 20,\n  r: 100,\n  g: 101,\n  b: 1\n};\n\nlet hotairballoon = {\n  x: 10,\n  y: 200,\n  xdir: 2,\n  ydir: -3,\n  w: 100,\n  h: 200,\n  r: 2,\n  g: 101,\n  b: 1  \n};\n\nfunction setup() {\n  createCanvas(400, 400);\n  ball.xdir = random(-4,4);\n  balloon.w = random(10,200);\n  hotairballoon.r = random(100,200);  \n}\n\nfunction draw() {\n  //background(220);\n  // Check state , draw different screens\n  if (state == 0) {\n    drawEnter();\n  } else if (state == 1) {\n    drawPlay();\n  } else if (state == 2) {\n    drawExit();\n  }\n  \n}\n\nfunction mousePressed() {\n  state++;\n  if (state > 2) {\n    state = 0;\n  }\n}\n\n// Enter Screen\nfunction drawEnter() {\n  // Black background\n  background(0);\n  \n  // Draw the title - hot pink letters\n  fill(255,105,180);\n  textSize(32);\n  textAlign(CENTER);\n  text('StAtEful GAME - fun stuffs', width/2, height/2);\n  \n  // if (mouseIsPressed) {\n  //   state = 1;\n  // }\n  \n}\n\n// Game Play Screen\nfunction drawPlay() {\n   background(220);\n  drawShape(ball);\n  moveShape(ball);\n  checkBounce(ball);\n  \n  drawShape(balloon);\n  moveShape(balloon);\n  checkBounce(balloon);\n  \n  drawShape(hotairballoon);\n  moveShape(hotairballoon);\n  checkBounce(hotairballoon);\n\n  // if (mouseIsPressed) {\n  //   state = 2;\n  // }\n}\n\n// End Game Screen\nfunction drawExit() {\n  background(0,0,255);\n}\n\nfunction drawShape(whichShape) {\n  // draw shape\n  fill(whichShape.r, whichShape.g, whichShape.b);\n  ellipse(whichShape.x,whichShape.y,whichShape.w,whichShape.h);\n}\n\nfunction moveShape(whichShape) {\n  // move shape\n  whichShape.x = whichShape.x + whichShape.xdir;\n  whichShape.y = whichShape.y + whichShape.ydir;\n}\n  \nfunction checkBounce(whichShape) {\n  // check bounce\n  if (whichShape.x >= width || whichShape.x <= 0) {\n    whichShape.xdir = whichShape.xdir * -1;\n  }\n  \n  if (whichShape.y >= height || whichShape.y <= 0) {\n    whichShape.ydir = whichShape.ydir * -1;\n  }  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "633dc8db480551ee92d97dc7",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T01:24:01.336Z",
        "updatedAt": "2022-10-10T01:24:01.336Z",
        "id": "633dc8db480551ee92d97dc7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "633dc8db480551ee92d97dc8",
        "createdAt": "2022-10-10T01:24:01.336Z",
        "updatedAt": "2022-10-10T01:24:01.336Z",
        "isSelectedFile": false,
        "id": "633dc8db480551ee92d97dc8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "633dc8db480551ee92d97dc9",
        "createdAt": "2022-10-10T01:24:01.336Z",
        "updatedAt": "2022-10-10T01:24:01.336Z",
        "isSelectedFile": false,
        "id": "633dc8db480551ee92d97dc9"
      }
    ],
    "createdAt": "2022-10-05T18:36:34.951Z",
    "id": "RjIdsLK2F"
  },
  {
    "name": "Tropical ornament",
    "_id": "HHKL7wpkL",
    "updatedAt": "2022-10-17T19:05:29.958Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "634da428e18d191ba6f93f16",
          "634da428e18d191ba6f93f15",
          "634da428e18d191ba6f93f17"
        ],
        "fileType": "folder",
        "_id": "634da428e18d191ba6f93f18",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:05:29.958Z",
        "updatedAt": "2022-10-17T19:05:29.958Z",
        "id": "634da428e18d191ba6f93f18"
      },
      {
        "name": "sketch.js",
        "content": "let a =[];\nlet numberlist = [89, 90, 20, 17, 37, 48, 76]\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  print(numberlist.length);\n  print(numberlist[0]);\n  print(numberlist[numberlist.length - 1]);\n  let randomindex = random(0,numberlist.length);\n  let roundedrandomindex = floor(randomindex);\n  print(roundedrandomindex);\n  print(numberlist[roundedrandomindex]);\n  \n  for (let i = 0; i < 1000; i++) {\n    let newnumber = random(0,100);\n    newnumber = floor(newnumber);\n    numberlist.push(newnumber);\n  }\n  print(numberlist.length);\n  \n  randomindex = random(0,numberlist.length);\n roundedrandomindex = floor(randomindex);\n  print(roundedrandomindex);\n  print(numberlist[roundedrandomindex]);\n}\n\nfunction draw() {\n  background(220);\n  \n    for (let i = 0; i < 1000; i++) {\n   ellipse(numberlist[i],100,10,10);    }\n}",
        "children": [],
        "fileType": "file",
        "_id": "634da428e18d191ba6f93f15",
        "isSelectedFile": true,
        "createdAt": "2022-10-17T19:05:29.958Z",
        "updatedAt": "2022-10-17T19:05:29.958Z",
        "id": "634da428e18d191ba6f93f15"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "634da428e18d191ba6f93f16",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:05:29.958Z",
        "updatedAt": "2022-10-17T19:05:29.958Z",
        "id": "634da428e18d191ba6f93f16"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "634da428e18d191ba6f93f17",
        "isSelectedFile": false,
        "createdAt": "2022-10-17T19:05:29.958Z",
        "updatedAt": "2022-10-17T19:05:29.958Z",
        "id": "634da428e18d191ba6f93f17"
      }
    ],
    "createdAt": "2022-10-17T19:05:29.958Z",
    "id": "HHKL7wpkL"
  },
  {
    "name": "try light",
    "_id": "KUOMB1vCd",
    "updatedAt": "2023-04-22T15:02:52.208Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6443e4dd019b5e2ea431e719",
          "6443e4dd019b5e2ea431e718",
          "6443e4dd019b5e2ea431e71a"
        ],
        "fileType": "folder",
        "_id": "6443e4dd019b5e2ea431e71b",
        "createdAt": "2023-04-22T15:02:49.908Z",
        "updatedAt": "2023-04-22T15:02:52.208Z",
        "isSelectedFile": false,
        "id": "6443e4dd019b5e2ea431e71b"
      },
      {
        "name": "sketch.js",
        "content": "let capture;\nlet targetColor = [0, 0, 255]; // Set the target color to blue\n\nfunction setup() {\n  createCanvas(640, 480);\n  capture = createCapture(VIDEO);\n  capture.size(width, height);\n  capture.hide(); // Hide the video element\n}\n\nfunction draw() {\n  background(0);\n  image(capture, 0, 0, width, height);\n\n  // Use trackColor() to track the blue light wand\n  let trackingResult = trackColor(targetColor);\n\n  // Use getTargetColor() to set the target color to blue\n  targetColor = getTargetColor();\n\n  // Use findContours() to find the shape of the tracked color\n  let contours = findContours(trackingResult, 10, width * height / 4, 10, true);\n\n  // Draw the contours on the canvas\n  stroke(0, 255, 0);\n  strokeWeight(2);\n  noFill();\n  for (let i = 0; i < contours.length; i++) {\n    beginShape();\n    for (let j = 0; j < contours[i].length; j++) {\n      vertex(contours[i][j].x, contours[i][j].y);\n    }\n    endShape(CLOSE);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6443e4dd019b5e2ea431e718",
        "isSelectedFile": false,
        "createdAt": "2023-04-22T15:02:49.908Z",
        "updatedAt": "2023-04-22T15:02:49.908Z",
        "id": "6443e4dd019b5e2ea431e718"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/p5.play/lib/p5.play.js\"></script>\n   <script src=\"https://cdn.jsdelivr.net/npm/planck-js@0.3.27/dist/planck-with-testbed.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6443e4dd019b5e2ea431e719",
        "createdAt": "2023-04-22T15:02:49.908Z",
        "updatedAt": "2023-04-22T15:02:49.908Z",
        "isSelectedFile": false,
        "id": "6443e4dd019b5e2ea431e719"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6443e4dd019b5e2ea431e71a",
        "createdAt": "2023-04-22T15:02:49.908Z",
        "updatedAt": "2023-04-22T15:02:49.908Z",
        "isSelectedFile": false,
        "id": "6443e4dd019b5e2ea431e71a"
      }
    ],
    "createdAt": "2023-04-22T13:45:13.049Z",
    "id": "KUOMB1vCd"
  },
  {
    "name": "using ellipse as tracking",
    "_id": "6nnzLglw1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445660b019b5e2ea431e725",
          "6445660b019b5e2ea431e726",
          "6445660b019b5e2ea431e727"
        ],
        "fileType": "folder",
        "_id": "6445660b019b5e2ea431e724",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:48:21.612Z",
        "updatedAt": "2023-04-23T17:48:21.612Z",
        "id": "6445660b019b5e2ea431e724"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445660b019b5e2ea431e726",
        "isSelectedFile": true,
        "createdAt": "2023-04-23T17:48:21.612Z",
        "updatedAt": "2023-04-23T17:48:21.612Z",
        "id": "6445660b019b5e2ea431e726"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445660b019b5e2ea431e725",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:48:21.612Z",
        "updatedAt": "2023-04-23T17:48:21.612Z",
        "id": "6445660b019b5e2ea431e725"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445660b019b5e2ea431e727",
        "isSelectedFile": false,
        "createdAt": "2023-04-23T17:48:21.612Z",
        "updatedAt": "2023-04-23T17:48:21.612Z",
        "id": "6445660b019b5e2ea431e727"
      }
    ],
    "createdAt": "2023-04-23T17:08:28.094Z",
    "updatedAt": "2023-04-23T17:48:21.612Z",
    "id": "6nnzLglw1"
  },
  {
    "name": "using ellipse as tracking copy copy",
    "_id": "xMCm6Ulxx",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445e2143fc0718590cf8e7a",
          "6445e23e1ea9b6001af62af8",
          "6445e2143fc0718590cf8e7b",
          "6445e2143fc0718590cf8e7c",
          "6445e2143fc0718590cf8e7d",
          "6445e2143fc0718590cf8e7e",
          "6445e2143fc0718590cf8e7f"
        ],
        "fileType": "folder",
        "_id": "6445e2143fc0718590cf8e79",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:29:11.436Z",
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e79"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\n\n// load the spell sound file in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n  spellSound = loadSound('avada_kedavra.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound.play();\n    } else if (checkMovement(trail, \"zig-zag\")) {\n        avadaKedavraSound.play();\n      }\n    }\n  \n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n}\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is swish and flick\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the swish and flick range\nif (movement == \"swish and flick\") {\n  if (trail.length < 20) {\n      return false;\n    }\n    \n    // fit a circle to the trail using least squares\n    let n = trail.length;\n    let sx = 0, sy = 0, sxx = 0, syy = 0, sxy = 0;\n    for (let i = 0; i < n; i++) {\n      let p = trail[i];\n      let x = p.x;\n      let y = p.y;\n      sx += x;\n      sy += y;\n      sxx += x * x;\n      syy += y * y;\n      sxy += x * y;\n    }\n    let a = (n * sxx - sx * sx);\n    let b = (n * sxy - sx * sy);\n    let c = (n * syy - sy * sy);\n    let d = (a * c - b * b);\n    let cx = (c * sx - b * sy) / d;\n    let cy = (a * sy - b * sx) / d;\n    let r = sqrt((sxx + syy) / n - (cx * cx + cy * cy));\n    \n    // calculate the average distance between the points and the circle\n    let error = 0;\n    for (let i = 0; i < n; i++) {\n      let p = trail[i];\n      let x = p.x;\n      let y = p.y;\n      let d = dist(x, y, cx, cy);\n      error += abs(d - r);\n    }\n    error /= n;\n    \n    // if the error is within a certain range, return true\n    if (error < 5) {\n      return true;\n    } else {\n      return false;\n    }\n  \n} else if (movement == \"zig-zag\") {\n   let minAngleChange = PI/4; // the direction vector needs to change by at least 45 degrees\n  let maxTimeBetweenChanges = 100; // the direction vector can only change direction once every 100 frames\n  \n  let timeSinceLastChange = 0;\n  let lastAngle = angle;\n  \n  // iterate over the trail in reverse order, starting from the second-to-last point\n  for (let i = trail.length-2; i >= 0; i--) {\n    let p = trail[i];\n    let d = createVector(end.x - p.x, end.y - p.y);\n    let a = d.heading();\n    \n    // calculate the change in angle since the last point\n    let angleChange = abs(a - lastAngle);\n    angleChange = (angleChange > PI) ? TWO_PI - angleChange : angleChange;\n    \n    // if the angle change is large enough and enough time has elapsed, return true\n    if (angleChange > minAngleChange && timeSinceLastChange > maxTimeBetweenChanges) {\n      return true;\n    }\n    \n    timeSinceLastChange++;\n    lastAngle = a;\n  }\n  \n  return false;\n}\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7d",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T02:29:11.436Z",
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e7d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7c",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:29:11.436Z",
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e7c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7e",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:29:11.436Z",
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e7e"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7a",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/e91fe604-c8fa-43cb-af4e-9a762497539b.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "createdAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e7a"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7b",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/47da7cdc-71c3-44e8-88bf-9a4b888934fa.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "createdAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e2143fc0718590cf8e7b"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445e2143fc0718590cf8e7f",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/9ab99839-6531-478a-b0e8-454312e041df.mp3",
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "createdAt": "2023-04-24T02:29:11.436Z",
        "isSelectedFile": false,
        "id": "6445e2143fc0718590cf8e7f"
      },
      {
        "name": "avada_kedavra.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445e23e1ea9b6001af62af8",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/59677607-ca37-43b0-b1f3-7a9036716c45.mp3",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T02:29:11.436Z",
        "createdAt": "2023-04-24T02:29:11.436Z",
        "id": "6445e23e1ea9b6001af62af8"
      }
    ],
    "createdAt": "2023-04-24T01:57:43.017Z",
    "updatedAt": "2023-04-24T02:29:11.436Z",
    "id": "xMCm6Ulxx"
  },
  {
    "name": "using ellipse as tracking copy copy",
    "_id": "_NgdQKPKh",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445dbb73fc0718590cf8e73",
          "6445dbb73fc0718590cf8e74",
          "6445dbb73fc0718590cf8e75",
          "6445dbb73fc0718590cf8e76",
          "6445dbb73fc0718590cf8e77",
          "6445dbb73fc0718590cf8e78"
        ],
        "fileType": "folder",
        "_id": "6445dbb73fc0718590cf8e72",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T01:31:12.162Z",
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e72"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\n\n// load the spell sound file in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound.play();\n      castSpell(trail);\n      trail = [];\n    }\n    // cast the Avada Kedavra spell when the movement is zig zag\n    else if (checkMovement(trail, \"zig zag\")) {\n      castSpell(trail);\n      trail = [];\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is swish and flick\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the swish and flick range\n  if (angle > PI/4 && angle < 3*PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e76",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T01:31:12.162Z",
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e76"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e75",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T01:31:12.162Z",
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e75"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e77",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T01:31:12.162Z",
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e77"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e73",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/2ec507b5-55ff-4cbc-9b4d-f151d503bbce.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "createdAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e73"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e74",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/b4b44e4c-9ce7-4340-98b4-962519bb4184.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "createdAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e74"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445dbb73fc0718590cf8e78",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/e592281c-7011-4392-8abb-328be1ec2666.mp3",
        "updatedAt": "2023-04-24T01:31:12.162Z",
        "createdAt": "2023-04-24T01:31:12.162Z",
        "id": "6445dbb73fc0718590cf8e78"
      }
    ],
    "createdAt": "2023-04-24T01:30:32.847Z",
    "updatedAt": "2023-04-24T01:31:12.162Z",
    "id": "_NgdQKPKh"
  },
  {
    "name": "using ellipse as tracking copy copy",
    "_id": "Dm3rJa_zC",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445d517019b5e2ea431e72d",
          "6445d66a5526d9001a0d45b5",
          "6445d517019b5e2ea431e72e",
          "6445d517019b5e2ea431e72f",
          "6445d517019b5e2ea431e730",
          "6445d517019b5e2ea431e731",
          "6445d517019b5e2ea431e732"
        ],
        "fileType": "folder",
        "_id": "6445d517019b5e2ea431e72c",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:51:38.421Z",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e72c"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\nlet avadaKedavraSound;\n\n// load the spell sound files in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n  avadaKedavraSound = loadSound('avada_kedavra.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick or zig-zag\n    if (trail.length > 20) {\n      if (checkMovement(trail, \"swish and flick\")) {\n        spellSound.play();\n      } else if (checkMovement(trail, \"zig-zag\")) {\n        avadaKedavraSound.play();\n      }\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\nfunction castSpell(trail) {\n  strokeWeight(10);\n  stroke('#00FF00');\n  noFill();\n  beginShape();\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    vertex(p.x, p.y);\n  }\n  endShape();\n  noStroke();\n}\n\nfunction checkMovement(trail, movement) {\nlet start = trail[0];\nlet end = trail[trail.length-1];\n\n// calculate the direction vector of the trail\nlet direction = createVector(end.x - start.x, end.y - start.y);\n\n// calculate the angle between the direction vector and a reference vector pointing to the right\nlet angle = direction.heading() - HALF_PI;\nangle = (angle < 0) ? TWO_PI + angle : angle;\n\n// check if the angle falls within the swish and flick or zig zag range\nif (movement == \"swish and flick\") {\nif (angle > PI/4 && angle < 3*PI/4) {\nreturn true;\n} else {\nreturn false;\n}\n} else if (movement == \"zig-zag\") {\nlet distance = p5.Vector.dist(start, end);\nlet numSegments = trail.length - 1;\nlet segmentLength = distance/numSegments;\nlet threshold = segmentLength;\nlet deviation = 0;\n\nfor (let i = 0; i < numSegments; i++) {\n  let segmentStart = trail[i];\n  let segmentEnd = trail[i+1];\n  let segmentVector = createVector(segmentEnd.x - segmentStart.x, segmentEnd.y - segmentStart.y);\n  let segmentLength = segmentVector.mag();\n  \n  // calculate the perpendicular distance between the segment and the end point\n  let perpendicularDistance = abs((end.x - segmentStart.x) * segmentVector.y - (end.y - segmentStart.y) * segmentVector.x) / segmentLength;\n  \n  // update the deviation\n  deviation += perpendicularDistance;\n}\n\n// calculate the average deviation\ndeviation /= numSegments;\n\n// check if the deviation is smaller than the threshold\nif (deviation < threshold) {\n  return true;\n} else {\n  return false;\n}\n}\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e730",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T02:51:38.421Z",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e730"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e72f",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:51:38.421Z",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e72f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e731",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T02:51:38.421Z",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e731"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e72d",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/1ba96ca2-2edc-4ea3-8721-0184eb58eb6a.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "createdAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e72d"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e72e",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/a6ffbd6a-3713-46ab-bd6c-374823c5166b.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "createdAt": "2023-04-24T02:51:38.421Z",
        "id": "6445d517019b5e2ea431e72e"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445d517019b5e2ea431e732",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/7ee7a95c-f0ba-433f-829a-d66714474e2b.mp3",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "createdAt": "2023-04-24T02:51:38.421Z",
        "isSelectedFile": false,
        "id": "6445d517019b5e2ea431e732"
      },
      {
        "name": "avada_kedavra.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445d66a5526d9001a0d45b5",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/f378f6d0-8799-47b1-afbb-980f6d173f33.mp3",
        "updatedAt": "2023-04-24T02:51:38.421Z",
        "createdAt": "2023-04-24T02:51:38.421Z",
        "isSelectedFile": false,
        "id": "6445d66a5526d9001a0d45b5"
      }
    ],
    "createdAt": "2023-04-24T01:02:17.019Z",
    "updatedAt": "2023-04-24T02:51:38.421Z",
    "id": "Dm3rJa_zC"
  },
  {
    "name": "using ellipse as tracking copy copy copy",
    "_id": "GUbtAzTl9",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445f2176c7238001a312257",
          "6445f08e019b5e2ea431e737",
          "6445f08e019b5e2ea431e738",
          "6445f08e019b5e2ea431e739",
          "6445f08e019b5e2ea431e73a"
        ],
        "fileType": "folder",
        "_id": "6445f08e019b5e2ea431e733",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:24:00.150Z",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "id": "6445f08e019b5e2ea431e733"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\nlet avadaKedavraSound;\n\n// load the spell sound files in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n  avadaKedavraSound = loadSound('avada_kedavra-1.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick or zig-zag\n    if (trail.length > 20) {\n      if (checkMovement(trail, \"swish and flick\")) {\n        spellSound.play();\n      } else if (checkMovement(trail, \"zig-zag\")) {\n        avadaKedavraSound.play();\n      }\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\nfunction castSpell(trail) {\n  strokeWeight(10);\n  stroke('#00FF00');\n  noFill();\n  beginShape();\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    vertex(p.x, p.y);\n  }\n  endShape();\n  noStroke();\n}\n\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length - 1];\n\n  // calculate the horizontal distance and vertical distance between start and end point\n  let dx = end.x - start.x;\n  let dy = end.y - start.y;\n\n  // check if the horizontal distance is greater than the vertical distance\n  if (abs(dx) > abs(dy)) {\n    if (movement === \"swish and flick\") {\n      return true;\n    } else if (movement === \"zig-zag\") { // Fixed typo here\n      return true;\n    }\n  }\n  return false;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445f08e019b5e2ea431e738",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T03:24:00.150Z",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "id": "6445f08e019b5e2ea431e738"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445f08e019b5e2ea431e737",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:24:00.150Z",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "id": "6445f08e019b5e2ea431e737"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445f08e019b5e2ea431e739",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:24:00.150Z",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "id": "6445f08e019b5e2ea431e739"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445f08e019b5e2ea431e73a",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/7f6f02b7-3b56-4d93-be2d-d81560eb4b18.mp3",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "createdAt": "2023-04-24T03:24:00.150Z",
        "isSelectedFile": false,
        "id": "6445f08e019b5e2ea431e73a"
      },
      {
        "name": "avada_kedavra-1.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445f2176c7238001a312257",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/8dcae1a9-4298-4254-a963-7faf739c251f.mp3",
        "updatedAt": "2023-04-24T03:24:00.150Z",
        "createdAt": "2023-04-24T03:24:00.150Z",
        "isSelectedFile": false,
        "id": "6445f2176c7238001a312257"
      }
    ],
    "createdAt": "2023-04-24T02:59:28.039Z",
    "updatedAt": "2023-04-24T03:24:00.150Z",
    "id": "GUbtAzTl9"
  },
  {
    "name": "Weak plutonium",
    "_id": "64hRHB-cO",
    "updatedAt": "2022-10-10T04:56:01.298Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63437658a253f71ca5d51313",
          "63437658a253f71ca5d51312",
          "63437658a253f71ca5d51314"
        ],
        "fileType": "folder",
        "_id": "63437658a253f71ca5d51315",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:56:01.298Z",
        "updatedAt": "2022-10-10T04:56:01.298Z",
        "id": "63437658a253f71ca5d51315"
      },
      {
        "name": "sketch.js",
        "content": "// The midi notes of a scale\nvar notes = [ 60, 62, 64, 65, 67, 69, 71];\nvar osc;\n\nlet m = 320;\nlet n = 180;\nlet mspeed = 5;\nlet nspeed = 2;\n\n// let r = 25;\n\nfunction setup() {\n  createCanvas(720, 400);\n  \n\n  // A triangle oscillator\n  osc = new p5.TriOsc();\n  // Start silent\n  osc.start();\n  osc.amp(0);\n}\n\n// A function to play a note\nfunction playNote(note, duration) {\n  osc.freq(midiToFreq(note));\n  // Fade it in\n  osc.fade(0.5,0.2);\n\n  // If we sest a duration, fade it out\n  if (duration) {\n    setTimeout(function() {\n      osc.fade(0,0.2);\n    }, duration-50);\n  }\n}\n\nfunction draw() {\n\n  // Draw a keyboard\n\n  // The width for each key\n  var w = width / notes.length;\n  for (var i = 0; i < notes.length; i++) {\n    var x = i * w;\n    // If the mouse is over the key\n    if (mouseX > x && mouseX < x + w && mouseY < height) {\n      // If we're clicking\n      if (mouseIsPressed) {\n        fill(200,255,200);\n      // Or just rolling over\n      } else {\n        fill(100,200,300);\n      }\n    } else {\n      fill(300,50,250);\n    }\n\n\n    // Draw the key\n    circle(x, 100, w, height);\n   ellipse(m, n, 50, 50);\n   m += mspeed;\n   n += nspeed;\n   if (m > width - 50 || m < 50) {\n     mspeed = -mspeed;\n   }\n  if (n > height - 50 || n < 50) {\n     nspeed = -nspeed;\n  }\n  }\n\n}\n\n// When we click\nfunction mousePressed() {\n  // Map mouse to the key index\n  var key = floor(map(mouseX, 0, width, 0, notes.length));\n  playNote(notes[key]);\n}\n\n// Fade it out when we release\nfunction mouseReleased() {\n  osc.fade(0,0.5);\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "63437658a253f71ca5d51312",
        "isSelectedFile": true,
        "createdAt": "2022-10-10T04:56:01.298Z",
        "updatedAt": "2022-10-10T04:56:01.298Z",
        "id": "63437658a253f71ca5d51312"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63437658a253f71ca5d51313",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:56:01.298Z",
        "updatedAt": "2022-10-10T04:56:01.298Z",
        "id": "63437658a253f71ca5d51313"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63437658a253f71ca5d51314",
        "isSelectedFile": false,
        "createdAt": "2022-10-10T04:56:01.298Z",
        "updatedAt": "2022-10-10T04:56:01.298Z",
        "id": "63437658a253f71ca5d51314"
      }
    ],
    "createdAt": "2022-10-10T01:57:12.410Z",
    "id": "64hRHB-cO"
  },
  {
    "name": "Weather",
    "_id": "ZkPuYjBwv",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "637136d1c545af03e4d15e2c",
          "637136d1c545af03e4d15e2d",
          "637136d1c545af03e4d15e2e",
          "637136d1c545af03e4d15e2f",
          "637136d1c545af03e4d15e30",
          "637136d1c545af03e4d15e31",
          "637136d1c545af03e4d15e32",
          "637136d1c545af03e4d15e33",
          "637136d1c545af03e4d15e34",
          "637136d1c545af03e4d15e35",
          "637136d1c545af03e4d15e36"
        ],
        "fileType": "folder",
        "_id": "637136d1c545af03e4d15e2b",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "isSelectedFile": false,
        "id": "637136d1c545af03e4d15e2b"
      },
      {
        "name": "sketch.js",
        "content": "var weather;\nvar api='https://api.openweathermap.org/data/2.5/forecast/daily?q=';\nvar input;\nvar apiKey='&appid=ad6e239ec0ac58d0a9836e942aac97eb';\nvar units='&cnt=16&units=metric';\nvar canvas;\n\nlet daytemp=[]\nlet temp=\"\"\nlet rain\nlet clouds\nlet clearweather\nlet snow\n\nfunction preload(){\n  tint(155, 176)\n  rain=loadImage('rainy.jpg')\n  clouds=loadImage('clouds.jpg')\n  clearweather=loadImage('clear.jpg')\n  snow=loadImage('snow.png')\n                  \n}\nfunction setup() {\n  canvas=createCanvas(360, 300);\n  canvas.position(20,30);\n  var button = select('#submit');\n  button.mousePressed(weatherAsk);\n  input = select('#city');\n}\n\nfunction loadWeatherpicture(){\n  if(weather.list[0].weather[0].main=='Rain'){\n  image(rain,0,20,420,380)\n      \n    }\n    if(weather.list[0].weather[0].main=='Clouds'){\n      image(clouds,0,20,420,380)}\n    if(weather.list[0].weather[0].main=='Clear'){\n     image(clearweather,0,20,450,380)}\nif(weather.list[0].weather[0].main=='Snow'){\n  image(snow,0,20,420,380)\n      \n   }\n}\nfunction weatherAsk() {\n \n  var url = api + input.value() + apiKey + units;\n  loadJSON(url, gotData);\n  console.log(url);\n}\n\nfunction gotData(data) {\n  weather = data;\n  for(var i=0;i<weather.list.length;i++){\n\n  var eventemp=weather.list[i].temp.eve;\n    \n\n  }\n  \n\n}\n\nfunction draw() {\nclear();\n\n              \n  if (weather) {\n    loadWeatherpicture()\n                \n    for (var i=0; i<5; i++) {\n    daytemp[i] = weather.list[i].temp.eve}\n    var todayhumidity = weather.list[0].humidity;\n    var tomorrowhumidity = weather.list[1].humidity;\n \n  var mintemp=weather.list[0].temp.min;\n  var maxtemp=weather.list[0].temp.max;\n  var temp=weather.list[0].main\n// console.log(temp)\n    stroke(255,255,255);\n   \n    fill(100+mintemp,50,mintemp+200);\n    rect(100, 160,mintemp*5, mintemp*5);\n\n    fill(50+maxtemp,100,mintemp+30);\n    ellipse(250, 160,maxtemp*5,maxtemp*5);\n    stroke(255);\n   \n    fill(255);\n    noStroke();\n    textSize(35);\n  text(weather.city.name,20,70);\n    textSize(14);\n    fill(255);\n\n    text(\"Today: minimum & maximum temperature\",20, 100);\n}\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e34",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "isSelectedFile": true,
        "id": "637136d1c545af03e4d15e34"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n\n<head>\n     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/addons/p5.sound.min.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  \n</head>\n\n<body>\n  <script src=\"sketch.js\"></script> \n  <div class=\"selectcity\">\n  <p>\n    City: <input id=\"city\" value=\"New York\"/>\n    <button id=\"submit\">submit</button>\n  </p>\n  </div>\n</body>\n\n</html>",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e32",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "isSelectedFile": false,
        "id": "637136d1c545af03e4d15e32"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\nbody {background-color:#FFF;}\n.selectcity{float:left;color:#FFF;width:400px;height:600px; background-color:#16191e;padding-left:20px;}\nh1{float:left;color:#000;font-weight:bold; font-size:12px;}",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e36",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "isSelectedFile": false,
        "id": "637136d1c545af03e4d15e36"
      },
      {
        "name": "25.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e2c",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/d61bf373-bd08-47a0-91c2-4f4e504b3857.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e2c"
      },
      {
        "name": "26.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e2d",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/9508822d-937b-49ee-a8a0-325d59b43e45.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e2d"
      },
      {
        "name": "53.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e2e",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/558f4749-8545-4c81-a329-8485698dabe3.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e2e"
      },
      {
        "name": "54.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e2f",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/1606ad1f-f4ed-4f30-8955-bb0affc9b021.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e2f"
      },
      {
        "name": "clouds.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e31",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/d0c91fd1-c400-47c3-b9e8-332abb0c1642.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e31"
      },
      {
        "name": "clear.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e30",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/50ce9bee-d55e-4da3-b056-8bb1258e55cd.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e30"
      },
      {
        "name": "rainy.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e33",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/c135f7b0-1baf-422d-99d7-9472896f197c.jpg",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e33"
      },
      {
        "name": "snow.png",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "637136d1c545af03e4d15e35",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/241e5a9c-bf5d-4d4f-9ada-ba4383d9f7cb.png",
        "updatedAt": "2022-11-13T18:36:46.534Z",
        "createdAt": "2022-11-13T18:36:46.534Z",
        "id": "637136d1c545af03e4d15e35"
      }
    ],
    "createdAt": "2022-11-13T18:26:26.401Z",
    "updatedAt": "2022-11-13T18:36:46.534Z",
    "id": "ZkPuYjBwv"
  },
  {
    "name": "Weather",
    "_id": "DDR2e18mW",
    "updatedAt": "2022-11-13T18:26:32.013Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "637135e4a778e54c73202fc7",
          "637135e4a778e54c73202fc6",
          "637135e4a778e54c73202fc8"
        ],
        "fileType": "folder",
        "_id": "637135e4a778e54c73202fc9",
        "createdAt": "2022-11-13T18:26:32.013Z",
        "updatedAt": "2022-11-13T18:26:32.013Z",
        "isSelectedFile": false,
        "id": "637135e4a778e54c73202fc9"
      },
      {
        "name": "sketch.js",
        "content": "var weather;\nvar api='https://api.openweathermap.org/data/2.5/forecast/daily?q=';\nvar input;\nvar apiKey='&appid=ad6e239ec0ac58d0a9836e942aac97eb';\nvar units='&cnt=16&units=metric';\nvar canvas;\n\nlet daytemp=[]\nlet tenki=\"\"\nlet rain\nlet clouds\nlet clearweather\nlet snow\n\nfunction preload(){\n  tint(155, 176)\n  rain=loadImage('rainy.jpg')\n  clouds=loadImage('clouds.jpg')\n  clearweather=loadImage('clear.jpg')\n  snow=loadImage('snow.png')\n                  \n}\nfunction setup() {\n  canvas=createCanvas(360, 300);\n  canvas.position(20,30);\n  var button = select('#submit');\n  button.mousePressed(weatherAsk);\n  input = select('#city');\n}\n\nfunction loadWeatherpicture(){\n  if(weather.list[0].weather[0].main=='Rain'){\n  image(rain,0,20,420,380)\n      \n    }\n    if(weather.list[0].weather[0].main=='Clouds'){\n      image(clouds,0,20,420,380)}\n    if(weather.list[0].weather[0].main=='Clear'){\n     image(clearweather,0,20,450,380)}\nif(weather.list[0].weather[0].main=='Snow'){\n  image(snow,0,20,420,380)\n      \n   }\n}\nfunction weatherAsk() {\n \n  var url = api + input.value() + apiKey + units;\n  loadJSON(url, gotData);\n  console.log(url);\n}\n\nfunction gotData(data) {\n  weather = data;\n  for(var i=0;i<weather.list.length;i++){\n\n  var eventemp=weather.list[i].temp.eve;\n    \n\n  }\n  \n\n}\n\nfunction draw() {\nclear();\n\n              \n  if (weather) {\n    loadWeatherpicture()\n                \n    for (var i=0; i<5; i++) {\n    daytemp[i] = weather.list[i].temp.eve}\n    var todayhumidity = weather.list[0].humidity;\n    var tomorrowhumidity = weather.list[1].humidity;\n \n  var mintemp=weather.list[0].temp.min;\n  var maxtemp=weather.list[0].temp.max;\n  var tenki=weather.list[0].main\n// console.log(tenki)\n    stroke(255,255,255);\n   \n    fill(70+mintemp,50,mintemp+150);\n    ellipse(100, 160,mintemp*5, mintemp*5);\n\n    fill(170+maxtemp,20,mintemp+30);\n    ellipse(250, 160,maxtemp*5,maxtemp*5);\n    stroke(255);\n   \n    fill(255);\n    noStroke();\n    textSize(35);\n  //  text(weather.city.name,20, 70);\n    //fill(255,255,255)\n    //textSize(10)\n  text('Hello ' + weather.city.name + '!',20,70);\n    textSize(14);\n // text(tenki,0,230)\n    fill(255);\n\n    text(\"Today: minimum & maximum temperature\",20, 100);\n\n text('Temperature Forcast for next 5 days:',20,230)\n    for(i=0;i<5;i++){\n stroke(255,255,255);\n     fill(150+daytemp[i]*4,30-daytemp[i] ,255-daytemp[i]*9);\n    ellipse(80+i*50,260,daytemp[i]*2,daytemp[i]*2,130)\n    }\n    \n\n}\n\n}",
        "children": [],
        "fileType": "file",
        "_id": "637135e4a778e54c73202fc6",
        "isSelectedFile": true,
        "createdAt": "2022-11-13T18:26:32.013Z",
        "updatedAt": "2022-11-13T18:26:32.013Z",
        "id": "637135e4a778e54c73202fc6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "637135e4a778e54c73202fc7",
        "createdAt": "2022-11-13T18:26:32.013Z",
        "updatedAt": "2022-11-13T18:26:32.013Z",
        "isSelectedFile": false,
        "id": "637135e4a778e54c73202fc7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "637135e4a778e54c73202fc8",
        "createdAt": "2022-11-13T18:26:32.013Z",
        "updatedAt": "2022-11-13T18:26:32.013Z",
        "isSelectedFile": false,
        "id": "637135e4a778e54c73202fc8"
      }
    ],
    "createdAt": "2022-11-13T18:22:38.146Z",
    "id": "DDR2e18mW"
  },
  {
    "name": "Wingardium Leviosa Spell",
    "_id": "ugwskQkXT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "644571b0ff2bc0001a6aac45",
          "64457266070036001af49ef1",
          "6445716e019b5e2ea431e729",
          "6445716e019b5e2ea431e72a",
          "6445716e019b5e2ea431e72b",
          "645158d10f146d001ab8a5a7",
          "6445797aff2bc0001a6adbdf"
        ],
        "fileType": "folder",
        "_id": "6445716e019b5e2ea431e728",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:38:06.526Z",
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "id": "6445716e019b5e2ea431e728"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\n\n// load the spell sound file in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // startWebserial();\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n  \n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n    \n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound.play();\n      \n      // serial.write('R');\n    }\n  }\n  \n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is swish and flick\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the swish and flick range\n  if (angle > PI/4 && angle < 3*PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445716e019b5e2ea431e72a",
        "isSelectedFile": true,
        "createdAt": "2023-05-03T01:38:06.526Z",
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "id": "6445716e019b5e2ea431e72a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n\t\n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n<!--     <script src=\"webserial.js\"></script> -->\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445716e019b5e2ea431e729",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:38:06.526Z",
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "id": "6445716e019b5e2ea431e729"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445716e019b5e2ea431e72b",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:38:06.526Z",
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "id": "6445716e019b5e2ea431e72b"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "644571b0ff2bc0001a6aac45",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/fc5ec717-b7d2-4717-838a-af223ba38923.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "createdAt": "2023-05-03T01:38:06.526Z",
        "id": "644571b0ff2bc0001a6aac45"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "64457266070036001af49ef1",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/c8f652f1-54dc-4e5c-bec3-79e2ec8f1318.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "createdAt": "2023-05-03T01:38:06.526Z",
        "id": "64457266070036001af49ef1"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445797aff2bc0001a6adbdf",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/81f7c94c-208a-4bcc-8474-6bd38259f677.mp3",
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "createdAt": "2023-05-03T01:38:06.526Z",
        "isSelectedFile": false,
        "id": "6445797aff2bc0001a6adbdf"
      },
      {
        "name": "webserial.js",
        "content": "const serial = new p5.WebSerial();\n// HTML button object:\nlet portButton;\nlet inData;                            // for incoming serial data\nlet outByte = 0; \n\nfunction startWebserial(){\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n \n}\n\n\n\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// read any incoming data as a byte:\nfunction serialEvent() {\n  // read a byte from the serial port:\n  var inByte = serial.read();\n  // store it in a global variable:\n  inData = inByte;\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}",
        "children": [],
        "fileType": "file",
        "_id": "645158d10f146d001ab8a5a7",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:38:06.526Z",
        "createdAt": "2023-05-03T01:38:06.526Z",
        "id": "645158d10f146d001ab8a5a7"
      }
    ],
    "createdAt": "2023-04-23T17:57:02.604Z",
    "updatedAt": "2023-05-03T01:38:06.526Z",
    "id": "ugwskQkXT"
  },
  {
    "name": "Wingardium Leviosa Spell copy",
    "_id": "r9DSJtEOT",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6451b8617e7816f2bbde32eb",
          "6451b8617e7816f2bbde32ec",
          "6451b8617e7816f2bbde32ed",
          "6451b8617e7816f2bbde32ee",
          "6451b8617e7816f2bbde32ef",
          "6451b8617e7816f2bbde32f0",
          "6451b8617e7816f2bbde32f1"
        ],
        "fileType": "folder",
        "_id": "6451b8617e7816f2bbde32ea",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:27:42.680Z",
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32ea"
      },
      {
        "name": "sketch.js",
        "content": "let tolerance = 20;\nlet colorToMatch;\nlet video;\nlet trail = [];\nlet spellSound;\n\n// load the spell sound file in preload\nfunction preload() {\n  spellSound = loadSound('wingardium_leviosa.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  startWebserial();\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n  \n  colorToMatch = color(140, 190, 255);\n}\n\nfunction draw() {\n  image(video, 0, 0);\n\n  let newPoint = findColor(video, colorToMatch, tolerance);\n  if (newPoint !== undefined) {\n    trail.push(newPoint);\n\n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound.play();\n\n      // send a signal to the Arduino to turn on the green LED\n      serial.write('R');\n    } else {\n      // send a signal to the Arduino to turn off the green LED\n      serial.write('r');\n    }\n  } else {\n    // send a signal to the Arduino to turn off the green LED\n    serial.write('r');\n  }\n\n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(input, c, tolerance) {\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n  \n  input.loadPixels();\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let index = (y * input.width + x) * 4;\n      let r = input.pixels[index];\n      let g = input.pixels[index + 1];\n      let b = input.pixels[index + 2];\n      \n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n}\n\n// check if the movement is swish and flick\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the swish and flick range\n  if (angle > PI/4 && angle < 3*PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32ee",
        "isSelectedFile": true,
        "createdAt": "2023-05-03T01:27:42.680Z",
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32ee"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n\t\n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <script src=\"webserial.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32ed",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:27:42.680Z",
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32ed"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32ef",
        "isSelectedFile": false,
        "createdAt": "2023-05-03T01:27:42.680Z",
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32ef"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32eb",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/5e43c428-52b2-4b13-b549-cd30b3579269.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "createdAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32eb"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32ec",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/22d023bc-9b0f-44f1-9a63-e0d83d0aac39.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "createdAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32ec"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32f1",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/19844f21-f818-44c2-a6c5-f550a8ca422b.mp3",
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "createdAt": "2023-05-03T01:27:42.680Z",
        "isSelectedFile": false,
        "id": "6451b8617e7816f2bbde32f1"
      },
      {
        "name": "webserial.js",
        "content": "const serial = new p5.WebSerial();\n// HTML button object:\nlet portButton;\nlet inData;                            // for incoming serial data\nlet outByte = 0; \n\nfunction startWebserial(){\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n \n}\n\n\n\n\n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// read any incoming data as a byte:\nfunction serialEvent() {\n  // read a byte from the serial port:\n  var inByte = serial.read();\n  // store it in a global variable:\n  inData = inByte;\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n \nfunction closePort() {\n  serial.close();\n}",
        "children": [],
        "fileType": "file",
        "_id": "6451b8617e7816f2bbde32f0",
        "isSelectedFile": false,
        "updatedAt": "2023-05-03T01:27:42.680Z",
        "createdAt": "2023-05-03T01:27:42.680Z",
        "id": "6451b8617e7816f2bbde32f0"
      }
    ],
    "createdAt": "2023-05-03T01:26:58.808Z",
    "updatedAt": "2023-05-03T01:27:42.680Z",
    "id": "r9DSJtEOT"
  },
  {
    "name": "Wingardium Leviosa Spell copy",
    "_id": "mbvXY6NgJ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445fae63fc0718590cf8e81",
          "6445fae63fc0718590cf8e82",
          "6445fae63fc0718590cf8e83",
          "6445fae63fc0718590cf8e84",
          "6445fae63fc0718590cf8e85",
          "6445fae63fc0718590cf8e86"
        ],
        "fileType": "folder",
        "_id": "6445fae63fc0718590cf8e80",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:44:32.477Z",
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e80"
      },
      {
        "name": "sketch.js",
        "content": "let button;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n  button = createButton('Enter the Spell');\n  button.position(width/2 - button.width/2, height/2 - button.height/2);\n  button.mousePressed(goToCode);\n}\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER, CENTER);\n  textSize(64);\n  text('Wingardium Leviosa', width/2, height/3);\n  textSize(24);\n  text('A spell-casting experience using computer vision', width/2, height/2);\n}\n\nfunction goToCode() {\n  window.open('https://editor.p5js.org/kg3171/sketches/ugwskQkXT');\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e84",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T03:44:32.477Z",
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e84"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e83",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:44:32.477Z",
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e83"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e85",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T03:44:32.477Z",
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e85"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e81",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/46e81338-1673-4b46-83a7-1f1e5b5dfe8f.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "createdAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e81"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e82",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/8b0eab89-5e82-4f5d-b694-850de368c35f.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "createdAt": "2023-04-24T03:44:32.477Z",
        "id": "6445fae63fc0718590cf8e82"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fae63fc0718590cf8e86",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/ee22843c-93da-465b-870a-83375a78f175.mp3",
        "updatedAt": "2023-04-24T03:44:32.477Z",
        "createdAt": "2023-04-24T03:44:32.477Z",
        "isSelectedFile": false,
        "id": "6445fae63fc0718590cf8e86"
      }
    ],
    "createdAt": "2023-04-24T03:43:35.773Z",
    "updatedAt": "2023-04-24T03:44:32.477Z",
    "id": "mbvXY6NgJ"
  },
  {
    "name": "Wingardium Leviosa Spell copy copy",
    "_id": "aN8TT2Q-M",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6445fc893fc0718590cf8e88",
          "6445fc893fc0718590cf8e89",
          "6445fc893fc0718590cf8e8a",
          "6445fc893fc0718590cf8e8b",
          "6445fc893fc0718590cf8e8c",
          "6445fc893fc0718590cf8e8d"
        ],
        "fileType": "folder",
        "_id": "6445fc893fc0718590cf8e87",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T04:27:30.202Z",
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e87"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet colorToMatch;\nlet ellipsePos;\nlet buttonPos;\nlet gameState;\n\nfunction preload() {\n  // load any necessary assets here\n  spellSound = loadSound('wingardium_leviosa.mp3');\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  colorToMatch = color(140, 190, 255);\n  ellipsePos = createVector(width/2, height/2);\n  buttonPos = createVector(width/2, height/2 + 100);\n\n  gameState = 'title';\n}\n\nfunction draw() {\n  background(0);\n\n  if (gameState === 'title') {\n    titleScreen();\n  } else if (gameState === 'game') {\n    gameScreen();\n  }\n}\n\nfunction titleScreen() {\n  image(video, 0, 0);\n\n  // check if blue color is detected\n  let bluePos = findColor(colorToMatch);\n  if (bluePos) {\n    ellipsePos = bluePos;\n\n    // check if ellipse intersects with button\n    if (dist(ellipsePos.x, ellipsePos.y, buttonPos.x, buttonPos.y) < 50) {\n      gameState = 'game';\n    }\n  }\n\n  // draw button\n  fill(255);\n  ellipse(buttonPos.x, buttonPos.y, 100, 50);\n  textSize(24);\n  textAlign(CENTER, CENTER);\n  fill(0);\n  text('Start', buttonPos.x, buttonPos.y);\n\n  // draw following ellipse\n  noStroke();\n  fill(colorToMatch);\n  ellipse(ellipsePos.x, ellipsePos.y, 50, 50);\n}\n\nfunction gameScreen() {\n  image(video, 0, 0);\n\n  let tolerance = 10;\n  let trail = [];\n  let spellSound; // sound asset for spell casting\n\n  // code for game goes here\n  let newPoint = findColor(colorToMatch);\n  if (newPoint !== null) {\n    trail.push(newPoint);\n\n    // play the spell sound when the trail length is greater than a threshold and the movement is swish and flick\n    if (trail.length > 20 && checkMovement(trail, \"swish and flick\")) {\n      spellSound.play();\n    }\n  }\n\n  noStroke();\n  fill('#EEDD82');\n  for (let i = 0; i < trail.length; i++) {\n    let p = trail[i];\n    ellipse(p.x, p.y, i, i);\n  }\n  if (trail.length > 20) {\n    trail.splice(0,1);\n  }\n}\n\nfunction findColor(c) {\n  video.loadPixels();\n  let tolerance = 10;\n  let matchR = red(c);\n  let matchG = green(c);\n  let matchB = blue(c);\n\n  for (let y = 0; y < video.height; y++) {\n    for (let x = 0; x < video.width; x++) {\n      let index = (y * video.width + x) * 4;\n      let r = video.pixels[index];\n      let g = video.pixels[index + 1];\n      let b = video.pixels[index + 2];\n\n      if (r >= matchR - tolerance && r <= matchR + tolerance &&\n          g >= matchG - tolerance && g <= matchG + tolerance &&\n          b >= matchB - tolerance && b <= matchB + tolerance) {\n        return createVector(x, y);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction checkMovement(trail, movement) {\n  let start = trail[0];\n  let end = trail[trail.length-1];\n  \n  // calculate the direction vector of the trail\n  let direction = createVector(end.x - start.x, end.y - start.y);\n  \n  // calculate the angle between the direction vector and a reference vector pointing to the right\n  let angle = direction.heading() - HALF_PI;\n  angle = (angle < 0) ? TWO_PI + angle : angle;\n  \n  // check if the angle falls within the swish and flick range\n  if (angle > PI/4 && angle < 3*PI/4) {\n    return true;\n  } else {\n    return false;\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e8b",
        "isSelectedFile": true,
        "createdAt": "2023-04-24T04:27:30.202Z",
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e8b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <script async src=\"https://docs.opencv.org/master/opencv.js\" onload=\"onOpenCvReady();\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e8a",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T04:27:30.202Z",
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e8a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e8c",
        "isSelectedFile": false,
        "createdAt": "2023-04-24T04:27:30.202Z",
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e8c"
      },
      {
        "name": "HP-F1-philosophers-stone-wingardium-leviosa-seamus-harry-charms-web-landscape.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e88",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/f847c4f1-2ca6-4275-bc18-729fba91ec0c.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "createdAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e88"
      },
      {
        "name": "expelliarmus.jpg",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e89",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/6484b040-ecd2-465e-b107-2f779ebe6da4.jpg",
        "isSelectedFile": false,
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "createdAt": "2023-04-24T04:27:30.202Z",
        "id": "6445fc893fc0718590cf8e89"
      },
      {
        "name": "wingardium_leviosa.mp3",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "6445fc893fc0718590cf8e8d",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/9285823e-9ae3-431a-80ce-04468f696989.mp3",
        "updatedAt": "2023-04-24T04:27:30.202Z",
        "createdAt": "2023-04-24T04:27:30.202Z",
        "isSelectedFile": false,
        "id": "6445fc893fc0718590cf8e8d"
      }
    ],
    "createdAt": "2023-04-24T03:50:34.279Z",
    "updatedAt": "2023-04-24T04:27:30.202Z",
    "id": "aN8TT2Q-M"
  },
  {
    "name": "XPhoto - Take Pic on Canvas",
    "_id": "QUXA7qWVG",
    "updatedAt": "2024-02-01T15:53:26.252Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65bbbc6713af7b4db4d68e53",
          "65bbbc6713af7b4db4d68e52",
          "65bbbc6713af7b4db4d68e54"
        ],
        "fileType": "folder",
        "_id": "65bbbc6713af7b4db4d68e55",
        "createdAt": "2024-02-01T15:53:26.252Z",
        "updatedAt": "2024-02-01T15:53:26.252Z",
        "isSelectedFile": false,
        "id": "65bbbc6713af7b4db4d68e55"
      },
      {
        "name": "sketch.js",
        "content": "let x = 0;\nlet num = 0\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction mousePressed() {\n  // saveCanvas(\"pic.jpg\");\n  // saveCanvas(\"pic.png\");\n  saveCanvas(`pic${num}.png`)\n}\n\n\nfunction draw() {\n  background(220);\n  circle(x, height / 2, 50);\n  x++;\n  if (x > width) {\n    x = 0;\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "65bbbc6713af7b4db4d68e52",
        "isSelectedFile": true,
        "createdAt": "2024-02-01T15:53:26.252Z",
        "updatedAt": "2024-02-01T15:53:26.252Z",
        "id": "65bbbc6713af7b4db4d68e52"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65bbbc6713af7b4db4d68e53",
        "createdAt": "2024-02-01T15:53:26.252Z",
        "updatedAt": "2024-02-01T15:53:26.252Z",
        "isSelectedFile": false,
        "id": "65bbbc6713af7b4db4d68e53"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65bbbc6713af7b4db4d68e54",
        "createdAt": "2024-02-01T15:53:26.252Z",
        "updatedAt": "2024-02-01T15:53:26.252Z",
        "isSelectedFile": false,
        "id": "65bbbc6713af7b4db4d68e54"
      }
    ],
    "createdAt": "2024-02-01T15:49:09.654Z",
    "id": "QUXA7qWVG"
  },
  {
    "name": "XPhoto • WK2 • Get external webcam",
    "_id": "-RoyqQUuN",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65bbc52bdeb85111f28a579c",
          "65bbc52bdeb85111f28a579d",
          "65bbc52bdeb85111f28a579e"
        ],
        "fileType": "folder",
        "_id": "65bbc52bdeb85111f28a579b",
        "isSelectedFile": false,
        "createdAt": "2024-02-01T16:25:34.738Z",
        "updatedAt": "2024-02-01T16:25:34.738Z",
        "id": "65bbc52bdeb85111f28a579b"
      },
      {
        "name": "sketch.js",
        "content": "/* \nExperimental Photography 2024\nInteractive Media Arts @ NYU\nEllen Nickles\n\nExternal webcams, apps, and tips:\nhttps://tinyurl.com/externalwebcams\n*/\n\nlet webcams = [];\nlet num = 0;\n\nfunction setup() {\n  pixelDensity(1);\n  // Reset canvas width and height based\n  // on camera capabilities, check Console\n  createCanvas(1920, 1080);\n  getVideoDevices();\n}\n\nfunction draw() {\n  // mirror video device\n  translate(width, 0);\n  scale(-1, 1);\n\n  // if any webcams are detected\n  if (webcams.length) {\n    // Specify camera, check Console\n    image(webcams[0], 0, 0, width, height);\n  }\n\n  // Convert to black and white\n  // Only use with built-in or Iriun camera\n  // filter(GRAY)\n  // For other webcams use separate apps\n  // linked in document above\n}\n\nfunction mousePressed() {\n  num++;\n  saveCanvas(`pic${num}.png`);\n}\n\n\nfunction getVideoDevices() {\n  navigator.mediaDevices\n    .enumerateDevices()\n    .then((devices) => {\n      return devices.filter((device) => device.kind === \"videoinput\");\n    })\n    .then((filtered) => getVideo(filtered))\n    .catch((err) => {\n      if (err.message.substring(0,19) === \"cam.getCapabilities\")\n        alert(\n          \"InputDeviceInfo.getCapabilities() is not supported in this browser. Try Chrome or MS Edge.\"\n        );\n      else console.warn(`${err.name}: ${err.message}`);\n    });\n}\n\n\nfunction getVideo(cams) {\n  for (let cam of cams) {\n    let index = cams.indexOf(cam);\n    let capabilities = cam.getCapabilities();\n    let constraints = {\n      audio: false,\n      video: {\n        deviceId: `${cam.deviceId}`,\n        width: `${capabilities.width.max}`,\n        height: `${capabilities.height.max}`,\n      },\n    };\n    webcams[index] = createCapture(constraints);\n    webcams[index].hide();\n\n    console.log(\n      `webcams[${index}]\\n${cam.label}\\nMax width:\\t${constraints.video.width}\\nMax height:\\t${constraints.video.height}\\n`\n    );\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65bbc52bdeb85111f28a579d",
        "isSelectedFile": true,
        "createdAt": "2024-02-01T16:25:34.738Z",
        "updatedAt": "2024-02-01T16:25:34.738Z",
        "id": "65bbc52bdeb85111f28a579d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65bbc52bdeb85111f28a579c",
        "isSelectedFile": false,
        "createdAt": "2024-02-01T16:25:34.738Z",
        "updatedAt": "2024-02-01T16:25:34.738Z",
        "id": "65bbc52bdeb85111f28a579c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65bbc52bdeb85111f28a579e",
        "isSelectedFile": false,
        "createdAt": "2024-02-01T16:25:34.738Z",
        "updatedAt": "2024-02-01T16:25:34.738Z",
        "id": "65bbc52bdeb85111f28a579e"
      }
    ],
    "createdAt": "2024-02-01T16:22:03.389Z",
    "updatedAt": "2024-02-01T16:25:34.738Z",
    "id": "-RoyqQUuN"
  },
  {
    "name": "交叉手碰脚运动",
    "_id": "5GiOk7H22",
    "updatedAt": "2022-12-10T05:16:11.343Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "638ac3e64815404166ac5936",
          "638ac3e64815404166ac5935",
          "638ac3e64815404166ac5937"
        ],
        "fileType": "folder",
        "_id": "638ac3e64815404166ac5938",
        "createdAt": "2022-12-10T05:16:11.343Z",
        "updatedAt": "2022-12-10T05:16:11.343Z",
        "isSelectedFile": false,
        "id": "638ac3e64815404166ac5938"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet poseNet;\nlet poses = {};\nlet leftWristX = 0;\nlet leftWristY = 0;\nlet rightWristX = 0;\nlet rightWristY = 0;\nlet leftAnkleX = 0;\nlet leftAnkleY = 0;\nlet rightAnkleX = 0;\nlet rightAnkleY = 0;\n\n\nfunction setup() {\n  createCanvas(600, 400);\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n    //console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftWrist.confidence > 0.5) {\n      leftWristX = poses[0].pose.leftWrist.x;\n      leftWristY = poses[0].pose.leftWrist.y;}\n      if (poses[0].pose.rightWrist.confidence > 0.5){\n      rightWristX = poses[0].pose.rightWrist.x;\n      rightWristY = poses[0].pose.rightWrist.y;\n      }\n       if (poses[0].pose.leftAnkle.confidence > 0.8) {\n      leftAnkleX = poses[0].pose.leftAnkle.x;\n      leftAnkleY = poses[0].pose.leftAnkle.y;}\n      if (poses[0].pose.rightAnkle.confidence > 0.8){\n      rightAnkleX = poses[0].pose.rightAnkle.x;\n      rightAnkleY = poses[0].pose.rightAnkle.y;\n  //   console.log(\"x: \" + leftWristX);\n      \n      }\n    }    \n  });\n}\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftWristX,leftWristY,30,30);\n  ellipse(rightWristX, rightWristY,30,30)\n  ellipse(leftAnkleX,leftAnkleY,20)\n  ellipse(rightAnkleX,rightAnkleY,20)\n  \n  \n     if (leftWristX <=100+rightAnkleX)  {\n      textSize(60);\n    textAlign(CENTER);\n    text('😀',0, 12, width)\n  }\n}\n\n// When the model is loaded\nfunction modelLoaded() {\n  console.log('Model Loaded!');\n}\n\n\n\n\n\n/*\nconst video = document.getElementById('video');\n\n// Create a new poseNet method\nconst poseNet = ml5.poseNet(video, modelLoaded);\n\n\n\n\n\n*/",
        "children": [],
        "fileType": "file",
        "_id": "638ac3e64815404166ac5935",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T05:16:11.343Z",
        "updatedAt": "2022-12-10T05:16:11.343Z",
        "id": "638ac3e64815404166ac5935"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "638ac3e64815404166ac5936",
        "createdAt": "2022-12-10T05:16:11.343Z",
        "updatedAt": "2022-12-10T05:16:11.343Z",
        "isSelectedFile": false,
        "id": "638ac3e64815404166ac5936"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "638ac3e64815404166ac5937",
        "createdAt": "2022-12-10T05:16:11.343Z",
        "updatedAt": "2022-12-10T05:16:11.343Z",
        "isSelectedFile": false,
        "id": "638ac3e64815404166ac5937"
      }
    ],
    "createdAt": "2022-12-03T03:35:14.895Z",
    "id": "5GiOk7H22"
  },
  {
    "name": "交叉手碰脚运动 试验",
    "_id": "8Dk1OUezw",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6390eb4aae53a40fec2b9aa3",
          "6390eb4aae53a40fec2b9aa4",
          "6390eb4aae53a40fec2b9aa5"
        ],
        "fileType": "folder",
        "_id": "6390eb4aae53a40fec2b9aa2",
        "createdAt": "2022-12-07T19:40:21.995Z",
        "updatedAt": "2022-12-07T19:40:21.995Z",
        "isSelectedFile": false,
        "id": "6390eb4aae53a40fec2b9aa2"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet poseNet;\nlet poses = {};\nlet leftWristX = 0;\nlet leftWristY = 0;\nlet rightWristX = 0;\nlet rightWristY = 0;\nlet leftAnkleX = 0;\nlet leftAnkleY = 0;\nlet rightAnkleX = 0;\nlet rightAnkleY = 0;\nlet state = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  if (state == 0) {\n    drawEnter();\n  } else if (state == 1) {\n    drawPlay();\n  } else if (state == 2) {\n    drawExit();\n  }\n  \n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n  // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on(\"pose\", (results) => {\n    poses = results;\n    //console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftWrist.confidence > 0.5) {\n        leftWristX = poses[0].pose.leftWrist.x;\n        leftWristY = poses[0].pose.leftWrist.y;\n      }\n      if (poses[0].pose.rightWrist.confidence > 0.5) {\n        rightWristX = poses[0].pose.rightWrist.x;\n        rightWristY = poses[0].pose.rightWrist.y;\n      }\n      if (poses[0].pose.leftAnkle.confidence > 0.8) {\n        leftAnkleX = poses[0].pose.leftAnkle.x;\n        leftAnkleY = poses[0].pose.leftAnkle.y;\n      }\n      if (poses[0].pose.rightAnkle.confidence > 0.8) {\n        rightAnkleX = poses[0].pose.rightAnkle.x;\n        rightAnkleY = poses[0].pose.rightAnkle.y;\n        //   console.log(\"x: \" + leftWristX);\n      }\n    }\n  });\n}\n\nfunction mousePressed() {\n  state++;\n  if (state > 2) {\n    state = 0;\n  }\n}\n\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0);\n  fill(255, 0, 0);\n  noStroke();\n  ellipse(leftWristX, leftWristY, 30, 30);\n  ellipse(rightWristX, rightWristY, 30, 30);\n  ellipse(leftAnkleX, leftAnkleY, 20);\n  ellipse(rightAnkleX, rightAnkleY, 20);\n\n  if (leftWristX <= 100 + rightAnkleX) {\n    textSize(60);\n    textAlign(CENTER);\n    text(\"😀\", 0, 12, width);\n  }\n}\n\nfunction drawEnter() {\n  // Blue background\n  background(60,92,165);\n  \n  // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('EXERCISE BEGIN!', width/2, height/2);\n  \n  // if (mouseIsPressed) {\n  //   state = 1;\n  // }\n  \n}\n\nfunction drawPlay() {\n  ellipse(leftWristX, leftWristY, 30, 30);\n  ellipse(rightWristX, rightWristY, 30, 30);\n  ellipse(leftAnkleX, leftAnkleY, 20);\n  ellipse(rightAnkleX, rightAnkleY, 20);\n\n  if (leftWristX <= 100 + rightAnkleX) {\n    textSize(60);\n    textAlign(CENTER);\n    text(\"😀\", 0, 12, width);\n  }\n}\n\nfunction drawExit() {\n  background(60,92,165);\n   // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('WELL DONE!', width/2, height/2);\n  \n}\n\n// When the model is loaded\nfunction modelLoaded() {\n  console.log(\"Model Loaded!\");\n}\n\n/*\nconst video = document.getElementById('video');\n\n// Create a new poseNet method\nconst poseNet = ml5.poseNet(video, modelLoaded);\n\n\n\n\n\n*/\n",
        "children": [],
        "fileType": "file",
        "_id": "6390eb4aae53a40fec2b9aa4",
        "isSelectedFile": true,
        "createdAt": "2022-12-07T19:40:21.995Z",
        "updatedAt": "2022-12-07T19:40:21.995Z",
        "id": "6390eb4aae53a40fec2b9aa4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6390eb4aae53a40fec2b9aa3",
        "createdAt": "2022-12-07T19:40:21.995Z",
        "updatedAt": "2022-12-07T19:40:21.995Z",
        "isSelectedFile": false,
        "id": "6390eb4aae53a40fec2b9aa3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6390eb4aae53a40fec2b9aa5",
        "createdAt": "2022-12-07T19:40:21.995Z",
        "updatedAt": "2022-12-07T19:40:21.995Z",
        "isSelectedFile": false,
        "id": "6390eb4aae53a40fec2b9aa5"
      }
    ],
    "createdAt": "2022-12-07T19:36:42.378Z",
    "updatedAt": "2022-12-07T19:40:21.995Z",
    "id": "8Dk1OUezw"
  },
  {
    "name": "交叉手碰脚运动final",
    "_id": "N_YQEU7TG",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6390e70ddc717867ca21ac8d",
          "6390e70ddc717867ca21ac8e",
          "6390e70ddc717867ca21ac8f",
          "639416acb65147001c577d2e"
        ],
        "fileType": "folder",
        "_id": "6390e70ddc717867ca21ac8c",
        "createdAt": "2022-12-10T15:10:14.160Z",
        "updatedAt": "2022-12-10T15:10:14.160Z",
        "isSelectedFile": false,
        "id": "6390e70ddc717867ca21ac8c"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0;\nlet video;\nlet poseNet;\nlet vid;\nlet poses = {};\nlet leftWristX = 0;\nlet leftWristY = 0;\nlet rightWristX = 0;\nlet rightWristY = 0;\nlet leftAnkleX = 0;\nlet leftAnkleY = 0;\nlet rightAnkleX = 0;\nlet rightAnkleY = 0;\nlet timer = 10; \n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  vid= createVideo(\n    ['交叉碰腿 (1).mov'],\n    vidLoad\n);\n  vid.size (200,200)\n  \n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n    //console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftWrist.confidence > 0.5) {\n      leftWristX = poses[0].pose.leftWrist.x;\n      leftWristY = poses[0].pose.leftWrist.y;}\n      if (poses[0].pose.rightWrist.confidence > 0.5){\n      rightWristX = poses[0].pose.rightWrist.x;\n      rightWristY = poses[0].pose.rightWrist.y;\n      }\n       if (poses[0].pose.leftAnkle.confidence > 0.8) {\n      leftAnkleX = poses[0].pose.leftAnkle.x;\n      leftAnkleY = poses[0].pose.leftAnkle.y;}\n      if (poses[0].pose.rightAnkle.confidence > 0.8){\n      rightAnkleX = poses[0].pose.rightAnkle.x;\n      rightAnkleY = poses[0].pose.rightAnkle.y;\n  //   console.log(\"x: \" + leftWristX);\n      \n      }\n    }    \n  });\n}\n\n\nfunction draw() {\n  //background(220);\n  // Check state , draw different screens\n  if (state == 0) {\n    drawEnter();\n  } else if (state == 1) {\n    drawPlay();\n  } else if (state == 2) {\n    drawExit();\n  }\n\n}\n\nfunction mousePressed() {\n  state++;\n  if (state > 2) {\n    state = 0;\n  }\n}\n\n// Enter Screen\nfunction drawEnter() {\n  // Blue background\n  background(60,92,165);\n  \n  // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('EXERCISE BEGIN!', width/2, height/2);\n  \n  // if (mouseIsPressed) {\n  //   state = 1;\n  // }\n  \n}\n\n// Game Play Screen\nfunction drawPlay() {\n   background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftWristX,leftWristY,30,30);\n  ellipse(rightWristX, rightWristY,30,30)\n  ellipse(leftAnkleX,leftAnkleY,20)\n  ellipse(rightAnkleX,rightAnkleY,20)\n  \n  \n     if (leftWristX <=50+rightAnkleX)  {\n       fill(255)\n      textSize(60);\n    textAlign(CENTER, TOP);\n    text('Correct!',0, 12, width)\n  }\n  \n  \n  //Countdown\n  fill(225,225,225)\n  textSize(20);\n  textAlign(LEFT)\n  text(timer, 190,300);\n  text(\"Time remaining：\",30,300);\n  if (frameCount % 60 == 0 && timer > 0) {\n    timer--;\n  }\n      if(timer==0){\n       drawExit();\n    }\n\n  // if (mouseIsPressed) {\n  //   state = 2;\n  // }\n}\n\n// End Game Screen\nfunction drawExit() {\n  background(60,92,165);\n   // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('WELL DONE!', width/2, height/2);\n  \n}\n  \n  function modelLoaded() {\n  console.log('Model Loaded!');\n\n  \n}\n\nfunction vidLoad() {\n  vid.loop();\n  vid.volume(0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6390e70ddc717867ca21ac8e",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T15:10:14.160Z",
        "updatedAt": "2022-12-10T15:10:14.160Z",
        "id": "6390e70ddc717867ca21ac8e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6390e70ddc717867ca21ac8d",
        "createdAt": "2022-12-10T15:10:14.160Z",
        "updatedAt": "2022-12-10T15:10:14.160Z",
        "isSelectedFile": false,
        "id": "6390e70ddc717867ca21ac8d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6390e70ddc717867ca21ac8f",
        "createdAt": "2022-12-10T15:10:14.160Z",
        "updatedAt": "2022-12-10T15:10:14.160Z",
        "isSelectedFile": false,
        "id": "6390e70ddc717867ca21ac8f"
      },
      {
        "name": "交叉碰腿 (1).mov",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "639416acb65147001c577d2e",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/3099a79b-12fa-46b6-8daf-c657b8ddfe19.mov",
        "isSelectedFile": false,
        "updatedAt": "2022-12-10T15:10:14.160Z",
        "createdAt": "2022-12-10T15:10:14.160Z",
        "id": "639416acb65147001c577d2e"
      }
    ],
    "createdAt": "2022-12-07T19:18:37.706Z",
    "updatedAt": "2022-12-10T15:10:14.160Z",
    "id": "N_YQEU7TG"
  },
  {
    "name": "打拳final",
    "_id": "V_nz-Jj0K",
    "updatedAt": "2022-12-10T05:38:46.039Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63941926ae53a40fec2b9aa7",
          "63941926ae53a40fec2b9aa6",
          "63941926ae53a40fec2b9aa8",
          "63941a19b65147001c5790eb"
        ],
        "fileType": "folder",
        "_id": "63941926ae53a40fec2b9aa9",
        "createdAt": "2022-12-10T05:38:46.039Z",
        "updatedAt": "2022-12-10T05:38:46.039Z",
        "isSelectedFile": false,
        "id": "63941926ae53a40fec2b9aa9"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0;\nlet video;\nlet poseNet;\nlet vid;\nlet poses = {};\nlet leftWristX = 0;\nlet leftWristY = 0;\nlet rightWristX = 0;\nlet rightWristY = 0;\nlet timer = 10; \n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  vid= createVideo(\n    ['打拳 (1).mov'],\n    vidLoad\n);\n  vid.size (200,200)\n  \n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n    //console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftWrist.confidence > 0.5) {\n      leftWristX = poses[0].pose.leftWrist.x;\n      leftWristY = poses[0].pose.leftWrist.y;}\n      if (poses[0].pose.rightWrist.confidence > 0.5){\n      rightWristX = poses[0].pose.rightWrist.x;\n      rightWristY = poses[0].pose.rightWrist.y;\n      }\n  //   console.log(\"x: \" + leftWristX);\n      \n      }    \n  });\n}\n\n\nfunction draw() {\n  //background(220);\n  // Check state , draw different screens\n  if (state == 0) {\n    drawEnter();\n  } else if (state == 1) {\n    drawPlay();\n  } else if (state == 2) {\n    drawExit();\n  }\n\n}\n\nfunction mousePressed() {\n  state++;\n  if (state > 2) {\n    state = 0;\n  }\n}\n\n// Enter Screen\nfunction drawEnter() {\n  // Blue background\n  background(60,92,165);\n  \n  // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('EXERCISE BEGIN!', width/2, height/2);\n  \n  // if (mouseIsPressed) {\n  //   state = 1;\n  // }\n  \n}\n\n// Game Play Screen\nfunction drawPlay() {\n   background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftWristX,leftWristY,30,30);\n  ellipse(rightWristX, rightWristY,30,30)\n  \n  \n     if (leftWristX <=100)  {\n       fill(255)\n      textSize(60);\n    textAlign(CENTER, TOP);\n    text('Correct!',0, 12, width)\n  }\n  \n  //Countdown\n  fill(225,225,225)\n  textSize(20);\n  textAlign(LEFT)\n  text(timer, 190,300);\n  text(\"Time remaining：\",30,300);\n  if (frameCount % 60 == 0 && timer > 0) {\n    timer--;\n  }\n      if(timer==0){\n       drawExit();\n    }\n\n  // if (mouseIsPressed) {\n  //   state = 2;\n  // }\n}\n\n// End Game Screen\nfunction drawExit() {\n  background(60,92,165);\n   // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('WELL DONE!', width/2, height/2);\n  \n}\n  \n  function modelLoaded() {\n  console.log('Model Loaded!');\n\n  \n}\n\nfunction vidLoad() {\n  vid.loop();\n  vid.volume(0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63941926ae53a40fec2b9aa6",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T05:38:46.039Z",
        "updatedAt": "2022-12-10T05:38:46.039Z",
        "id": "63941926ae53a40fec2b9aa6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63941926ae53a40fec2b9aa7",
        "createdAt": "2022-12-10T05:38:46.039Z",
        "updatedAt": "2022-12-10T05:38:46.039Z",
        "isSelectedFile": false,
        "id": "63941926ae53a40fec2b9aa7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63941926ae53a40fec2b9aa8",
        "createdAt": "2022-12-10T05:38:46.039Z",
        "updatedAt": "2022-12-10T05:38:46.039Z",
        "isSelectedFile": false,
        "id": "63941926ae53a40fec2b9aa8"
      },
      {
        "name": "打拳 (1).mov",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63941a19b65147001c5790eb",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/a2135f73-1bc2-4de4-8ff0-88dab4dd2b2d.mov",
        "isSelectedFile": false,
        "updatedAt": "2022-12-10T05:38:46.039Z",
        "createdAt": "2022-12-10T05:38:46.039Z",
        "id": "63941a19b65147001c5790eb"
      }
    ],
    "createdAt": "2022-12-10T05:30:37.926Z",
    "id": "V_nz-Jj0K"
  },
  {
    "name": "打拳实验",
    "_id": "r5vdwoCeL",
    "updatedAt": "2022-12-10T05:46:03.361Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63941b2a75c7574fc0d4269c",
          "63941b2a75c7574fc0d4269b",
          "63941b2a75c7574fc0d4269d"
        ],
        "fileType": "folder",
        "_id": "63941b2a75c7574fc0d4269e",
        "isSelectedFile": false,
        "createdAt": "2022-12-10T05:46:03.361Z",
        "updatedAt": "2022-12-10T05:46:03.361Z",
        "id": "63941b2a75c7574fc0d4269e"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet poseNet;\nlet poses = {};\nlet leftWristX = 0;\nlet leftWristY = 0;\nlet rightWristX = 0;\nlet rightWristY = 0;\n\n\n\nfunction setup() {\n  createCanvas(600, 400);\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n    //console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftWrist.confidence > 0.5) {\n      leftWristX = poses[0].pose.leftWrist.x;\n      leftWristY = poses[0].pose.leftWrist.y;}\n      if (poses[0].pose.rightWrist.confidence > 0.5){\n      rightWristX = poses[0].pose.rightWrist.x;\n      rightWristY = poses[0].pose.rightWrist.y;\n      }\n  //   console.log(\"x: \" + leftWristX);\n      \n    }    \n  });\n}\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftWristX,leftWristY,30,30);\n  ellipse(rightWristX, rightWristY,30,30)\n  \n  \n     if (leftWristX <=100)  {\n      textSize(60);\n    textAlign(CENTER);\n    text('😀',0, 12, width)\n  }\n}\n\n// When the model is loaded\nfunction modelLoaded() {\n  console.log('Model Loaded!');\n}\n\n\n\n\n\n/*\nconst video = document.getElementById('video');\n\n// Create a new poseNet method\nconst poseNet = ml5.poseNet(video, modelLoaded);\n\n\n\n\n\n*/",
        "children": [],
        "fileType": "file",
        "_id": "63941b2a75c7574fc0d4269b",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T05:46:03.361Z",
        "updatedAt": "2022-12-10T05:46:03.361Z",
        "id": "63941b2a75c7574fc0d4269b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63941b2a75c7574fc0d4269c",
        "isSelectedFile": false,
        "createdAt": "2022-12-10T05:46:03.361Z",
        "updatedAt": "2022-12-10T05:46:03.361Z",
        "id": "63941b2a75c7574fc0d4269c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63941b2a75c7574fc0d4269d",
        "isSelectedFile": false,
        "createdAt": "2022-12-10T05:46:03.361Z",
        "updatedAt": "2022-12-10T05:46:03.361Z",
        "id": "63941b2a75c7574fc0d4269d"
      }
    ],
    "createdAt": "2022-12-10T05:46:03.361Z",
    "id": "r5vdwoCeL"
  },
  {
    "name": "换手换腿跳final",
    "_id": "YN1sQlbWH",
    "updatedAt": "2022-12-10T16:20:06.077Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "63941f3475c7574fc0d426a0",
          "63941f3475c7574fc0d4269f",
          "63941f3475c7574fc0d426a1",
          "63941fb2659951001a58c910"
        ],
        "fileType": "folder",
        "_id": "63941f3475c7574fc0d426a2",
        "createdAt": "2022-12-10T16:20:06.077Z",
        "updatedAt": "2022-12-10T16:20:06.077Z",
        "isSelectedFile": false,
        "id": "63941f3475c7574fc0d426a2"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0;\nlet video;\nlet poseNet;\nlet vid;\nlet poses = {};\nlet leftKneeX = 0;\nlet leftKneeY = 0;\nlet rightKneeX = 0;\nlet rightKneeY = 0;\nlet timer = 10; \n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  vid= createVideo(\n    ['换手换腿跳.mov'],\n    vidLoad\n);\n  vid.size (200,200)\n  \n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n   // console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftKnee.confidence > 0.5) {\n      leftKneeX = poses[0].pose.leftKnee.x;\n      leftKneeY = poses[0].pose.leftKnee.y;}\n      if (poses[0].pose.rightKnee.confidence > 0.5){\n      rightKneeX = poses[0].pose.rightKnee.x;\n      rightKneeY = poses[0].pose.rightKnee.y;\n      }\n  //   console.log(\"x: \" + leftKneeX);\n      \n      }    \n  });\n}\n\n\nfunction draw() {\n  //background(220);\n  // Check state , draw different screens\n  if (state == 0) {\n    drawEnter();\n  } else if (state == 1) {\n    drawPlay();\n  } else if (state == 2) {\n    drawExit();\n  }\n\n}\n\nfunction mousePressed() {\n  state++;\n  if (state > 2) {\n    state = 0;\n  }\n}\n\n// Enter Screen\nfunction drawEnter() {\n  // Blue background\n  background(60,92,165);\n  \n  // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('EXERCISE BEGIN!', width/2, height/2);\n  \n  // if (mouseIsPressed) {\n  //   state = 1;\n  // }\n  \n}\n\n// Game Play Screen\nfunction drawPlay() {\n   background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftKneeX,leftKneeY,30,30);\n  ellipse(rightKneeX, rightKneeY,30,30)\n  \n  \n     if (leftKneeX <=230)  {\n       fill(255)\n      textSize(60);\n    textAlign(CENTER, TOP);\n    text('Correct!',0, 12, width)\n  }\n  \n  //Countdown\n  fill(225,225,225)\n  textSize(20);\n  textAlign(LEFT)\n  text(timer, 190,300);\n  text(\"Time remaining：\",30,300);\n  if (frameCount % 60 == 0 && timer > 0) {\n    timer--;\n  }\n      if(timer==0){\n       drawExit();\n    }\n\n  // if (mouseIsPressed) {\n  //   state = 2;\n  // }\n}\n\n// End Game Screen\nfunction drawExit() {\n  background(60,92,165);\n   // Draw the title - hot pink letters\n  fill(225);\n  textSize(32);\n  textFont('Georgia')\n  textAlign(CENTER);\n  text('WELL DONE!', width/2, height/2);\n  \n}\n  \n  function modelLoaded() {\n  console.log('Model Loaded!');\n\n  \n}\n\nfunction vidLoad() {\n  vid.loop();\n  vid.volume(0);\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63941f3475c7574fc0d4269f",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T16:20:06.077Z",
        "updatedAt": "2022-12-10T16:20:06.077Z",
        "id": "63941f3475c7574fc0d4269f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "63941f3475c7574fc0d426a0",
        "createdAt": "2022-12-10T16:20:06.077Z",
        "updatedAt": "2022-12-10T16:20:06.077Z",
        "isSelectedFile": false,
        "id": "63941f3475c7574fc0d426a0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "63941f3475c7574fc0d426a1",
        "createdAt": "2022-12-10T16:20:06.077Z",
        "updatedAt": "2022-12-10T16:20:06.077Z",
        "isSelectedFile": false,
        "id": "63941f3475c7574fc0d426a1"
      },
      {
        "name": "换手换腿跳.mov",
        "content": "",
        "children": [],
        "fileType": "file",
        "_id": "63941fb2659951001a58c910",
        "url": "https://assets.editor.p5js.org/6331f1580d11a7001c174ac0/5e6c222e-8319-4d2f-8387-b2a5921af39b.mov",
        "isSelectedFile": false,
        "updatedAt": "2022-12-10T16:20:06.077Z",
        "createdAt": "2022-12-10T16:20:06.077Z",
        "id": "63941fb2659951001a58c910"
      }
    ],
    "createdAt": "2022-12-10T05:55:39.430Z",
    "id": "YN1sQlbWH"
  },
  {
    "name": "换手换腿跳实验",
    "_id": "JV2MQUkOO",
    "updatedAt": "2022-12-10T06:07:46.881Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "639420eb6efa3541ec0448ba",
          "639420eb6efa3541ec0448b9",
          "639420eb6efa3541ec0448bb"
        ],
        "fileType": "folder",
        "_id": "639420eb6efa3541ec0448bc",
        "createdAt": "2022-12-10T06:07:46.881Z",
        "updatedAt": "2022-12-10T06:07:46.881Z",
        "isSelectedFile": false,
        "id": "639420eb6efa3541ec0448bc"
      },
      {
        "name": "sketch.js",
        "content": "let state = 0;\nlet video;\nlet poseNet;\nlet vid;\nlet poses = {};\nlet leftKneeX = 0;\nlet leftKneeY = 0;\nlet rightKneeX = 0;\nlet rightKneeY = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n   video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n // poseNet.flipHorizontal = true;\n  // Listen to new 'pose' events\n  poseNet.on('pose', (results) => {\n    poses = results;\n   // console.log(poses);\n    if (poses.length > 0) {\n      if (poses[0].pose.leftKnee.confidence > 0.5) {\n      leftKneeX = poses[0].pose.leftKnee.x;\n      leftKneeY = poses[0].pose.leftKnee.y;}\n      if (poses[0].pose.rightKnee.confidence > 0.5){\n      rightKneeX = poses[0].pose.rightKnee.x;\n      rightKneeY = poses[0].pose.rightKnee.y;\n      }\n     console.log(\"x: \" + leftKneeX);\n      \n      }    \n  });\n\n}\n\nfunction draw() {\n  \n   background(220);\n  image(video, 0, 0, );\n  fill(255,0,0)\n  noStroke()\n  ellipse(leftKneeX,leftKneeY,30,30);\n  ellipse(rightKneeX, rightKneeY,30,30)\n  \n  \n     if (leftKneeX <=230)  {\n       fill(255)\n      textSize(60);\n    textAlign(CENTER, TOP);\n    text('Correct!',0, 12, width)\n  }\n  \n}\n\n function modelLoaded() {\n  console.log('Model Loaded!');\n\n  \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "639420eb6efa3541ec0448b9",
        "isSelectedFile": true,
        "createdAt": "2022-12-10T06:07:46.881Z",
        "updatedAt": "2022-12-10T06:07:46.881Z",
        "id": "639420eb6efa3541ec0448b9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@latest/dist/ml5.min.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "639420eb6efa3541ec0448ba",
        "createdAt": "2022-12-10T06:07:46.881Z",
        "updatedAt": "2022-12-10T06:07:46.881Z",
        "isSelectedFile": false,
        "id": "639420eb6efa3541ec0448ba"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "639420eb6efa3541ec0448bb",
        "createdAt": "2022-12-10T06:07:46.881Z",
        "updatedAt": "2022-12-10T06:07:46.881Z",
        "isSelectedFile": false,
        "id": "639420eb6efa3541ec0448bb"
      }
    ],
    "createdAt": "2022-12-10T06:02:35.698Z",
    "id": "JV2MQUkOO"
  }
]
